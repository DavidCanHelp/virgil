// Use an ADT to define a cons list.
type List<T> {
	case Nil;
	case Cons(cdr: T, car: List<T>);
}

// Build some simple cons lists
var x: List<int> = List.Cons(0, List<int>.Nil); // type argument inferred
var y = List.Cons(0, List<int>.Nil); // var type and type argument inferred
var z = List.Cons(1, x);
