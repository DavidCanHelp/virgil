// The {Maybe} algebraic data type can express 0 or 1 value of type {T}
type Maybe<T> {
	case None;
	case Some(t: T);
}

var v1: Maybe<int> = Maybe<int>.None;		// explicit type argument
var v2: Maybe<int> = Maybe.None;		// inferred type argument
var v3: Maybe<int> = Maybe<int>.Some(1);	// explicit type argument
var v4: Maybe<int> = Maybe.Some(2);		// inferred type argument

var v5 = Maybe<int>.None;	// explicit type argument
var v6 = Maybe.Some(2);		// inferred type argument

var v7 = [
	Maybe.Some("string"), Maybe<string>.None
];
