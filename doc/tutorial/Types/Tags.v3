// All ADTs in Virgil implicitly have a {tag} field that corresponds
// to their case in declaration order. It is useful in situations where we
// would like to index into another data structure dynamically based on
// the case.

// All the types of enemies in a game.
type Enemy {
	case Gru;		// .tag == 0
	case Bear;		// .tag == 1
	case Lion;		// .tag == 2
	case Tank;		// .tag == 3
	case Boss(level: int);	// .tag == 4
}

// Stores the current handicaps for each type of enemy.
class Handicap {
	// An array indexed by the enemy's {tag} stores the current value
	// for that type of enemy.
	private def handicap = Array<int>.new(Enemy.Boss.tag + 1);

	// Penalize all enemies that have the same type as the given enemy.
	def nerf(e: Enemy) {
		handicap[e.tag]++;  // index into array by the tag
	}

	// Get the current handicap for given enemy.
	def get(e: Enemy) -> int {
		return handicap[e.tag];  // index into array by the tag
	}
}
