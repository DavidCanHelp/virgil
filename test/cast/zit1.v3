//@execute = !TypeCheckException
def main() -> int {
	test_i64_const(InterpreterTester.new());
	return 0;
}
class InterpreterTester {
	def sig(sig: SigDecl) -> this { }
	def code(c: Array<byte>) -> this { }
	def assert_u64(c: Array<u64>, v: u64) -> this { }
}
class SigDecl { }
def v_l = SigDecl.new();
def X = Array<u64>.new(3);
def test_i64_const(i: InterpreterTester) {
        i.sig(v_l);
        i.code([Opcode.I64_CONST.code, 1]).assert_u64(X, 1);
        i.code([Opcode.I64_CONST.code, 33]).assert_u64(X, 33);
        i.code([Opcode.I64_CONST.code, 0x70]).assert_u64(X, u64.!(-16));
        i.code([Opcode.I64_CONST.code, 0x81, 0x82, 0x83, 0x84,
                0x85, 0x86, 0x87, 0x88, 0x09]).assert_u64(X, 653052939803345153);
}
enum Opcode(code: byte) {
	I64_CONST(33)
}