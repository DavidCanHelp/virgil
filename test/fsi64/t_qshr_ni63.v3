//@execute 1=3; 2=3; 3=3; 4=3; 5=3; 6=3; 7=3; 8=3; 9=3; 10=3; 11=3; 12=3; 13=3; 14=3; 15=3; 16=3; 17=3; 18=3; 19=3; 20=3; 21=3; 22=3; 23=3; 24=3; 25=3; 26=3; 27=3; 28=3; 29=3; 30=3; 31=3; 32=3; 33=3; 34=3; 35=3; 36=3; 37=3; 38=3; 39=3; 40=3; 41=3; 42=3; 43=3; 44=3; 45=3; 46=3; 47=3; 48=3; 49=3; 50=3; 51=3; 52=3; 53=3; 54=3; 55=3; 56=3; 57=3; 58=3; 59=3; 60=3; 61=3; 62=3; 63=3; 64=3; 65=3
def vals: Array<i63> = [
	0b101001111011010011110001011100000011111100010110001010010011111,
	0b010100111101101001111000101110000001111110001011000101001001111,
	0b001010011110110100111100010111000000111111000101100010100100111,
	0b000101001111011010011110001011100000011111100010110001010010011,
	0b000010100111101101001111000101110000001111110001011000101001001,
	0b000001010011110110100111100010111000000111111000101100010100100,
	0b000000101001111011010011110001011100000011111100010110001010010,
	0b000000010100111101101001111000101110000001111110001011000101001,
	0b000000001010011110110100111100010111000000111111000101100010100,
	0b000000000101001111011010011110001011100000011111100010110001010,
	0b000000000010100111101101001111000101110000001111110001011000101,
	0b000000000001010011110110100111100010111000000111111000101100010,
	0b000000000000101001111011010011110001011100000011111100010110001,
	0b000000000000010100111101101001111000101110000001111110001011000,
	0b000000000000001010011110110100111100010111000000111111000101100,
	0b000000000000000101001111011010011110001011100000011111100010110,
	0b000000000000000010100111101101001111000101110000001111110001011,
	0b000000000000000001010011110110100111100010111000000111111000101,
	0b000000000000000000101001111011010011110001011100000011111100010,
	0b000000000000000000010100111101101001111000101110000001111110001,
	0b000000000000000000001010011110110100111100010111000000111111000,
	0b000000000000000000000101001111011010011110001011100000011111100,
	0b000000000000000000000010100111101101001111000101110000001111110,
	0b000000000000000000000001010011110110100111100010111000000111111,
	0b000000000000000000000000101001111011010011110001011100000011111,
	0b000000000000000000000000010100111101101001111000101110000001111,
	0b000000000000000000000000001010011110110100111100010111000000111,
	0b000000000000000000000000000101001111011010011110001011100000011,
	0b000000000000000000000000000010100111101101001111000101110000001,
	0b000000000000000000000000000001010011110110100111100010111000000,
	0b000000000000000000000000000000101001111011010011110001011100000,
	0b000000000000000000000000000000010100111101101001111000101110000,
	0b000000000000000000000000000000001010011110110100111100010111000,
	0b000000000000000000000000000000000101001111011010011110001011100,
	0b000000000000000000000000000000000010100111101101001111000101110,
	0b000000000000000000000000000000000001010011110110100111100010111,
	0b000000000000000000000000000000000000101001111011010011110001011,
	0b000000000000000000000000000000000000010100111101101001111000101,
	0b000000000000000000000000000000000000001010011110110100111100010,
	0b000000000000000000000000000000000000000101001111011010011110001,
	0b000000000000000000000000000000000000000010100111101101001111000,
	0b000000000000000000000000000000000000000001010011110110100111100,
	0b000000000000000000000000000000000000000000101001111011010011110,
	0b000000000000000000000000000000000000000000010100111101101001111,
	0b000000000000000000000000000000000000000000001010011110110100111,
	0b000000000000000000000000000000000000000000000101001111011010011,
	0b000000000000000000000000000000000000000000000010100111101101001,
	0b000000000000000000000000000000000000000000000001010011110110100,
	0b000000000000000000000000000000000000000000000000101001111011010,
	0b000000000000000000000000000000000000000000000000010100111101101,
	0b000000000000000000000000000000000000000000000000001010011110110,
	0b000000000000000000000000000000000000000000000000000101001111011,
	0b000000000000000000000000000000000000000000000000000010100111101,
	0b000000000000000000000000000000000000000000000000000001010011110,
	0b000000000000000000000000000000000000000000000000000000101001111,
	0b000000000000000000000000000000000000000000000000000000010100111,
	0b000000000000000000000000000000000000000000000000000000001010011,
	0b000000000000000000000000000000000000000000000000000000000101001,
	0b000000000000000000000000000000000000000000000000000000000010100,
	0b000000000000000000000000000000000000000000000000000000000001010,
	0b000000000000000000000000000000000000000000000000000000000000101,
	0b000000000000000000000000000000000000000000000000000000000000010,
	0b000000000000000000000000000000000000000000000000000000000000001,
	0b000000000000000000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000000000000000000
];
def main(a: byte) -> int {
	for (x = a; x < vals.length; x = x + a) {
		var n = vals(x - a) >>> a;
		if (n != vals(x)) return -3;
	}
	return 3;
}
