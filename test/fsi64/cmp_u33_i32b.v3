//@execute = 88
def input: Array<i32> = [
	-2147483647,
	0xF0FFFFFF,
	0x80FFFFFF,
	0x800FFFFF,
	0x8000FFFF,
	0x80000FFF,
	0x800000FF,
	0x8000000F,
	-101,
	-100,
	-99,
	-1,
	0,
	1,
	97,
	100,
	102,
	0x00000044,
	0x000000FF,
	0x00000FFF,
	0x0000FFFF,
	0x000FFFFF,
	0x00FFFFFF,
	0x0FFFFFFF,
	2147483647
];
def MAX = 2147483647;
def delta = [
	u33.!(0 - MAX - 1),
	u33.!(0 - MAX),
	u33.!(0 - 100000),
	u33.!(0 - 100),
	u33.!(0 - 2),
	u33.!(0 - 1),
	u33.!(0 + 0),
	u33.!(0 + 1),
	u33.!(0 + 2),
	u33.!(0 + 105),
	u33.!(0 + 1000007),
	u33.!(0 + MAX),
	u33.!(0 + MAX + 1)
];
def cmp(a: u33, b: i32) -> int {
	var r = 0;
	if (!(a == b)) r = r | 0b000000000001;
	if (!(a != b)) r = r | 0b000000000010;
	if (!(a <  b)) r = r | 0b000000000100;
	if (!(a <= b)) r = r | 0b000000001000;
	if (!(a >  b)) r = r | 0b000000010000;
	if (!(a >= b)) r = r | 0b000000100000;
	if (!(b == a)) r = r | 0b000001000000;
	if (!(b != a)) r = r | 0b000010000000;
	if (!(b <  a)) r = r | 0b000100000000;
	if (!(b <= a)) r = r | 0b001000000000;
	if (!(b >  a)) r = r | 0b010000000000;
	if (!(b >= a)) r = r | 0b100000000000;
	return r;
}
def fail(i: i32) {
	var x = i / 0;
}
def test(i: i32) {
	def LT = 0xFFF ^ (3214);
	def EQ = 0xFFF ^ (2665);
	def GT = 0xFFF ^ (946);

	for (d in delta) {
		var ui = u33.!(i);
		var up = ui + d;
		var r = cmp(up, i);
		if (i < 0) {
			if (r != GT) return fail(i);
		} else {
			if (up < ui)  if (r != LT) return fail(i);
			if (up == ui) if (r != EQ) return fail(i);
			if (up > ui)  if (r != GT) return fail(i);
		}
	}
}
def main() -> int {
	for (i in input) test(i);
	return 88;
}
