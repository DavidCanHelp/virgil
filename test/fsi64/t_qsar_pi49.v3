//@execute 1=9; 2=9; 3=9; 4=9; 5=9; 6=9; 7=9; 8=9; 9=9; 10=9; 11=9; 12=9; 13=9; 14=9; 15=9; 16=9; 17=9; 18=9; 19=9; 20=9; 21=9; 22=9; 23=9; 24=9; 25=9; 26=9; 27=9; 28=9; 29=9; 30=9; 31=9; 32=9; 33=9; 34=9; 35=9; 36=9; 37=9; 38=9; 39=9; 40=9; 41=9; 42=9; 43=9; 44=9; 45=9; 46=9; 47=9; 48=9; 49=9; 50=9; 51=9
def vals: Array<i49> = [
	0b0010011001100010111111001101011110100010101110001,
	0b0001001100110001011111100110101111010001010111000,
	0b0000100110011000101111110011010111101000101011100,
	0b0000010011001100010111111001101011110100010101110,
	0b0000001001100110001011111100110101111010001010111,
	0b0000000100110011000101111110011010111101000101011,
	0b0000000010011001100010111111001101011110100010101,
	0b0000000001001100110001011111100110101111010001010,
	0b0000000000100110011000101111110011010111101000101,
	0b0000000000010011001100010111111001101011110100010,
	0b0000000000001001100110001011111100110101111010001,
	0b0000000000000100110011000101111110011010111101000,
	0b0000000000000010011001100010111111001101011110100,
	0b0000000000000001001100110001011111100110101111010,
	0b0000000000000000100110011000101111110011010111101,
	0b0000000000000000010011001100010111111001101011110,
	0b0000000000000000001001100110001011111100110101111,
	0b0000000000000000000100110011000101111110011010111,
	0b0000000000000000000010011001100010111111001101011,
	0b0000000000000000000001001100110001011111100110101,
	0b0000000000000000000000100110011000101111110011010,
	0b0000000000000000000000010011001100010111111001101,
	0b0000000000000000000000001001100110001011111100110,
	0b0000000000000000000000000100110011000101111110011,
	0b0000000000000000000000000010011001100010111111001,
	0b0000000000000000000000000001001100110001011111100,
	0b0000000000000000000000000000100110011000101111110,
	0b0000000000000000000000000000010011001100010111111,
	0b0000000000000000000000000000001001100110001011111,
	0b0000000000000000000000000000000100110011000101111,
	0b0000000000000000000000000000000010011001100010111,
	0b0000000000000000000000000000000001001100110001011,
	0b0000000000000000000000000000000000100110011000101,
	0b0000000000000000000000000000000000010011001100010,
	0b0000000000000000000000000000000000001001100110001,
	0b0000000000000000000000000000000000000100110011000,
	0b0000000000000000000000000000000000000010011001100,
	0b0000000000000000000000000000000000000001001100110,
	0b0000000000000000000000000000000000000000100110011,
	0b0000000000000000000000000000000000000000010011001,
	0b0000000000000000000000000000000000000000001001100,
	0b0000000000000000000000000000000000000000000100110,
	0b0000000000000000000000000000000000000000000010011,
	0b0000000000000000000000000000000000000000000001001,
	0b0000000000000000000000000000000000000000000000100,
	0b0000000000000000000000000000000000000000000000010,
	0b0000000000000000000000000000000000000000000000001,
	0b0000000000000000000000000000000000000000000000000,
	0b0000000000000000000000000000000000000000000000000,
	0b0000000000000000000000000000000000000000000000000,
	0b0000000000000000000000000000000000000000000000000,
	0b0000000000000000000000000000000000000000000000000,
	0b0000000000000000000000000000000000000000000000000,
	0b0000000000000000000000000000000000000000000000000
];
def main(a: byte) -> int {
	for (x = a; x < vals.length; x = x + a) {
		var n = vals(x - a) >> a;
		if (n != vals(x)) return -9;
	}
	return 9;
}
