//@execute = 114
def cases = [
	((0x5CF7B620691A56DB, 0x00746B2A521B29DD), 0x00325066FB74FABF),
	((0x257D339D8FB35AA2, 0x01D4FD701A599E8A), 0x00D966DB80B2F7DA),
	((0x6C9B92848CD32D26, 0x029775DD1067D426), 0x0259B21CEC323310),
	((0x3BE77A7004410D98, 0x052B2D120D80F3BE), 0x030C8AA96FB6946E),
	((0x3539D2A5189BAF59, 0x05CBE7D062D46E9F), 0x010EAC519F23CBC2),
	((0x50B15E94487DA952, 0x03FA3B4ED426B150), 0x0124BC6BB577CF12),
	((0x683A607D9CB340F1, 0x01374DC10F0D03DB), 0x00DD8F639D60F93A),
	((0x12C2842EC917AAC0, 0x0708443064FDE202), 0x04B1FBCDFF1BE6BC),
	((0x7E2173EB26B77AA3, 0x0225A0C730351FF9), 0x019B06CA3AAE3C39),
	((0x5BA29966D7B79DAE, 0x0567E6ADCF47DA4D), 0x05242E89E339F8DE),
	((0x4E22ACEE27DBD7A1, 0x002F0A99D8017997), 0x000A13868D68FBF2),
	((0x19FBD4A4A4FD5E01, 0x067F892F412AFC93), 0x067D3916E17C6848),
	((0x00A535E780F1CAD4, 0x04D06E53523A4549), 0x00A535E780F1CAD4),
	((0x1816FAD1F3EC40F8, 0x039B2A9204424FD7), 0x0273FB65DA5E61EE),
	((0x16D1EDDB66E63C20, 0x035AC5B4F621038B), 0x02B14B9DA22026DE),
	((0x40F9ED9C9EBB266C, 0x061DCFAC9EBDB8EB), 0x03CFD0DE6B51ED3E),
	((0x0B649AAF21F96DA4, 0x008F62EB4FBE9937), 0x0030E04CE7157558),
	((0x52F1C1B22E9D7212, 0x06F99D528C94A62B), 0x0637FF26243A4E39),
	((0x7F192369CD9648F9, 0x07F126D1F8E88276), 0x0006B64A3F0E2199),
	((0x1E715D0385B9ECB5, 0x03E7AED884B6FDAC), 0x031B9517E4B8FD01),
	((0x752DD275B64E1470, 0x07C4BBB7AED5F036), 0x00A6D2B277C50146),
	((0x044D9D02EC248D7E, 0x06EAB91869D21DF2), 0x044D9D02EC248D7E),
	((0x5A939FDDBF1D9057, 0x03EBE4A25567A01D), 0x0062154812CE2DBC),
	((0x5E8004E636502B2E, 0x04F989F50D29C124), 0x04F451AB496096A6),
	((0x6C85838FD6C07C32, 0x0339F112F4CF3F00), 0x020D701E48095D32),
	((0x5AB8F3E2B50D1560, 0x0140745E942E92BF), 0x0098394907F3CFA8),
	((0x115FCF9B79788403, 0x02916549A90D25D3), 0x01F76FE18329A111),
	((0x0E2A63712CC995CA, 0x033AB8D62EE647CB), 0x013F80187130769E),
	((0x58B09272834C9584, 0x050CE709ACC5411D), 0x02D53ACE0A334297),
	((0x2E142D8C3369597A, 0x06F6FA722DE3098E), 0x044A4EDF20172026),
	((0x1D9A012832659D68, 0x00A77EDD7235F2F0), 0x0028B43B1EE9E938),
	((0x60BADAF089A8C21A, 0x002BD062027202C2), 0x0007F2A12408ABF0),
	((0x30BFE9B1A8CDACA0, 0x034A3DDA5DA5BF5B), 0x02B087C089BD35A6),
	((0x0691F95C4EA11F2D, 0x025383F232D2DF45), 0x01EAF177E8FB60A3),
	((0x7D192D2700768592, 0x04D757E52C66935B), 0x041197C5AA7221AF),
	((0x2B82F9D0C9A2CF52, 0x01D80B1076B40E54), 0x0119FB561F7585C6),
	((0x4D1E42021C0C9161, 0x07BCC2759A977655), 0x077B6BDFACB96864),
	((0x045996CFF83A497E, 0x046A4F4FA5D99735), 0x045996CFF83A497E),
	((0x2BEDBE5DCABB3D2A, 0x02CA67DA78177603), 0x0211A890C15B52FD),
	((0x747EC29F13D50E44, 0x00F1D16BABBE5076), 0x004F23E38F646592),
	((0x581FEA3894A7BF42, 0x0479FEFDD2A69CEF), 0x0311FD61F24A1985),
	((0x144B1D83DC1B810E, 0x0213B94D97294999), 0x019999C98BA7EAAD),
	((0x5C2259B11987447A, 0x018897A8C7FBC360), 0x001ECE223A8579FA),
	((0x1059F407A0B4A962, 0x0122628F941B3749), 0x0078902D8737A364),
	((0x22148F48D255855D, 0x06B3EB479EA00AD6), 0x0090F6E2B9354F2F),
	((0x7E65C533C6C8DC1F, 0x025875810921B214), 0x0215717CE2CEFDFB),
	((0x3F3EA62442D0C36E, 0x079F822DAFAAD3F5), 0x024294B6C57A23C6),
	((0x6C5750D65C384CBF, 0x06949CAA4F081796), 0x030D86316BB6D35F),
	((0x3D5B0448B7002E6D, 0x0357BD598602FF02), 0x012FB3FD4ACA4049),
	((0x7A502DBD341A8695, 0x025CE6D10B07DE34), 0x01CE321801894239),
	((0x560C14DD0CA9B190, 0x019AD4B8B99446D0), 0x00FE0A9EA0F70880),
	((0x4099E7F885BBCE0E, 0x05C2E57BD8042B4F), 0x013A0BA63D8DF1A9),
	((0x66F70A6AC03C28CB, 0x0301D9EC0DF18636), 0x00B81910E628559F),
	((0x1682A71B98ED69F1, 0x04D397F69B067BF3), 0x033447412CD37A25),
	((0x5B1CA91E8052FE0B, 0x0155CF8B6426B806), 0x00518817E60A1C73),
	((0x07505C7A301DD4A0, 0x049032D63A1C3013), 0x02C029A3F601A48D),
	((0x602919056A982E74, 0x04CEE4E9BF07817D), 0x04CE1BAC3D09922D),
	((0x5E93796B9A4DD557, 0x04FED3FCC2DEC833), 0x04A891A5E6A3C1C1),
	((0x7C93C04E4869B7A8, 0x06ADE6594011173A), 0x04598E07C7361594),
	((0x35422D882497816A, 0x05B4331D6F5AA5A8), 0x01EC617F3A67AE82),
	((0x7D88258C29476D00, 0x0191F1EF21004CAE), 0x017E7CC0FA2FC34E),
	((0x4D252CEA849C2588, 0x07495EC08CB21D41), 0x0447796505A700FE),
	((0x39B0D9F114AE34D2, 0x041E80C7CB869E15), 0x0005CF03F3518FAC),
	((0x503EFE6E4ACE16FC, 0x018295C796C4AC81), 0x0035FC1C14166047),
	((0x501D6B93BCA5ADAB, 0x02F7D4CAB51304E7), 0x02F1CEFD58B72E35),
	((0x35F6D1F3F52B6CE8, 0x037E4D710F4C2151), 0x019048540FB57929),
	((0x589C5FAA9DE53B94, 0x03CDDAEE986D66CD), 0x011DB43AEC10FF29),
	((0x1FEFDE9A589EA189, 0x011573DCA54B8438), 0x0081BE9B9F10A731),
	((0x6D0234CFD2157D4F, 0x041F91FD19ED6F14), 0x01CD611B2FF83547),
	((0x7496490448DA1B78, 0x06A7FF0F3B559506), 0x036E5901582B3612),
	((0x08F66D3F84532999, 0x039305D7255FA2A1), 0x01D061913993E457),
	((0x558A9197AC239EE5, 0x02E2D876B01AAA13), 0x01D80C25B91E5ABE),
	((0x77FFA11677B85467, 0x032FEF38BE357E67), 0x02120DE2F9FD0F84),
	((0x4C348AB98224A6DC, 0x049E34EE1CD7C1EA), 0x02513BD7B4A8883C),
	((0x67A7989463511C2A, 0x007D07FD03677059), 0x001CFB0D91A81276),
	((0x26E6D712D274A681, 0x01C56941C0AA9781), 0x01B534AE047638EC),
	((0x35B06E5B0E80BF0D, 0x057223E230797ADF), 0x04AD2B675A3B6D36),
	((0x051BEFCE79323255, 0x034B4B32CE7888F0), 0x01D0A49BAAB9A965),
	((0x3873B9AE147C1833, 0x04631DCDAC5D52C9), 0x03CE540A001C36C7),
	((0x7975B2D8DDA01170, 0x01802EFBCD00209D), 0x01670428CD95E060),
	((0x09A4C0B2851E84FB, 0x0179A98FFD76C7C4), 0x00CAC7529455D663),
	((0x74487920485B36C6, 0x03B0915445D710F7), 0x01E6DFEBD35028DD),
	((0x49CEB2B0BCFE323E, 0x02061A28BFD1474D), 0x00F304F5C3902B6A),
	((0x599AB4D5CC5EA265, 0x05C57DF4F08072A8), 0x0308537BB4D7EA8D),
	((0x6507EA50C644D18D, 0x04E12C8AAF9F4A27), 0x03706F7B0DD30681),
	((0x39A217AC07AA2AB3, 0x06B1C29B92711548), 0x041402CF74218073),
	((0x177337E05F71B675, 0x064AE6DFB6667C4D), 0x049283413C3E418E),
	((0x1AE74116E6012DB1, 0x02C8FE8F23C1B291), 0x01D64E0EA431E698),
	((0x4A48338B64CA5BBC, 0x05249C4CCCC56F65), 0x0247A75831FE4436),
	((0x2158F48D89D62A3C, 0x05AF9EA3BA78D415), 0x04EADB5AE57A05D3),
	((0x603B97A24CDE50A3, 0x071625361589A7B9), 0x041BB3E334E0CC3E),
	((0x1DB7D7C80D184148, 0x0064D5BE7BC03B6F), 0x002D38F9CBC6D7C3),
	((0x2A40A2D630238E23, 0x05205C02D8D6D3A4), 0x013DC2BF696CF103),
	((0x34E3B900ED379F25, 0x00F9A1D9C3039CFA), 0x003B9511CA748269),
	((0x03BC827AEF503432, 0x0250EE616F69FD8B), 0x016B94197FE636A7),
	((0x56B35D35AB55CCBC, 0x02D9ED88FAE07D04), 0x0129872845072644),
	((0x7F64C4C57BB6AEFD, 0x02BD930B568D8852), 0x015458BBEE483041),
	((0x281FD6637336E8D1, 0x001EDDFCB2F8FF7F), 0x0017F2AB584B901D),
	((0x1C21D30E8889442D, 0x019EB4093D1CC64A), 0x0097DE7179A01943),
	((0x54AC61CBF928C940, 0x06335D86A0257A3A), 0x0410A1F5D741944E)
];
def check(b: bool) -> int {
	return if (!b, 1 / 0);
}
def main() -> int {
	for (c in cases) {
		var x = u64.view(c.0.0), y = u64.view(c.0.1);
		var r = u64.view(c.1);

		check((x % y) == r);
	}
	return 114;
}
