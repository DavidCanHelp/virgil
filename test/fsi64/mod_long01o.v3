//@execute = true
def main() -> bool {
	return test();
}
def mod(x: long, z: long) -> int {
	if (x != z) return 1 / 0;
	return 99;
}
def test() -> bool {
	mod(0x0000000000000007 % 0xFFFFFFFFFFFFFFFD, 0x0000000000000001);
	mod(0x0000000000000032 % 0xFFFFFFFFFFFFFFF9, 0x0000000000000001);
	mod(0x000000000000015F % 0xFFFFFFFFFFFFFFED, 0x0000000000000009);
	mod(0x000000000000099A % 0xFFFFFFFFFFFFFFC9, 0x0000000000000026);
	mod(0x0000000000004337 % 0xFFFFFFFFFFFFFF5D, 0x000000000000005C);
	mod(0x000000000001D682 % 0xFFFFFFFFFFFFFE19, 0x00000000000000A1);
	mod(0x00000000000CDD8F % 0xFFFFFFFFFFFFFA4D, 0x000000000000051C);
	mod(0x00000000005A0EEA % 0xFFFFFFFFFFFFEEE9, 0x00000000000000B7);
	mod(0x0000000002766867 % 0xFFFFFFFFFFFFCCBD, 0x0000000000000C83);
	mod(0x00000000113CDAD2 % 0xFFFFFFFFFFFF6639, 0x0000000000002A74);
	mod(0x0000000078A9FBBF % 0xFFFFFFFFFFFE32AD, 0x0000000000011550);
	mod(0x000000034CA5E23A % 0xFFFFFFFFFFFA9809, 0x000000000001985F);
	mod(0x0000001718892F97 % 0xFFFFFFFFFFEFC81D, 0x00000000000333CA);
	mod(0x000000A1ABC04D22 % 0xFFFFFFFFFFCF5859, 0x00000000001D0FCD);
	mod(0x0000046BB2421BEF % 0xFFFFFFFFFF6E090D, 0x00000000001851A6);
	mod(0x00001EF1DFCEC38A % 0xFFFFFFFFFE4A1B29, 0x00000000003C731C);
	mod(0x0000D89D1EA758C7 % 0xFFFFFFFFFADE517D, 0x000000000045AD78);
	mod(0x0005EC4BD6936D72 % 0xFFFFFFFFF09AF479, 0x0000000002ACBB8B);
	mod(0x00297612DE07FE1F % 0xFFFFFFFFD1D0DD6D, 0x0000000023E9D099);
	mod(0x01223A841237F2DA % 0xFFFFFFFF75729849, 0x0000000046D8A930);
	mod(0x07EF999C7F87A3F7 % 0xFFFFFFFE6057C8DD, 0x000000005A0AE78A);
	mod(0x378D33477CB57BC2 % 0xFFFFFFFB21075A99, 0x00000000ED734480);
	mod(0x84DC66F468F6624F % 0xFFFFFFF163160FCD, 0xFFFFFFF915272421);
	mod(0xA206D0AEDEBCB02A % 0xFFFFFFD429422F69, 0xFFFFFFD56033267D);
	mod(0x6E2FB4C81728D127 % 0xFFFFFF7C7BC68E3D, 0x000000578649AE3F);
	mod(0x034DF178A21DB812 % 0xFFFFFE757353AAB9, 0x000000078B6E7364);
	mod(0x17219A4C6ED0087F % 0xFFFFFB6059FB002D, 0x00000034D00F2931);
	mod(0xA1EB381707B03B7A % 0xFFFFF2210DF10089, 0xFFFFFFCCC76402C7);
	mod(0x6D6E88A135D1A057 % 0xFFFFD66329D3019D, 0x00001F461337B7AF);
	mod(0xFE05BC6878BB6262 % 0xFFFF83297D7904D9, 0xFFFFEA2DB809BA84);
	mod(0xF22826DB4D1FB0AF % 0xFFFE897C786B0E8D, 0xFFFF6740084406B1);
	mod(0x9F190FFF1BDDD4CA % 0xFFFB9C7569412BA9, 0xFFFEBFC74905E596);
	mod(0x59AF6FF9C310D187 % 0xFFF2D5603BC382FD, 0x000A3A30AB39AA1A);
	mod(0x73CC0FD45575BAB2 % 0xFFD88020B34A88F9, 0x00136FA199D30430);
	mod(0x2A946ECE56381ADF % 0xFF89806219DF9AED, 0x007511AD88B42D1E);
	mod(0x2A0F07A45B88BC1A % 0xFE9C81264D9ED0C9, 0x00662A21742533A8);
	mod(0x2669357E80BD24B7 % 0xFBD58372E8DC725D, 0x00EAD488B07D29FC);
	mod(0x0CE07675852C0102 % 0xF3808A58BA955719, 0x006100CE3FC1581B);
	mod(0x5A233D36A434070F % 0xDA819F0A2FC0054D, 0x0F267B4B03B411A9);
	mod(0x76F6AC7E7D6C316A % 0x8F84DD1E8F400FE9, 0x067B899D0CAC4153);
	return true;
}
