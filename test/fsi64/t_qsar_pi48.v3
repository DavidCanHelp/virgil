//@execute 1=1; 2=1; 3=1; 4=1; 5=1; 6=1; 7=1; 8=1; 9=1; 10=1; 11=1; 12=1; 13=1; 14=1; 15=1; 16=1; 17=1; 18=1; 19=1; 20=1; 21=1; 22=1; 23=1; 24=1; 25=1; 26=1; 27=1; 28=1; 29=1; 30=1; 31=1; 32=1; 33=1; 34=1; 35=1; 36=1; 37=1; 38=1; 39=1; 40=1; 41=1; 42=1; 43=1; 44=1; 45=1; 46=1; 47=1; 48=1; 49=1; 50=1
def vals: Array<i48> = [
	0b001101011010111110011000100111110000000110011110,
	0b000110101101011111001100010011111000000011001111,
	0b000011010110101111100110001001111100000001100111,
	0b000001101011010111110011000100111110000000110011,
	0b000000110101101011111001100010011111000000011001,
	0b000000011010110101111100110001001111100000001100,
	0b000000001101011010111110011000100111110000000110,
	0b000000000110101101011111001100010011111000000011,
	0b000000000011010110101111100110001001111100000001,
	0b000000000001101011010111110011000100111110000000,
	0b000000000000110101101011111001100010011111000000,
	0b000000000000011010110101111100110001001111100000,
	0b000000000000001101011010111110011000100111110000,
	0b000000000000000110101101011111001100010011111000,
	0b000000000000000011010110101111100110001001111100,
	0b000000000000000001101011010111110011000100111110,
	0b000000000000000000110101101011111001100010011111,
	0b000000000000000000011010110101111100110001001111,
	0b000000000000000000001101011010111110011000100111,
	0b000000000000000000000110101101011111001100010011,
	0b000000000000000000000011010110101111100110001001,
	0b000000000000000000000001101011010111110011000100,
	0b000000000000000000000000110101101011111001100010,
	0b000000000000000000000000011010110101111100110001,
	0b000000000000000000000000001101011010111110011000,
	0b000000000000000000000000000110101101011111001100,
	0b000000000000000000000000000011010110101111100110,
	0b000000000000000000000000000001101011010111110011,
	0b000000000000000000000000000000110101101011111001,
	0b000000000000000000000000000000011010110101111100,
	0b000000000000000000000000000000001101011010111110,
	0b000000000000000000000000000000000110101101011111,
	0b000000000000000000000000000000000011010110101111,
	0b000000000000000000000000000000000001101011010111,
	0b000000000000000000000000000000000000110101101011,
	0b000000000000000000000000000000000000011010110101,
	0b000000000000000000000000000000000000001101011010,
	0b000000000000000000000000000000000000000110101101,
	0b000000000000000000000000000000000000000011010110,
	0b000000000000000000000000000000000000000001101011,
	0b000000000000000000000000000000000000000000110101,
	0b000000000000000000000000000000000000000000011010,
	0b000000000000000000000000000000000000000000001101,
	0b000000000000000000000000000000000000000000000110,
	0b000000000000000000000000000000000000000000000011,
	0b000000000000000000000000000000000000000000000001,
	0b000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000
];
def main(a: byte) -> int {
	for (x = a; x < vals.length; x = x + a) {
		var n = vals(x - a) >> a;
		if (n != vals(x)) return -1;
	}
	return 1;
}
