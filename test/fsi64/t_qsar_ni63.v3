//@execute 1=2; 2=2; 3=2; 4=2; 5=2; 6=2; 7=2; 8=2; 9=2; 10=2; 11=2; 12=2; 13=2; 14=2; 15=2; 16=2; 17=2; 18=2; 19=2; 20=2; 21=2; 22=2; 23=2; 24=2; 25=2; 26=2; 27=2; 28=2; 29=2; 30=2; 31=2; 32=2; 33=2; 34=2; 35=2; 36=2; 37=2; 38=2; 39=2; 40=2; 41=2; 42=2; 43=2; 44=2; 45=2; 46=2; 47=2; 48=2; 49=2; 50=2; 51=2; 52=2; 53=2; 54=2; 55=2; 56=2; 57=2; 58=2; 59=2; 60=2; 61=2; 62=2; 63=2; 64=2; 65=2
def vals: Array<i63> = [
	0b000011101010011100001101111011000001001001110101111011111101110,
	0b000001110101001110000110111101100000100100111010111101111110111,
	0b000000111010100111000011011110110000010010011101011110111111011,
	0b000000011101010011100001101111011000001001001110101111011111101,
	0b000000001110101001110000110111101100000100100111010111101111110,
	0b000000000111010100111000011011110110000010010011101011110111111,
	0b000000000011101010011100001101111011000001001001110101111011111,
	0b000000000001110101001110000110111101100000100100111010111101111,
	0b000000000000111010100111000011011110110000010010011101011110111,
	0b000000000000011101010011100001101111011000001001001110101111011,
	0b000000000000001110101001110000110111101100000100100111010111101,
	0b000000000000000111010100111000011011110110000010010011101011110,
	0b000000000000000011101010011100001101111011000001001001110101111,
	0b000000000000000001110101001110000110111101100000100100111010111,
	0b000000000000000000111010100111000011011110110000010010011101011,
	0b000000000000000000011101010011100001101111011000001001001110101,
	0b000000000000000000001110101001110000110111101100000100100111010,
	0b000000000000000000000111010100111000011011110110000010010011101,
	0b000000000000000000000011101010011100001101111011000001001001110,
	0b000000000000000000000001110101001110000110111101100000100100111,
	0b000000000000000000000000111010100111000011011110110000010010011,
	0b000000000000000000000000011101010011100001101111011000001001001,
	0b000000000000000000000000001110101001110000110111101100000100100,
	0b000000000000000000000000000111010100111000011011110110000010010,
	0b000000000000000000000000000011101010011100001101111011000001001,
	0b000000000000000000000000000001110101001110000110111101100000100,
	0b000000000000000000000000000000111010100111000011011110110000010,
	0b000000000000000000000000000000011101010011100001101111011000001,
	0b000000000000000000000000000000001110101001110000110111101100000,
	0b000000000000000000000000000000000111010100111000011011110110000,
	0b000000000000000000000000000000000011101010011100001101111011000,
	0b000000000000000000000000000000000001110101001110000110111101100,
	0b000000000000000000000000000000000000111010100111000011011110110,
	0b000000000000000000000000000000000000011101010011100001101111011,
	0b000000000000000000000000000000000000001110101001110000110111101,
	0b000000000000000000000000000000000000000111010100111000011011110,
	0b000000000000000000000000000000000000000011101010011100001101111,
	0b000000000000000000000000000000000000000001110101001110000110111,
	0b000000000000000000000000000000000000000000111010100111000011011,
	0b000000000000000000000000000000000000000000011101010011100001101,
	0b000000000000000000000000000000000000000000001110101001110000110,
	0b000000000000000000000000000000000000000000000111010100111000011,
	0b000000000000000000000000000000000000000000000011101010011100001,
	0b000000000000000000000000000000000000000000000001110101001110000,
	0b000000000000000000000000000000000000000000000000111010100111000,
	0b000000000000000000000000000000000000000000000000011101010011100,
	0b000000000000000000000000000000000000000000000000001110101001110,
	0b000000000000000000000000000000000000000000000000000111010100111,
	0b000000000000000000000000000000000000000000000000000011101010011,
	0b000000000000000000000000000000000000000000000000000001110101001,
	0b000000000000000000000000000000000000000000000000000000111010100,
	0b000000000000000000000000000000000000000000000000000000011101010,
	0b000000000000000000000000000000000000000000000000000000001110101,
	0b000000000000000000000000000000000000000000000000000000000111010,
	0b000000000000000000000000000000000000000000000000000000000011101,
	0b000000000000000000000000000000000000000000000000000000000001110,
	0b000000000000000000000000000000000000000000000000000000000000111,
	0b000000000000000000000000000000000000000000000000000000000000011,
	0b000000000000000000000000000000000000000000000000000000000000001,
	0b000000000000000000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000000000000000000
];
def main(a: byte) -> int {
	for (x = a; x < vals.length; x = x + a) {
		var n = vals[x - a] >> a;
		if (n != vals[x]) return -2;
	}
	return 2;
}
