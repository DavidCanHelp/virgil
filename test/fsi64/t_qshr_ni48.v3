//@execute 1=7; 2=7; 3=7; 4=7; 5=7; 6=7; 7=7; 8=7; 9=7; 10=7; 11=7; 12=7; 13=7; 14=7; 15=7; 16=7; 17=7; 18=7; 19=7; 20=7; 21=7; 22=7; 23=7; 24=7; 25=7; 26=7; 27=7; 28=7; 29=7; 30=7; 31=7; 32=7; 33=7; 34=7; 35=7; 36=7; 37=7; 38=7; 39=7; 40=7; 41=7; 42=7; 43=7; 44=7; 45=7; 46=7; 47=7; 48=7; 49=7; 50=7
def vals: Array<i48> = [
	0b100000100100101100000110010111001010110110100001,
	0b010000010010010110000011001011100101011011010000,
	0b001000001001001011000001100101110010101101101000,
	0b000100000100100101100000110010111001010110110100,
	0b000010000010010010110000011001011100101011011010,
	0b000001000001001001011000001100101110010101101101,
	0b000000100000100100101100000110010111001010110110,
	0b000000010000010010010110000011001011100101011011,
	0b000000001000001001001011000001100101110010101101,
	0b000000000100000100100101100000110010111001010110,
	0b000000000010000010010010110000011001011100101011,
	0b000000000001000001001001011000001100101110010101,
	0b000000000000100000100100101100000110010111001010,
	0b000000000000010000010010010110000011001011100101,
	0b000000000000001000001001001011000001100101110010,
	0b000000000000000100000100100101100000110010111001,
	0b000000000000000010000010010010110000011001011100,
	0b000000000000000001000001001001011000001100101110,
	0b000000000000000000100000100100101100000110010111,
	0b000000000000000000010000010010010110000011001011,
	0b000000000000000000001000001001001011000001100101,
	0b000000000000000000000100000100100101100000110010,
	0b000000000000000000000010000010010010110000011001,
	0b000000000000000000000001000001001001011000001100,
	0b000000000000000000000000100000100100101100000110,
	0b000000000000000000000000010000010010010110000011,
	0b000000000000000000000000001000001001001011000001,
	0b000000000000000000000000000100000100100101100000,
	0b000000000000000000000000000010000010010010110000,
	0b000000000000000000000000000001000001001001011000,
	0b000000000000000000000000000000100000100100101100,
	0b000000000000000000000000000000010000010010010110,
	0b000000000000000000000000000000001000001001001011,
	0b000000000000000000000000000000000100000100100101,
	0b000000000000000000000000000000000010000010010010,
	0b000000000000000000000000000000000001000001001001,
	0b000000000000000000000000000000000000100000100100,
	0b000000000000000000000000000000000000010000010010,
	0b000000000000000000000000000000000000001000001001,
	0b000000000000000000000000000000000000000100000100,
	0b000000000000000000000000000000000000000010000010,
	0b000000000000000000000000000000000000000001000001,
	0b000000000000000000000000000000000000000000100000,
	0b000000000000000000000000000000000000000000010000,
	0b000000000000000000000000000000000000000000001000,
	0b000000000000000000000000000000000000000000000100,
	0b000000000000000000000000000000000000000000000010,
	0b000000000000000000000000000000000000000000000001,
	0b000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000
];
def main(a: byte) -> int {
	for (x = a; x < vals.length; x = x + a) {
		var n = vals(x - a) >>> a;
		if (n != vals(x)) return -7;
	}
	return 7;
}
