//@execute 1=10; 2=10; 3=10; 4=10; 5=10; 6=10; 7=10; 8=10; 9=10; 10=10; 11=10; 12=10; 13=10; 14=10; 15=10; 16=10; 17=10; 18=10; 19=10; 20=10; 21=10; 22=10; 23=10; 24=10; 25=10; 26=10; 27=10; 28=10; 29=10; 30=10; 31=10; 32=10; 33=10; 34=10; 35=10; 36=10; 37=10; 38=10; 39=10; 40=10; 41=10; 42=10; 43=10; 44=10; 45=10; 46=10; 47=10; 48=10; 49=10; 50=10; 51=10; 52=10; 53=10; 54=10; 55=10; 56=10; 57=10; 58=10; 59=10; 60=10; 61=10; 62=10; 63=10; 64=10; 65=10
def vals: Array<u63> = [
	0b100011010101000101011111011000011100110011101100100001011010011,
	0b010001101010100010101111101100001110011001110110010000101101001,
	0b001000110101010001010111110110000111001100111011001000010110100,
	0b000100011010101000101011111011000011100110011101100100001011010,
	0b000010001101010100010101111101100001110011001110110010000101101,
	0b000001000110101010001010111110110000111001100111011001000010110,
	0b000000100011010101000101011111011000011100110011101100100001011,
	0b000000010001101010100010101111101100001110011001110110010000101,
	0b000000001000110101010001010111110110000111001100111011001000010,
	0b000000000100011010101000101011111011000011100110011101100100001,
	0b000000000010001101010100010101111101100001110011001110110010000,
	0b000000000001000110101010001010111110110000111001100111011001000,
	0b000000000000100011010101000101011111011000011100110011101100100,
	0b000000000000010001101010100010101111101100001110011001110110010,
	0b000000000000001000110101010001010111110110000111001100111011001,
	0b000000000000000100011010101000101011111011000011100110011101100,
	0b000000000000000010001101010100010101111101100001110011001110110,
	0b000000000000000001000110101010001010111110110000111001100111011,
	0b000000000000000000100011010101000101011111011000011100110011101,
	0b000000000000000000010001101010100010101111101100001110011001110,
	0b000000000000000000001000110101010001010111110110000111001100111,
	0b000000000000000000000100011010101000101011111011000011100110011,
	0b000000000000000000000010001101010100010101111101100001110011001,
	0b000000000000000000000001000110101010001010111110110000111001100,
	0b000000000000000000000000100011010101000101011111011000011100110,
	0b000000000000000000000000010001101010100010101111101100001110011,
	0b000000000000000000000000001000110101010001010111110110000111001,
	0b000000000000000000000000000100011010101000101011111011000011100,
	0b000000000000000000000000000010001101010100010101111101100001110,
	0b000000000000000000000000000001000110101010001010111110110000111,
	0b000000000000000000000000000000100011010101000101011111011000011,
	0b000000000000000000000000000000010001101010100010101111101100001,
	0b000000000000000000000000000000001000110101010001010111110110000,
	0b000000000000000000000000000000000100011010101000101011111011000,
	0b000000000000000000000000000000000010001101010100010101111101100,
	0b000000000000000000000000000000000001000110101010001010111110110,
	0b000000000000000000000000000000000000100011010101000101011111011,
	0b000000000000000000000000000000000000010001101010100010101111101,
	0b000000000000000000000000000000000000001000110101010001010111110,
	0b000000000000000000000000000000000000000100011010101000101011111,
	0b000000000000000000000000000000000000000010001101010100010101111,
	0b000000000000000000000000000000000000000001000110101010001010111,
	0b000000000000000000000000000000000000000000100011010101000101011,
	0b000000000000000000000000000000000000000000010001101010100010101,
	0b000000000000000000000000000000000000000000001000110101010001010,
	0b000000000000000000000000000000000000000000000100011010101000101,
	0b000000000000000000000000000000000000000000000010001101010100010,
	0b000000000000000000000000000000000000000000000001000110101010001,
	0b000000000000000000000000000000000000000000000000100011010101000,
	0b000000000000000000000000000000000000000000000000010001101010100,
	0b000000000000000000000000000000000000000000000000001000110101010,
	0b000000000000000000000000000000000000000000000000000100011010101,
	0b000000000000000000000000000000000000000000000000000010001101010,
	0b000000000000000000000000000000000000000000000000000001000110101,
	0b000000000000000000000000000000000000000000000000000000100011010,
	0b000000000000000000000000000000000000000000000000000000010001101,
	0b000000000000000000000000000000000000000000000000000000001000110,
	0b000000000000000000000000000000000000000000000000000000000100011,
	0b000000000000000000000000000000000000000000000000000000000010001,
	0b000000000000000000000000000000000000000000000000000000000001000,
	0b000000000000000000000000000000000000000000000000000000000000100,
	0b000000000000000000000000000000000000000000000000000000000000010,
	0b000000000000000000000000000000000000000000000000000000000000001,
	0b000000000000000000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000000000000000000
];
def main(a: byte) -> int {
	for (x = a; x < vals.length; x = x + a) {
		var n = vals[x - a] >>> a;
		if (n != vals[x]) return -10;
	}
	return 10;
}
