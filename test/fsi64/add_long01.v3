//@execute = 33
//@heap-size=4000
def a = doOp();
def b = doFolded();
def main() -> int {
	def c = doOp();
	def d = doFolded();
	for (i = 0; i < a.length; i++) if (a[i] != b[i] || a[i] != c[i] || a[i] != d[i]) return -20 - i;
	return 33;
}
def op(x: long, y: long) -> long {
	return x + y;
}
def doOp() -> Array<long> {
	return  [
		op(0L, 0L),
		op(0L, 1L),
		op(0L, -2147483648L),
		op(0L, -2147483647L),
		op(0L, 1073741824L),
		op(0L, 1073741825L),
		op(0L, -1073741824L),
		op(0L, -1073741823L),
		op(1L, 0L),
		op(1L, 1L),
		op(1L, -2147483648L),
		op(1L, -2147483647L),
		op(1L, 1073741824L),
		op(1L, 1073741825L),
		op(1L, -1073741824L),
		op(1L, -1073741823L),
		op(-2147483648L, 0L),
		op(-2147483648L, 1L),
		op(-2147483648L, -2147483648L),
		op(-2147483648L, -2147483647L),
		op(-2147483648L, 1073741824L),
		op(-2147483648L, 1073741825L),
		op(-2147483648L, -1073741824L),
		op(-2147483648L, -1073741823L),
		op(-2147483647L, 0L),
		op(-2147483647L, 1L),
		op(-2147483647L, -2147483648L),
		op(-2147483647L, -2147483647L),
		op(-2147483647L, 1073741824L),
		op(-2147483647L, 1073741825L),
		op(-2147483647L, -1073741824L),
		op(-2147483647L, -1073741823L),
		op(1073741824L, 0L),
		op(1073741824L, 1L),
		op(1073741824L, -2147483648L),
		op(1073741824L, -2147483647L),
		op(1073741824L, 1073741824L),
		op(1073741824L, 1073741825L),
		op(1073741824L, -1073741824L),
		op(1073741824L, -1073741823L),
		op(1073741825L, 0L),
		op(1073741825L, 1L),
		op(1073741825L, -2147483648L),
		op(1073741825L, -2147483647L),
		op(1073741825L, 1073741824L),
		op(1073741825L, 1073741825L),
		op(1073741825L, -1073741824L),
		op(1073741825L, -1073741823L),
		op(-1073741824L, 0L),
		op(-1073741824L, 1L),
		op(-1073741824L, -2147483648L),
		op(-1073741824L, -2147483647L),
		op(-1073741824L, 1073741824L),
		op(-1073741824L, 1073741825L),
		op(-1073741824L, -1073741824L),
		op(-1073741824L, -1073741823L),
		op(-1073741823L, 0L),
		op(-1073741823L, 1L),
		op(-1073741823L, -2147483648L),
		op(-1073741823L, -2147483647L),
		op(-1073741823L, 1073741824L),
		op(-1073741823L, 1073741825L),
		op(-1073741823L, -1073741824L),
		op(-1073741823L, -1073741823L)
	];
}
def doFolded() -> Array<long> {
	return  [
		0L + 0L,
		0L + 1L,
		0L + -2147483648L,
		0L + -2147483647L,
		0L + 1073741824L,
		0L + 1073741825L,
		0L + -1073741824L,
		0L + -1073741823L, 
		1L + 0L,
		1L + 1L,
		1L + -2147483648L,
		1L + -2147483647L,
		1L + 1073741824L,
		1L + 1073741825L,
		1L + -1073741824L,
		1L + -1073741823L, 
		-2147483648L + 0L,
		-2147483648L + 1L,
		-2147483648L + -2147483648L,
		-2147483648L + -2147483647L,
		-2147483648L + 1073741824L,
		-2147483648L + 1073741825L,
		-2147483648L + -1073741824L,
		-2147483648L + -1073741823L, 
		-2147483647L + 0L,
		-2147483647L + 1L,
		-2147483647L + -2147483648L,
		-2147483647L + -2147483647L,
		-2147483647L + 1073741824L,
		-2147483647L + 1073741825L,
		-2147483647L + -1073741824L,
		-2147483647L + -1073741823L, 
		1073741824L + 0L,
		1073741824L + 1L,
		1073741824L + -2147483648L,
		1073741824L + -2147483647L,
		1073741824L + 1073741824L,
		1073741824L + 1073741825L,
		1073741824L + -1073741824L,
		1073741824L + -1073741823L, 
		1073741825L + 0L,
		1073741825L + 1L,
		1073741825L + -2147483648L,
		1073741825L + -2147483647L,
		1073741825L + 1073741824L,
		1073741825L + 1073741825L,
		1073741825L + -1073741824L,
		1073741825L + -1073741823L, 
		-1073741824L + 0L,
		-1073741824L + 1L,
		-1073741824L + -2147483648L,
		-1073741824L + -2147483647L,
		-1073741824L + 1073741824L,
		-1073741824L + 1073741825L,
		-1073741824L + -1073741824L,
		-1073741824L + -1073741823L, 
		-1073741823L + 0L,
		-1073741823L + 1L,
		-1073741823L + -2147483648L,
		-1073741823L + -2147483647L,
		-1073741823L + 1073741824L,
		-1073741823L + 1073741825L,
		-1073741823L + -1073741824L,
		-1073741823L + -1073741823L
	];
}
