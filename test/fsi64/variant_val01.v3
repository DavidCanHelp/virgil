//@execute = 19
type F {
	case None;
	case M(g: G);
}
type G {
	case None;
	case M(x: long, y: string);
}
var s = "this is a string";
var g = G.M(3, s);
var x = [F.M(g), F.M(g)];
def main() -> int {
	match(x[0]) {
		None => return 0;
		M(g) => {
			match(g) {
				None => return 0;
				M(x, y) => return int.!(x + y.length);
			}
		}
	}
}
