//@execute = 0
type Holder<A, B, C> {
	case Some(a: A, b: B, c: C);
}
def eq<A, B, C>(x: Holder<A, B, C>, y: Holder<u64, u64, u64>) {
	match (x) {
		Some(xa, xb, xc): match (y) {
			Some(ya, yb, yc): {
				if (xa != A.!(ya) || xb != B.!(yb) || xc != C.!(yc)) {
					return ((1 / 0), ()).last;
				}
			}
		}
	}
}
def data = [
	0x0000000000000007ul,
	0x0000000000000976ul,
	0x000000000001D682ul,
	0x00000000086D3CE6ul,
	0x0000001718892F97ul,
	0x0000D89D1EA758C7ul,
	0x034DF178A21DB812ul,
	0x2669357E80BD24B7ul,
	0x5A233D36A434070Ful,
	0x9F190FFF1BDDD4CAul,
	0xF3808A58BA955719ul,
	0xFFD88020B34A88F9ul,
	0xFFFFD66329D3019Dul,
	0xFFFFFFD429422F69ul,
	0xFFFFFFFF75729849ul,
	0xFFFFFFFFFADE517Dul,
	0xFFFFFFFFFF1A2DDEul,
	0xFFFFFFFFFFF83F2Dul,
	0xFFFFFFFFFFFF6639ul,
	0xFFFFFFFFFFFFFDBFul,
	0xFFFFFFFFFFFFFFF9ul
];
def G = [0ul, 0xFFFFFFFFFFFFFFFFul];
def check<A, B, C>(a: u64, b: u64, c: u64) {
	eq(Holder.Some(A.!(a), B.!(b), C.!(c)), Holder.Some(a, b, c));
}
def run<A, B, C>() {
	def c = check<A, B, C>;
	for (x in data) {
		for (g in G) {
			c(g, g, g);
			c(x, g, g);
			c(g, x, g);
			c(x, x, g);
			c(g, g, x);
			c(x, g, x);
			c(g, x, x);
			c(x, x, x);
		}
	}
}
def t2<A, B>() {
	run<A, B, u8>();
	run<A, B, u16>();
	run<A, B, u32>();
	run<A, B, u64>();
}
def t1<A>() {
	t2<A, u8>();
	t2<A, u16>();
	t2<A, u32>();
	t2<A, u64>();
}
def t0() {
	t1<u8>();
}
def main() -> int {
	t0();
	return 0;
}
