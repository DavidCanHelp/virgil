//@execute 1=3; 2=3; 3=3; 4=3; 5=3; 6=3; 7=3; 8=3; 9=3; 10=3; 11=3; 12=3; 13=3; 14=3; 15=3; 16=3; 17=3; 18=3; 19=3; 20=3; 21=3; 22=3; 23=3; 24=3; 25=3; 26=3; 27=3; 28=3; 29=3; 30=3; 31=3; 32=3; 33=3; 34=3; 35=3; 36=3; 37=3; 38=3; 39=3; 40=3; 41=3; 42=3; 43=3; 44=3; 45=3; 46=3; 47=3; 48=3; 49=3; 50=3; 51=3; 52=3; 53=3; 54=3; 55=3; 56=3; 57=3
def vals: Array<u55> = [
	0b1011000011101010001011010110000010111001001100001001101,
	0b0101100001110101000101101011000001011100100110000100110,
	0b0010110000111010100010110101100000101110010011000010011,
	0b0001011000011101010001011010110000010111001001100001001,
	0b0000101100001110101000101101011000001011100100110000100,
	0b0000010110000111010100010110101100000101110010011000010,
	0b0000001011000011101010001011010110000010111001001100001,
	0b0000000101100001110101000101101011000001011100100110000,
	0b0000000010110000111010100010110101100000101110010011000,
	0b0000000001011000011101010001011010110000010111001001100,
	0b0000000000101100001110101000101101011000001011100100110,
	0b0000000000010110000111010100010110101100000101110010011,
	0b0000000000001011000011101010001011010110000010111001001,
	0b0000000000000101100001110101000101101011000001011100100,
	0b0000000000000010110000111010100010110101100000101110010,
	0b0000000000000001011000011101010001011010110000010111001,
	0b0000000000000000101100001110101000101101011000001011100,
	0b0000000000000000010110000111010100010110101100000101110,
	0b0000000000000000001011000011101010001011010110000010111,
	0b0000000000000000000101100001110101000101101011000001011,
	0b0000000000000000000010110000111010100010110101100000101,
	0b0000000000000000000001011000011101010001011010110000010,
	0b0000000000000000000000101100001110101000101101011000001,
	0b0000000000000000000000010110000111010100010110101100000,
	0b0000000000000000000000001011000011101010001011010110000,
	0b0000000000000000000000000101100001110101000101101011000,
	0b0000000000000000000000000010110000111010100010110101100,
	0b0000000000000000000000000001011000011101010001011010110,
	0b0000000000000000000000000000101100001110101000101101011,
	0b0000000000000000000000000000010110000111010100010110101,
	0b0000000000000000000000000000001011000011101010001011010,
	0b0000000000000000000000000000000101100001110101000101101,
	0b0000000000000000000000000000000010110000111010100010110,
	0b0000000000000000000000000000000001011000011101010001011,
	0b0000000000000000000000000000000000101100001110101000101,
	0b0000000000000000000000000000000000010110000111010100010,
	0b0000000000000000000000000000000000001011000011101010001,
	0b0000000000000000000000000000000000000101100001110101000,
	0b0000000000000000000000000000000000000010110000111010100,
	0b0000000000000000000000000000000000000001011000011101010,
	0b0000000000000000000000000000000000000000101100001110101,
	0b0000000000000000000000000000000000000000010110000111010,
	0b0000000000000000000000000000000000000000001011000011101,
	0b0000000000000000000000000000000000000000000101100001110,
	0b0000000000000000000000000000000000000000000010110000111,
	0b0000000000000000000000000000000000000000000001011000011,
	0b0000000000000000000000000000000000000000000000101100001,
	0b0000000000000000000000000000000000000000000000010110000,
	0b0000000000000000000000000000000000000000000000001011000,
	0b0000000000000000000000000000000000000000000000000101100,
	0b0000000000000000000000000000000000000000000000000010110,
	0b0000000000000000000000000000000000000000000000000001011,
	0b0000000000000000000000000000000000000000000000000000101,
	0b0000000000000000000000000000000000000000000000000000010,
	0b0000000000000000000000000000000000000000000000000000001,
	0b0000000000000000000000000000000000000000000000000000000,
	0b0000000000000000000000000000000000000000000000000000000,
	0b0000000000000000000000000000000000000000000000000000000,
	0b0000000000000000000000000000000000000000000000000000000,
	0b0000000000000000000000000000000000000000000000000000000
];
def main(a: byte) -> int {
	for (x = a; x < vals.length; x = x + a) {
		var n = vals[x - a] >> a;
		if (n != vals[x]) return -3;
	}
	return 3;
}
