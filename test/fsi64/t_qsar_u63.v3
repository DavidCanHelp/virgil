//@execute 1=7; 2=7; 3=7; 4=7; 5=7; 6=7; 7=7; 8=7; 9=7; 10=7; 11=7; 12=7; 13=7; 14=7; 15=7; 16=7; 17=7; 18=7; 19=7; 20=7; 21=7; 22=7; 23=7; 24=7; 25=7; 26=7; 27=7; 28=7; 29=7; 30=7; 31=7; 32=7; 33=7; 34=7; 35=7; 36=7; 37=7; 38=7; 39=7; 40=7; 41=7; 42=7; 43=7; 44=7; 45=7; 46=7; 47=7; 48=7; 49=7; 50=7; 51=7; 52=7; 53=7; 54=7; 55=7; 56=7; 57=7; 58=7; 59=7; 60=7; 61=7; 62=7; 63=7; 64=7; 65=7
def vals: Array<u63> = [
	0b100000010100010010101000011010110111110101111011010000011011010,
	0b010000001010001001010100001101011011111010111101101000001101101,
	0b001000000101000100101010000110101101111101011110110100000110110,
	0b000100000010100010010101000011010110111110101111011010000011011,
	0b000010000001010001001010100001101011011111010111101101000001101,
	0b000001000000101000100101010000110101101111101011110110100000110,
	0b000000100000010100010010101000011010110111110101111011010000011,
	0b000000010000001010001001010100001101011011111010111101101000001,
	0b000000001000000101000100101010000110101101111101011110110100000,
	0b000000000100000010100010010101000011010110111110101111011010000,
	0b000000000010000001010001001010100001101011011111010111101101000,
	0b000000000001000000101000100101010000110101101111101011110110100,
	0b000000000000100000010100010010101000011010110111110101111011010,
	0b000000000000010000001010001001010100001101011011111010111101101,
	0b000000000000001000000101000100101010000110101101111101011110110,
	0b000000000000000100000010100010010101000011010110111110101111011,
	0b000000000000000010000001010001001010100001101011011111010111101,
	0b000000000000000001000000101000100101010000110101101111101011110,
	0b000000000000000000100000010100010010101000011010110111110101111,
	0b000000000000000000010000001010001001010100001101011011111010111,
	0b000000000000000000001000000101000100101010000110101101111101011,
	0b000000000000000000000100000010100010010101000011010110111110101,
	0b000000000000000000000010000001010001001010100001101011011111010,
	0b000000000000000000000001000000101000100101010000110101101111101,
	0b000000000000000000000000100000010100010010101000011010110111110,
	0b000000000000000000000000010000001010001001010100001101011011111,
	0b000000000000000000000000001000000101000100101010000110101101111,
	0b000000000000000000000000000100000010100010010101000011010110111,
	0b000000000000000000000000000010000001010001001010100001101011011,
	0b000000000000000000000000000001000000101000100101010000110101101,
	0b000000000000000000000000000000100000010100010010101000011010110,
	0b000000000000000000000000000000010000001010001001010100001101011,
	0b000000000000000000000000000000001000000101000100101010000110101,
	0b000000000000000000000000000000000100000010100010010101000011010,
	0b000000000000000000000000000000000010000001010001001010100001101,
	0b000000000000000000000000000000000001000000101000100101010000110,
	0b000000000000000000000000000000000000100000010100010010101000011,
	0b000000000000000000000000000000000000010000001010001001010100001,
	0b000000000000000000000000000000000000001000000101000100101010000,
	0b000000000000000000000000000000000000000100000010100010010101000,
	0b000000000000000000000000000000000000000010000001010001001010100,
	0b000000000000000000000000000000000000000001000000101000100101010,
	0b000000000000000000000000000000000000000000100000010100010010101,
	0b000000000000000000000000000000000000000000010000001010001001010,
	0b000000000000000000000000000000000000000000001000000101000100101,
	0b000000000000000000000000000000000000000000000100000010100010010,
	0b000000000000000000000000000000000000000000000010000001010001001,
	0b000000000000000000000000000000000000000000000001000000101000100,
	0b000000000000000000000000000000000000000000000000100000010100010,
	0b000000000000000000000000000000000000000000000000010000001010001,
	0b000000000000000000000000000000000000000000000000001000000101000,
	0b000000000000000000000000000000000000000000000000000100000010100,
	0b000000000000000000000000000000000000000000000000000010000001010,
	0b000000000000000000000000000000000000000000000000000001000000101,
	0b000000000000000000000000000000000000000000000000000000100000010,
	0b000000000000000000000000000000000000000000000000000000010000001,
	0b000000000000000000000000000000000000000000000000000000001000000,
	0b000000000000000000000000000000000000000000000000000000000100000,
	0b000000000000000000000000000000000000000000000000000000000010000,
	0b000000000000000000000000000000000000000000000000000000000001000,
	0b000000000000000000000000000000000000000000000000000000000000100,
	0b000000000000000000000000000000000000000000000000000000000000010,
	0b000000000000000000000000000000000000000000000000000000000000001,
	0b000000000000000000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000000000000000000
];
def main(a: byte) -> int {
	for (x = a; x < vals.length; x = x + a) {
		var n = vals(x - a) >> a;
		if (n != vals(x)) return -7;
	}
	return 7;
}
