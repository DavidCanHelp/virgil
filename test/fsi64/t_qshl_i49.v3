//@execute 1=7; 2=7; 3=7; 4=7; 5=7; 6=7; 7=7; 8=7; 9=7; 10=7; 11=7; 12=7; 13=7; 14=7; 15=7; 16=7; 17=7; 18=7; 19=7; 20=7; 21=7; 22=7; 23=7; 24=7; 25=7; 26=7; 27=7; 28=7; 29=7; 30=7; 31=7; 32=7; 33=7; 34=7; 35=7; 36=7; 37=7; 38=7; 39=7; 40=7; 41=7; 42=7; 43=7; 44=7; 45=7; 46=7; 47=7; 48=7; 49=7; 50=7; 51=7
def vals: Array<i49> = [
	0b0111110101010011010000101100101101000110000100101,
	0b1111101010100110100001011001011010001100001001010,
	0b1111010101001101000010110010110100011000010010100,
	0b1110101010011010000101100101101000110000100101000,
	0b1101010100110100001011001011010001100001001010000,
	0b1010101001101000010110010110100011000010010100000,
	0b0101010011010000101100101101000110000100101000000,
	0b1010100110100001011001011010001100001001010000000,
	0b0101001101000010110010110100011000010010100000000,
	0b1010011010000101100101101000110000100101000000000,
	0b0100110100001011001011010001100001001010000000000,
	0b1001101000010110010110100011000010010100000000000,
	0b0011010000101100101101000110000100101000000000000,
	0b0110100001011001011010001100001001010000000000000,
	0b1101000010110010110100011000010010100000000000000,
	0b1010000101100101101000110000100101000000000000000,
	0b0100001011001011010001100001001010000000000000000,
	0b1000010110010110100011000010010100000000000000000,
	0b0000101100101101000110000100101000000000000000000,
	0b0001011001011010001100001001010000000000000000000,
	0b0010110010110100011000010010100000000000000000000,
	0b0101100101101000110000100101000000000000000000000,
	0b1011001011010001100001001010000000000000000000000,
	0b0110010110100011000010010100000000000000000000000,
	0b1100101101000110000100101000000000000000000000000,
	0b1001011010001100001001010000000000000000000000000,
	0b0010110100011000010010100000000000000000000000000,
	0b0101101000110000100101000000000000000000000000000,
	0b1011010001100001001010000000000000000000000000000,
	0b0110100011000010010100000000000000000000000000000,
	0b1101000110000100101000000000000000000000000000000,
	0b1010001100001001010000000000000000000000000000000,
	0b0100011000010010100000000000000000000000000000000,
	0b1000110000100101000000000000000000000000000000000,
	0b0001100001001010000000000000000000000000000000000,
	0b0011000010010100000000000000000000000000000000000,
	0b0110000100101000000000000000000000000000000000000,
	0b1100001001010000000000000000000000000000000000000,
	0b1000010010100000000000000000000000000000000000000,
	0b0000100101000000000000000000000000000000000000000,
	0b0001001010000000000000000000000000000000000000000,
	0b0010010100000000000000000000000000000000000000000,
	0b0100101000000000000000000000000000000000000000000,
	0b1001010000000000000000000000000000000000000000000,
	0b0010100000000000000000000000000000000000000000000,
	0b0101000000000000000000000000000000000000000000000,
	0b1010000000000000000000000000000000000000000000000,
	0b0100000000000000000000000000000000000000000000000,
	0b1000000000000000000000000000000000000000000000000,
	0b0000000000000000000000000000000000000000000000000,
	0b0000000000000000000000000000000000000000000000000,
	0b0000000000000000000000000000000000000000000000000,
	0b0000000000000000000000000000000000000000000000000,
	0b0000000000000000000000000000000000000000000000000
];
def main(a: byte) -> int {
	for (x = a; x < vals.length; x = x + a) {
		var n = vals(x - a) << a;
		if (n != vals(x)) return -7;
	}
	return 7;
}
