//@execute 1=1; 2=1; 3=1; 4=1; 5=1; 6=1; 7=1; 8=1; 9=1; 10=1; 11=1; 12=1; 13=1; 14=1; 15=1; 16=1; 17=1; 18=1; 19=1; 20=1; 21=1; 22=1; 23=1; 24=1; 25=1; 26=1; 27=1; 28=1; 29=1; 30=1; 31=1; 32=1; 33=1; 34=1; 35=1; 36=1; 37=1; 38=1; 39=1; 40=1; 41=1; 42=1; 43=1; 44=1; 45=1; 46=1; 47=1; 48=1; 49=1; 50=1; 51=1; 52=1; 53=1; 54=1; 55=1; 56=1; 57=1; 58=1; 59=1; 60=1; 61=1; 62=1; 63=1; 64=1; 65=1; 66=1
def vals: Array<i64> = [
	0b0010100001001100100101010001001111001000011110011000010010101100,
	0b0001010000100110010010101000100111100100001111001100001001010110,
	0b0000101000010011001001010100010011110010000111100110000100101011,
	0b0000010100001001100100101010001001111001000011110011000010010101,
	0b0000001010000100110010010101000100111100100001111001100001001010,
	0b0000000101000010011001001010100010011110010000111100110000100101,
	0b0000000010100001001100100101010001001111001000011110011000010010,
	0b0000000001010000100110010010101000100111100100001111001100001001,
	0b0000000000101000010011001001010100010011110010000111100110000100,
	0b0000000000010100001001100100101010001001111001000011110011000010,
	0b0000000000001010000100110010010101000100111100100001111001100001,
	0b0000000000000101000010011001001010100010011110010000111100110000,
	0b0000000000000010100001001100100101010001001111001000011110011000,
	0b0000000000000001010000100110010010101000100111100100001111001100,
	0b0000000000000000101000010011001001010100010011110010000111100110,
	0b0000000000000000010100001001100100101010001001111001000011110011,
	0b0000000000000000001010000100110010010101000100111100100001111001,
	0b0000000000000000000101000010011001001010100010011110010000111100,
	0b0000000000000000000010100001001100100101010001001111001000011110,
	0b0000000000000000000001010000100110010010101000100111100100001111,
	0b0000000000000000000000101000010011001001010100010011110010000111,
	0b0000000000000000000000010100001001100100101010001001111001000011,
	0b0000000000000000000000001010000100110010010101000100111100100001,
	0b0000000000000000000000000101000010011001001010100010011110010000,
	0b0000000000000000000000000010100001001100100101010001001111001000,
	0b0000000000000000000000000001010000100110010010101000100111100100,
	0b0000000000000000000000000000101000010011001001010100010011110010,
	0b0000000000000000000000000000010100001001100100101010001001111001,
	0b0000000000000000000000000000001010000100110010010101000100111100,
	0b0000000000000000000000000000000101000010011001001010100010011110,
	0b0000000000000000000000000000000010100001001100100101010001001111,
	0b0000000000000000000000000000000001010000100110010010101000100111,
	0b0000000000000000000000000000000000101000010011001001010100010011,
	0b0000000000000000000000000000000000010100001001100100101010001001,
	0b0000000000000000000000000000000000001010000100110010010101000100,
	0b0000000000000000000000000000000000000101000010011001001010100010,
	0b0000000000000000000000000000000000000010100001001100100101010001,
	0b0000000000000000000000000000000000000001010000100110010010101000,
	0b0000000000000000000000000000000000000000101000010011001001010100,
	0b0000000000000000000000000000000000000000010100001001100100101010,
	0b0000000000000000000000000000000000000000001010000100110010010101,
	0b0000000000000000000000000000000000000000000101000010011001001010,
	0b0000000000000000000000000000000000000000000010100001001100100101,
	0b0000000000000000000000000000000000000000000001010000100110010010,
	0b0000000000000000000000000000000000000000000000101000010011001001,
	0b0000000000000000000000000000000000000000000000010100001001100100,
	0b0000000000000000000000000000000000000000000000001010000100110010,
	0b0000000000000000000000000000000000000000000000000101000010011001,
	0b0000000000000000000000000000000000000000000000000010100001001100,
	0b0000000000000000000000000000000000000000000000000001010000100110,
	0b0000000000000000000000000000000000000000000000000000101000010011,
	0b0000000000000000000000000000000000000000000000000000010100001001,
	0b0000000000000000000000000000000000000000000000000000001010000100,
	0b0000000000000000000000000000000000000000000000000000000101000010,
	0b0000000000000000000000000000000000000000000000000000000010100001,
	0b0000000000000000000000000000000000000000000000000000000001010000,
	0b0000000000000000000000000000000000000000000000000000000000101000,
	0b0000000000000000000000000000000000000000000000000000000000010100,
	0b0000000000000000000000000000000000000000000000000000000000001010,
	0b0000000000000000000000000000000000000000000000000000000000000101,
	0b0000000000000000000000000000000000000000000000000000000000000010,
	0b0000000000000000000000000000000000000000000000000000000000000001,
	0b0000000000000000000000000000000000000000000000000000000000000000,
	0b0000000000000000000000000000000000000000000000000000000000000000,
	0b0000000000000000000000000000000000000000000000000000000000000000,
	0b0000000000000000000000000000000000000000000000000000000000000000,
	0b0000000000000000000000000000000000000000000000000000000000000000,
	0b0000000000000000000000000000000000000000000000000000000000000000,
	0b0000000000000000000000000000000000000000000000000000000000000000
];
def main(a: byte) -> int {
	for (x = a; x < vals.length; x = x + a) {
		var n = vals[x - a] >> a;
		if (n != vals[x]) return -1;
	}
	return 1;
}
