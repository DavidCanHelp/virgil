//@execute 1=3; 2=3; 3=3; 4=3; 5=3; 6=3; 7=3; 8=3; 9=3; 10=3; 11=3; 12=3; 13=3; 14=3; 15=3; 16=3; 17=3; 18=3; 19=3; 20=3; 21=3; 22=3; 23=3; 24=3; 25=3; 26=3; 27=3; 28=3; 29=3; 30=3; 31=3; 32=3; 33=3; 34=3; 35=3; 36=3; 37=3; 38=3; 39=3; 40=3; 41=3; 42=3; 43=3; 44=3; 45=3; 46=3; 47=3; 48=3; 49=3
def vals: Array<u47> = [
	0b10111111110100011110110111010010000011010101001,
	0b01011111111010001111011011101001000001101010100,
	0b00101111111101000111101101110100100000110101010,
	0b00010111111110100011110110111010010000011010101,
	0b00001011111111010001111011011101001000001101010,
	0b00000101111111101000111101101110100100000110101,
	0b00000010111111110100011110110111010010000011010,
	0b00000001011111111010001111011011101001000001101,
	0b00000000101111111101000111101101110100100000110,
	0b00000000010111111110100011110110111010010000011,
	0b00000000001011111111010001111011011101001000001,
	0b00000000000101111111101000111101101110100100000,
	0b00000000000010111111110100011110110111010010000,
	0b00000000000001011111111010001111011011101001000,
	0b00000000000000101111111101000111101101110100100,
	0b00000000000000010111111110100011110110111010010,
	0b00000000000000001011111111010001111011011101001,
	0b00000000000000000101111111101000111101101110100,
	0b00000000000000000010111111110100011110110111010,
	0b00000000000000000001011111111010001111011011101,
	0b00000000000000000000101111111101000111101101110,
	0b00000000000000000000010111111110100011110110111,
	0b00000000000000000000001011111111010001111011011,
	0b00000000000000000000000101111111101000111101101,
	0b00000000000000000000000010111111110100011110110,
	0b00000000000000000000000001011111111010001111011,
	0b00000000000000000000000000101111111101000111101,
	0b00000000000000000000000000010111111110100011110,
	0b00000000000000000000000000001011111111010001111,
	0b00000000000000000000000000000101111111101000111,
	0b00000000000000000000000000000010111111110100011,
	0b00000000000000000000000000000001011111111010001,
	0b00000000000000000000000000000000101111111101000,
	0b00000000000000000000000000000000010111111110100,
	0b00000000000000000000000000000000001011111111010,
	0b00000000000000000000000000000000000101111111101,
	0b00000000000000000000000000000000000010111111110,
	0b00000000000000000000000000000000000001011111111,
	0b00000000000000000000000000000000000000101111111,
	0b00000000000000000000000000000000000000010111111,
	0b00000000000000000000000000000000000000001011111,
	0b00000000000000000000000000000000000000000101111,
	0b00000000000000000000000000000000000000000010111,
	0b00000000000000000000000000000000000000000001011,
	0b00000000000000000000000000000000000000000000101,
	0b00000000000000000000000000000000000000000000010,
	0b00000000000000000000000000000000000000000000001,
	0b00000000000000000000000000000000000000000000000,
	0b00000000000000000000000000000000000000000000000,
	0b00000000000000000000000000000000000000000000000,
	0b00000000000000000000000000000000000000000000000,
	0b00000000000000000000000000000000000000000000000
];
def main(a: byte) -> int {
	for (x = a; x < vals.length; x = x + a) {
		var n = vals[x - a] >>> a;
		if (n != vals[x]) return -3;
	}
	return 3;
}
