//@execute = true
def main() -> bool {
	return test();
}
def neq(x: long, y: long, b: bool) -> int {
	if ((x != y) != b) return 1 / 0;
	if (x != x) return 1 / 0;
	if (y != y) return 1 / 0;
	return 99;
}
def test() -> bool {
	neq(0x0000000000000006, 0xFFFFFFFFFFFFFFFE, true);
	neq(0x0000000000000043, 0xFFFFFFFFFFFFFFFB, true);
	neq(0x00000000000002E2, 0xFFFFFFFFFFFFFFF2, true);
	neq(0x0000000000001FB7, 0xFFFFFFFFFFFFFFD7, true);
	neq(0x0000000000015CDE, 0xFFFFFFFFFFFFFF86, true);
	neq(0x00000000000EFD8B, 0xFFFFFFFFFFFFFE93, true);
	neq(0x0000000000A4E4FA, 0xFFFFFFFFFFFFFBBA, true);
	neq(0x000000000715D6BF, 0xFFFFFFFFFFFFF32F, true);
	neq(0x000000004DF03A36, 0xFFFFFFFFFFFFD98E, true);
	neq(0x0000000359528053, 0xFFFFFFFFFFFF8CAB, true);
	neq(0x00000024D68B8392, 0xFFFFFFFFFFFEA602, true);
	neq(0x0000019537FEA747, 0xFFFFFFFFFFFBF207, true);
	neq(0x0000116967F1300E, 0xFFFFFFFFFFF3D616, true);
	neq(0x0000BF87775D109B, 0xFFFFFFFFFFDB8243, true);
	neq(0x00083AD220FFB6AA, 0xFFFFFFFFFF9286CA, true);
	neq(0x005A87076AFCD94F, 0xFFFFFFFFFEB7945F, true);
	neq(0x03E3CD5198DD5666, 0xFFFFFFFFFC26BD1E, true);
	neq(0x2AC9D2819182B663, 0xFFFFFFFFF474375B, true);
	neq(0xD6AC0B91409DD642, 0xFFFFFFFFDD5CA612, true);
	neq(0x39647F3DC6C834D7, 0xFFFFFFFF9815F237, true);
	neq(0x775177A78A9A453E, 0xFFFFFFFEC841D6A6, true);
	neq(0x20802432F4A0F9AB, 0xFFFFFFFC58C583F3, true);
	neq(0x65818E3082EABA5A, 0xFFFFFFF50A508BDA, true);
	neq(0x5C911C15A01601DF, 0xFFFFFFDF1EF1A38F, true);
	neq(0xFA3C34EDE0F21496, 0xFFFFFF9D5CD4EAAE, true);
	neq(0xC0964638AA66E273, 0xFFFFFED8167EC00B, true);
	neq(0x4675046F526BBAF2, 0xFFFFFC88437C4022, true);
	neq(0x070730C88AA10867, 0xFFFFF598CA74C067, true);
	neq(0x4D4F189DF4EB5C6E, 0xFFFFE0CA5F5E4136, true);
	neq(0x52660EC9861CF8BB, 0xFFFFA25F1E1AC3A3, true);
	neq(0x8A62A2A8C33EB00A, 0xFFFEE71D5A504AEA, true);
	neq(0xF23CFD4063B1906F, 0xFFFCB5580EF0E0BF, true);
	neq(0x689EE1C448A134C6, 0xFFF620082CD2A23E, true);
	neq(0x7ED3B36F1EED4483, 0xFFE260188677E6BB, true);
	neq(0x7318B5C65431F1A2, 0xFFA720499367B432, true);
	neq(0xF20FCF859E2561F7, 0xFEF560DCBA371C97, true);
	neq(0x66ADEABDCB9B359E, 0xFCE022962EA555C6, true);
	neq(0x69791627BFAB4DCB, 0xF6A067C28BF00153, true);
	neq(0x8833F3B53C5C57BA, 0xE3E13747A3D003FA, true);
	neq(0xDA3B78C997F7C4FF, 0xABA3A5D6EB700BEF, true);

	neq(0x8833F3B53C5C57FF, 0xE3E13747A3D003FF, true);
	neq(0x8833F3B53C5C00FF, 0xE3E13747A3D000FF, true);
	neq(0x8833F3B53C5C00FF, 0xE3E13747A35C00FF, true);
	neq(0x8833F3B5A35C00FF, 0xE3E13747A35C00FF, true);
	neq(0x8833F3B5A35C00FF, 0xE3E137B5A35C00FF, true);
	neq(0x883137B5A35C00FF, 0xE3E137B5A35C00FF, true);
	neq(0x83E137B5A35C00FF, 0xE3E137B5A35C00FF, true);
	neq(0x83E137B5A35C00FF, 0x83E137B5A35C00FF, false);

	neq(0x00000000FFFFFFFF, 0x00000000FFFFFFFE, true);
	neq(0x11111111FFFFFFFF, 0x00000000FFFFFFFF, true);
	neq(0x00000001FFFFFFFF, 0x00000000FFFFFFFF, true);
	return true;
}
