//@execute 1=11; 2=11; 3=11; 4=11; 5=11; 6=11; 7=11; 8=11; 9=11; 10=11; 11=11; 12=11; 13=11; 14=11; 15=11; 16=11; 17=11; 18=11; 19=11; 20=11; 21=11; 22=11; 23=11; 24=11; 25=11; 26=11; 27=11; 28=11; 29=11; 30=11; 31=11; 32=11; 33=11; 34=11; 35=11; 36=11; 37=11; 38=11; 39=11; 40=11; 41=11; 42=11; 43=11; 44=11; 45=11; 46=11; 47=11; 48=11; 49=11; 50=11; 51=11
def vals: Array<u49> = [
	0b1000100011100110101001001101110000101100011100100,
	0b0100010001110011010100100110111000010110001110010,
	0b0010001000111001101010010011011100001011000111001,
	0b0001000100011100110101001001101110000101100011100,
	0b0000100010001110011010100100110111000010110001110,
	0b0000010001000111001101010010011011100001011000111,
	0b0000001000100011100110101001001101110000101100011,
	0b0000000100010001110011010100100110111000010110001,
	0b0000000010001000111001101010010011011100001011000,
	0b0000000001000100011100110101001001101110000101100,
	0b0000000000100010001110011010100100110111000010110,
	0b0000000000010001000111001101010010011011100001011,
	0b0000000000001000100011100110101001001101110000101,
	0b0000000000000100010001110011010100100110111000010,
	0b0000000000000010001000111001101010010011011100001,
	0b0000000000000001000100011100110101001001101110000,
	0b0000000000000000100010001110011010100100110111000,
	0b0000000000000000010001000111001101010010011011100,
	0b0000000000000000001000100011100110101001001101110,
	0b0000000000000000000100010001110011010100100110111,
	0b0000000000000000000010001000111001101010010011011,
	0b0000000000000000000001000100011100110101001001101,
	0b0000000000000000000000100010001110011010100100110,
	0b0000000000000000000000010001000111001101010010011,
	0b0000000000000000000000001000100011100110101001001,
	0b0000000000000000000000000100010001110011010100100,
	0b0000000000000000000000000010001000111001101010010,
	0b0000000000000000000000000001000100011100110101001,
	0b0000000000000000000000000000100010001110011010100,
	0b0000000000000000000000000000010001000111001101010,
	0b0000000000000000000000000000001000100011100110101,
	0b0000000000000000000000000000000100010001110011010,
	0b0000000000000000000000000000000010001000111001101,
	0b0000000000000000000000000000000001000100011100110,
	0b0000000000000000000000000000000000100010001110011,
	0b0000000000000000000000000000000000010001000111001,
	0b0000000000000000000000000000000000001000100011100,
	0b0000000000000000000000000000000000000100010001110,
	0b0000000000000000000000000000000000000010001000111,
	0b0000000000000000000000000000000000000001000100011,
	0b0000000000000000000000000000000000000000100010001,
	0b0000000000000000000000000000000000000000010001000,
	0b0000000000000000000000000000000000000000001000100,
	0b0000000000000000000000000000000000000000000100010,
	0b0000000000000000000000000000000000000000000010001,
	0b0000000000000000000000000000000000000000000001000,
	0b0000000000000000000000000000000000000000000000100,
	0b0000000000000000000000000000000000000000000000010,
	0b0000000000000000000000000000000000000000000000001,
	0b0000000000000000000000000000000000000000000000000,
	0b0000000000000000000000000000000000000000000000000,
	0b0000000000000000000000000000000000000000000000000,
	0b0000000000000000000000000000000000000000000000000,
	0b0000000000000000000000000000000000000000000000000
];
def main(a: byte) -> int {
	for (x = a; x < vals.length; x = x + a) {
		var n = vals(x - a) >> a;
		if (n != vals(x)) return -11;
	}
	return 11;
}
