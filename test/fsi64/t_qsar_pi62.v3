//@execute 1=3; 2=3; 3=3; 4=3; 5=3; 6=3; 7=3; 8=3; 9=3; 10=3; 11=3; 12=3; 13=3; 14=3; 15=3; 16=3; 17=3; 18=3; 19=3; 20=3; 21=3; 22=3; 23=3; 24=3; 25=3; 26=3; 27=3; 28=3; 29=3; 30=3; 31=3; 32=3; 33=3; 34=3; 35=3; 36=3; 37=3; 38=3; 39=3; 40=3; 41=3; 42=3; 43=3; 44=3; 45=3; 46=3; 47=3; 48=3; 49=3; 50=3; 51=3; 52=3; 53=3; 54=3; 55=3; 56=3; 57=3; 58=3; 59=3; 60=3; 61=3; 62=3; 63=3; 64=3
def vals: Array<i62> = [
	0b00000000111110001010000101110011110010010101100110001001011101,
	0b00000000011111000101000010111001111001001010110011000100101110,
	0b00000000001111100010100001011100111100100101011001100010010111,
	0b00000000000111110001010000101110011110010010101100110001001011,
	0b00000000000011111000101000010111001111001001010110011000100101,
	0b00000000000001111100010100001011100111100100101011001100010010,
	0b00000000000000111110001010000101110011110010010101100110001001,
	0b00000000000000011111000101000010111001111001001010110011000100,
	0b00000000000000001111100010100001011100111100100101011001100010,
	0b00000000000000000111110001010000101110011110010010101100110001,
	0b00000000000000000011111000101000010111001111001001010110011000,
	0b00000000000000000001111100010100001011100111100100101011001100,
	0b00000000000000000000111110001010000101110011110010010101100110,
	0b00000000000000000000011111000101000010111001111001001010110011,
	0b00000000000000000000001111100010100001011100111100100101011001,
	0b00000000000000000000000111110001010000101110011110010010101100,
	0b00000000000000000000000011111000101000010111001111001001010110,
	0b00000000000000000000000001111100010100001011100111100100101011,
	0b00000000000000000000000000111110001010000101110011110010010101,
	0b00000000000000000000000000011111000101000010111001111001001010,
	0b00000000000000000000000000001111100010100001011100111100100101,
	0b00000000000000000000000000000111110001010000101110011110010010,
	0b00000000000000000000000000000011111000101000010111001111001001,
	0b00000000000000000000000000000001111100010100001011100111100100,
	0b00000000000000000000000000000000111110001010000101110011110010,
	0b00000000000000000000000000000000011111000101000010111001111001,
	0b00000000000000000000000000000000001111100010100001011100111100,
	0b00000000000000000000000000000000000111110001010000101110011110,
	0b00000000000000000000000000000000000011111000101000010111001111,
	0b00000000000000000000000000000000000001111100010100001011100111,
	0b00000000000000000000000000000000000000111110001010000101110011,
	0b00000000000000000000000000000000000000011111000101000010111001,
	0b00000000000000000000000000000000000000001111100010100001011100,
	0b00000000000000000000000000000000000000000111110001010000101110,
	0b00000000000000000000000000000000000000000011111000101000010111,
	0b00000000000000000000000000000000000000000001111100010100001011,
	0b00000000000000000000000000000000000000000000111110001010000101,
	0b00000000000000000000000000000000000000000000011111000101000010,
	0b00000000000000000000000000000000000000000000001111100010100001,
	0b00000000000000000000000000000000000000000000000111110001010000,
	0b00000000000000000000000000000000000000000000000011111000101000,
	0b00000000000000000000000000000000000000000000000001111100010100,
	0b00000000000000000000000000000000000000000000000000111110001010,
	0b00000000000000000000000000000000000000000000000000011111000101,
	0b00000000000000000000000000000000000000000000000000001111100010,
	0b00000000000000000000000000000000000000000000000000000111110001,
	0b00000000000000000000000000000000000000000000000000000011111000,
	0b00000000000000000000000000000000000000000000000000000001111100,
	0b00000000000000000000000000000000000000000000000000000000111110,
	0b00000000000000000000000000000000000000000000000000000000011111,
	0b00000000000000000000000000000000000000000000000000000000001111,
	0b00000000000000000000000000000000000000000000000000000000000111,
	0b00000000000000000000000000000000000000000000000000000000000011,
	0b00000000000000000000000000000000000000000000000000000000000001,
	0b00000000000000000000000000000000000000000000000000000000000000,
	0b00000000000000000000000000000000000000000000000000000000000000,
	0b00000000000000000000000000000000000000000000000000000000000000,
	0b00000000000000000000000000000000000000000000000000000000000000,
	0b00000000000000000000000000000000000000000000000000000000000000,
	0b00000000000000000000000000000000000000000000000000000000000000,
	0b00000000000000000000000000000000000000000000000000000000000000,
	0b00000000000000000000000000000000000000000000000000000000000000,
	0b00000000000000000000000000000000000000000000000000000000000000,
	0b00000000000000000000000000000000000000000000000000000000000000,
	0b00000000000000000000000000000000000000000000000000000000000000,
	0b00000000000000000000000000000000000000000000000000000000000000,
	0b00000000000000000000000000000000000000000000000000000000000000
];
def main(a: byte) -> int {
	for (x = a; x < vals.length; x = x + a) {
		var n = vals(x - a) >> a;
		if (n != vals(x)) return -3;
	}
	return 3;
}
