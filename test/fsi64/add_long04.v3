//@execute = 33
//@heap-size=4000
def a = doOp();
def b = doFolded();
def main() -> int {
	def c = doOp();
	def d = doFolded();
	for (i = 0; i < a.length; i++) if (a[i] != b[i] || a[i] != c[i] || a[i] != d[i]) return -20 - i;
	return 33;
}
def op(x: long, y: long) -> long {
	return x + y;
}
def doOp() -> Array<long> {
	return  [
		op(0L, 0L),
		op(0L, 1L),
		op(0L, -9223372036854775808),
		op(0L, -9223372036854775807),
		op(0L, 4611686018427387904),
		op(0L, 1073741825L),
		op(0L, -4611686018427387904),
		op(0L, -1073741823L),
		op(1L, 0L),
		op(1L, 1L),
		op(1L, -9223372036854775808),
		op(1L, -9223372036854775807),
		op(1L, 4611686018427387904),
		op(1L, 1073741825L),
		op(1L, -4611686018427387904),
		op(1L, 4611686018427387903),
		op(-9223372036854775808, 0L),
		op(-9223372036854775808, 1L),
		op(-9223372036854775808, -9223372036854775808),
		op(-9223372036854775808, -9223372036854775807),
		op(-9223372036854775808, 4611686018427387904),
		op(-9223372036854775808, 1073741825L),
		op(-9223372036854775808, -4611686018427387904),
		op(-9223372036854775808, 4611686018427387903),
		op(-9223372036854775807, 0L),
		op(-9223372036854775807, 1L),
		op(-9223372036854775807, -9223372036854775808),
		op(-9223372036854775807, -9223372036854775807),
		op(-9223372036854775807, 4611686018427387904),
		op(-9223372036854775807, 1073741825L),
		op(-9223372036854775807, -4611686018427387904),
		op(-9223372036854775807, 4611686018427387903),
		op(4611686018427387904, 0L),
		op(4611686018427387904, 1L),
		op(4611686018427387904, -9223372036854775808),
		op(4611686018427387904, -9223372036854775807),
		op(4611686018427387904, 4611686018427387904),
		op(4611686018427387904, 1073741825L),
		op(4611686018427387904, -4611686018427387904),
		op(4611686018427387904, 4611686018427387903),
		op(1073741825L, 0L),
		op(1073741825L, 1L),
		op(1073741825L, -9223372036854775808),
		op(1073741825L, -9223372036854775807),
		op(1073741825L, 4611686018427387904),
		op(1073741825L, 1073741825L),
		op(1073741825L, -4611686018427387904),
		op(1073741825L, 4611686018427387903),
		op(-4611686018427387904, 0L),
		op(-4611686018427387904, 1L),
		op(-4611686018427387904, -9223372036854775808),
		op(-4611686018427387904, -9223372036854775807),
		op(-4611686018427387904, 4611686018427387904),
		op(-4611686018427387904, 1073741825L),
		op(-4611686018427387904, -4611686018427387904),
		op(-4611686018427387904, 4611686018427387903),
		op(4611686018427387903, 0L),
		op(4611686018427387903, 1L),
		op(4611686018427387903, -9223372036854775808),
		op(4611686018427387903, -9223372036854775807),
		op(4611686018427387903, 4611686018427387904),
		op(4611686018427387903, 1073741825L),
		op(4611686018427387903, -4611686018427387904),
		op(4611686018427387903, 4611686018427387903)
	];
}
def doFolded() -> Array<long> {
	return  [
		0L + 0L,
		0L + 1L,
		0L + -9223372036854775808,
		0L + -9223372036854775807,
		0L + 4611686018427387904,
		0L + 1073741825L,
		0L + -4611686018427387904,
		0L + -1073741823L,
		1L + 0L,
		1L + 1L,
		1L + -9223372036854775808,
		1L + -9223372036854775807,
		1L + 4611686018427387904,
		1L + 1073741825L,
		1L + -4611686018427387904,
		1L + 4611686018427387903, 
		-9223372036854775808 + 0L,
		-9223372036854775808 + 1L,
		-9223372036854775808 + -9223372036854775808,
		-9223372036854775808 + -9223372036854775807,
		-9223372036854775808 + 4611686018427387904,
		-9223372036854775808 + 1073741825L,
		-9223372036854775808 + -4611686018427387904,
		-9223372036854775808 + 4611686018427387903, 
		-9223372036854775807 + 0L,
		-9223372036854775807 + 1L,
		-9223372036854775807 + -9223372036854775808,
		-9223372036854775807 + -9223372036854775807,
		-9223372036854775807 + 4611686018427387904,
		-9223372036854775807 + 1073741825L,
		-9223372036854775807 + -4611686018427387904,
		-9223372036854775807 + 4611686018427387903, 
		4611686018427387904 + 0L,
		4611686018427387904 + 1L,
		4611686018427387904 + -9223372036854775808,
		4611686018427387904 + -9223372036854775807,
		4611686018427387904 + 4611686018427387904,
		4611686018427387904 + 1073741825L,
		4611686018427387904 + -4611686018427387904,
		4611686018427387904 + 4611686018427387903, 
		1073741825L + 0L,
		1073741825L + 1L,
		1073741825L + -9223372036854775808,
		1073741825L + -9223372036854775807,
		1073741825L + 4611686018427387904,
		1073741825L + 1073741825L,
		1073741825L + -4611686018427387904,
		1073741825L + 4611686018427387903, 
		-4611686018427387904 + 0L,
		-4611686018427387904 + 1L,
		-4611686018427387904 + -9223372036854775808,
		-4611686018427387904 + -9223372036854775807,
		-4611686018427387904 + 4611686018427387904,
		-4611686018427387904 + 1073741825L,
		-4611686018427387904 + -4611686018427387904,
		-4611686018427387904 + 4611686018427387903, 
		4611686018427387903 + 0L,
		4611686018427387903 + 1L,
		4611686018427387903 + -9223372036854775808,
		4611686018427387903 + -9223372036854775807,
		4611686018427387903 + 4611686018427387904,
		4611686018427387903 + 1073741825L,
		4611686018427387903 + -4611686018427387904,
		4611686018427387903 + 4611686018427387903
	];
}
