//@execute = 114
def cases = [
	((0x5CF7B620691A56DB, 0x00746B2A521B29DD), 0x00000000000000CC),
	((0x257D339D8FB35AA2, 0x01D4FD701A599E8A), 0x0000000000000014),
	((0x6C9B92848CD32D26, 0x029775DD1067D426), 0x0000000000000029),
	((0x3BE77A7004410D98, 0x052B2D120D80F3BE), 0x000000000000000B),
	((0x3539D2A5189BAF59, 0x05CBE7D062D46E9F), 0x0000000000000009),
	((0x50B15E94487DA952, 0x03FA3B4ED426B150), 0x0000000000000014),
	((0x683A607D9CB340F1, 0x01374DC10F0D03DB), 0x0000000000000055),
	((0x12C2842EC917AAC0, 0x0708443064FDE202), 0x0000000000000002),
	((0x7E2173EB26B77AA3, 0x0225A0C730351FF9), 0x000000000000003A),
	((0x5BA29966D7B79DAE, 0x0567E6ADCF47DA4D), 0x0000000000000010),
	((0x4E22ACEE27DBD7A1, 0x002F0A99D8017997), 0x00000000000001A9),
	((0x19FBD4A4A4FD5E01, 0x067F892F412AFC93), 0x0000000000000003),
	((0x00A535E780F1CAD4, 0x04D06E53523A4549), 0x0000000000000000),
	((0x1816FAD1F3EC40F8, 0x039B2A9204424FD7), 0x0000000000000006),
	((0x16D1EDDB66E63C20, 0x035AC5B4F621038B), 0x0000000000000006),
	((0x40F9ED9C9EBB266C, 0x061DCFAC9EBDB8EB), 0x000000000000000A),
	((0x0B649AAF21F96DA4, 0x008F62EB4FBE9937), 0x0000000000000014),
	((0x52F1C1B22E9D7212, 0x06F99D528C94A62B), 0x000000000000000B),
	((0x7F192369CD9648F9, 0x07F126D1F8E88276), 0x0000000000000010),
	((0x1E715D0385B9ECB5, 0x03E7AED884B6FDAC), 0x0000000000000007),
	((0x752DD275B64E1470, 0x07C4BBB7AED5F036), 0x000000000000000F),
	((0x044D9D02EC248D7E, 0x06EAB91869D21DF2), 0x0000000000000000),
	((0x5A939FDDBF1D9057, 0x03EBE4A25567A01D), 0x0000000000000017),
	((0x5E8004E636502B2E, 0x04F989F50D29C124), 0x0000000000000012),
	((0x6C85838FD6C07C32, 0x0339F112F4CF3F00), 0x0000000000000021),
	((0x5AB8F3E2B50D1560, 0x0140745E942E92BF), 0x0000000000000048),
	((0x115FCF9B79788403, 0x02916549A90D25D3), 0x0000000000000006),
	((0x0E2A63712CC995CA, 0x033AB8D62EE647CB), 0x0000000000000004),
	((0x58B09272834C9584, 0x050CE709ACC5411D), 0x0000000000000011),
	((0x2E142D8C3369597A, 0x06F6FA722DE3098E), 0x0000000000000006),
	((0x1D9A012832659D68, 0x00A77EDD7235F2F0), 0x000000000000002D),
	((0x60BADAF089A8C21A, 0x002BD062027202C2), 0x0000000000000235),
	((0x30BFE9B1A8CDACA0, 0x034A3DDA5DA5BF5B), 0x000000000000000E),
	((0x0691F95C4EA11F2D, 0x025383F232D2DF45), 0x0000000000000002),
	((0x7D192D2700768592, 0x04D757E52C66935B), 0x0000000000000019),
	((0x2B82F9D0C9A2CF52, 0x01D80B1076B40E54), 0x0000000000000017),
	((0x4D1E42021C0C9161, 0x07BCC2759A977655), 0x0000000000000009),
	((0x045996CFF83A497E, 0x046A4F4FA5D99735), 0x0000000000000000),
	((0x2BEDBE5DCABB3D2A, 0x02CA67DA78177603), 0x000000000000000F),
	((0x747EC29F13D50E44, 0x00F1D16BABBE5076), 0x000000000000007B),
	((0x581FEA3894A7BF42, 0x0479FEFDD2A69CEF), 0x0000000000000013),
	((0x144B1D83DC1B810E, 0x0213B94D97294999), 0x0000000000000009),
	((0x5C2259B11987447A, 0x018897A8C7FBC360), 0x000000000000003C),
	((0x1059F407A0B4A962, 0x0122628F941B3749), 0x000000000000000E),
	((0x22148F48D255855D, 0x06B3EB479EA00AD6), 0x0000000000000005),
	((0x7E65C533C6C8DC1F, 0x025875810921B214), 0x0000000000000035),
	((0x3F3EA62442D0C36E, 0x079F822DAFAAD3F5), 0x0000000000000008),
	((0x6C5750D65C384CBF, 0x06949CAA4F081796), 0x0000000000000010),
	((0x3D5B0448B7002E6D, 0x0357BD598602FF02), 0x0000000000000012),
	((0x7A502DBD341A8695, 0x025CE6D10B07DE34), 0x0000000000000033),
	((0x560C14DD0CA9B190, 0x019AD4B8B99446D0), 0x0000000000000035),
	((0x4099E7F885BBCE0E, 0x05C2E57BD8042B4F), 0x000000000000000B),
	((0x66F70A6AC03C28CB, 0x0301D9EC0DF18636), 0x0000000000000022),
	((0x1682A71B98ED69F1, 0x04D397F69B067BF3), 0x0000000000000004),
	((0x5B1CA91E8052FE0B, 0x0155CF8B6426B806), 0x0000000000000044),
	((0x07505C7A301DD4A0, 0x049032D63A1C3013), 0x0000000000000001),
	((0x602919056A982E74, 0x04CEE4E9BF07817D), 0x0000000000000013),
	((0x5E93796B9A4DD557, 0x04FED3FCC2DEC833), 0x0000000000000012),
	((0x7C93C04E4869B7A8, 0x06ADE6594011173A), 0x0000000000000012),
	((0x35422D882497816A, 0x05B4331D6F5AA5A8), 0x0000000000000009),
	((0x7D88258C29476D00, 0x0191F1EF21004CAE), 0x000000000000004F),
	((0x4D252CEA849C2588, 0x07495EC08CB21D41), 0x000000000000000A),
	((0x39B0D9F114AE34D2, 0x041E80C7CB869E15), 0x000000000000000E),
	((0x503EFE6E4ACE16FC, 0x018295C796C4AC81), 0x0000000000000035),
	((0x501D6B93BCA5ADAB, 0x02F7D4CAB51304E7), 0x000000000000001A),
	((0x35F6D1F3F52B6CE8, 0x037E4D710F4C2151), 0x000000000000000F),
	((0x589C5FAA9DE53B94, 0x03CDDAEE986D66CD), 0x0000000000000017),
	((0x1FEFDE9A589EA189, 0x011573DCA54B8438), 0x000000000000001D),
	((0x6D0234CFD2157D4F, 0x041F91FD19ED6F14), 0x000000000000001A),
	((0x7496490448DA1B78, 0x06A7FF0F3B559506), 0x0000000000000011),
	((0x08F66D3F84532999, 0x039305D7255FA2A1), 0x0000000000000002),
	((0x558A9197AC239EE5, 0x02E2D876B01AAA13), 0x000000000000001D),
	((0x77FFA11677B85467, 0x032FEF38BE357E67), 0x0000000000000025),
	((0x4C348AB98224A6DC, 0x049E34EE1CD7C1EA), 0x0000000000000010),
	((0x67A7989463511C2A, 0x007D07FD03677059), 0x00000000000000D4),
	((0x26E6D712D274A681, 0x01C56941C0AA9781), 0x0000000000000015),
	((0x35B06E5B0E80BF0D, 0x057223E230797ADF), 0x0000000000000009),
	((0x051BEFCE79323255, 0x034B4B32CE7888F0), 0x0000000000000001),
	((0x3873B9AE147C1833, 0x04631DCDAC5D52C9), 0x000000000000000C),
	((0x7975B2D8DDA01170, 0x01802EFBCD00209D), 0x0000000000000050),
	((0x09A4C0B2851E84FB, 0x0179A98FFD76C7C4), 0x0000000000000006),
	((0x74487920485B36C6, 0x03B0915445D710F7), 0x000000000000001F),
	((0x49CEB2B0BCFE323E, 0x02061A28BFD1474D), 0x0000000000000024),
	((0x599AB4D5CC5EA265, 0x05C57DF4F08072A8), 0x000000000000000F),
	((0x6507EA50C644D18D, 0x04E12C8AAF9F4A27), 0x0000000000000014),
	((0x39A217AC07AA2AB3, 0x06B1C29B92711548), 0x0000000000000008),
	((0x177337E05F71B675, 0x064AE6DFB6667C4D), 0x0000000000000003),
	((0x1AE74116E6012DB1, 0x02C8FE8F23C1B291), 0x0000000000000009),
	((0x4A48338B64CA5BBC, 0x05249C4CCCC56F65), 0x000000000000000E),
	((0x2158F48D89D62A3C, 0x05AF9EA3BA78D415), 0x0000000000000005),
	((0x603B97A24CDE50A3, 0x071625361589A7B9), 0x000000000000000D),
	((0x1DB7D7C80D184148, 0x0064D5BE7BC03B6F), 0x000000000000004B),
	((0x2A40A2D630238E23, 0x05205C02D8D6D3A4), 0x0000000000000008),
	((0x34E3B900ED379F25, 0x00F9A1D9C3039CFA), 0x0000000000000036),
	((0x03BC827AEF503432, 0x0250EE616F69FD8B), 0x0000000000000001),
	((0x56B35D35AB55CCBC, 0x02D9ED88FAE07D04), 0x000000000000001E),
	((0x7F64C4C57BB6AEFD, 0x02BD930B568D8852), 0x000000000000002E),
	((0x281FD6637336E8D1, 0x001EDDFCB2F8FF7F), 0x000000000000014C),
	((0x1C21D30E8889442D, 0x019EB4093D1CC64A), 0x0000000000000011),
	((0x54AC61CBF928C940, 0x06335D86A0257A3A), 0x000000000000000D)
];
def check(b: bool) -> int {
	return if (!b, 1 / 0);
}
def main() -> int {
	for (c in cases) {
		var x = u64.!(c.0.0), y = u64.!(c.0.1);
		var q = u64.!(c.1);

		check((x / y) == q);
	}
	return 114;
}
