//@execute 1=3; 2=3; 3=3; 4=3; 5=3; 6=3; 7=3; 8=3; 9=3; 10=3; 11=3; 12=3; 13=3; 14=3; 15=3; 16=3; 17=3; 18=3; 19=3; 20=3; 21=3; 22=3; 23=3; 24=3; 25=3; 26=3; 27=3; 28=3; 29=3; 30=3; 31=3; 32=3; 33=3; 34=3; 35=3; 36=3; 37=3; 38=3; 39=3; 40=3; 41=3; 42=3; 43=3; 44=3; 45=3; 46=3; 47=3; 48=3; 49=3; 50=3
def vals: Array<i48> = [
	0b001011011101010010100100010100110010111101010101,
	0b000101101110101001010010001010011001011110101010,
	0b000010110111010100101001000101001100101111010101,
	0b000001011011101010010100100010100110010111101010,
	0b000000101101110101001010010001010011001011110101,
	0b000000010110111010100101001000101001100101111010,
	0b000000001011011101010010100100010100110010111101,
	0b000000000101101110101001010010001010011001011110,
	0b000000000010110111010100101001000101001100101111,
	0b000000000001011011101010010100100010100110010111,
	0b000000000000101101110101001010010001010011001011,
	0b000000000000010110111010100101001000101001100101,
	0b000000000000001011011101010010100100010100110010,
	0b000000000000000101101110101001010010001010011001,
	0b000000000000000010110111010100101001000101001100,
	0b000000000000000001011011101010010100100010100110,
	0b000000000000000000101101110101001010010001010011,
	0b000000000000000000010110111010100101001000101001,
	0b000000000000000000001011011101010010100100010100,
	0b000000000000000000000101101110101001010010001010,
	0b000000000000000000000010110111010100101001000101,
	0b000000000000000000000001011011101010010100100010,
	0b000000000000000000000000101101110101001010010001,
	0b000000000000000000000000010110111010100101001000,
	0b000000000000000000000000001011011101010010100100,
	0b000000000000000000000000000101101110101001010010,
	0b000000000000000000000000000010110111010100101001,
	0b000000000000000000000000000001011011101010010100,
	0b000000000000000000000000000000101101110101001010,
	0b000000000000000000000000000000010110111010100101,
	0b000000000000000000000000000000001011011101010010,
	0b000000000000000000000000000000000101101110101001,
	0b000000000000000000000000000000000010110111010100,
	0b000000000000000000000000000000000001011011101010,
	0b000000000000000000000000000000000000101101110101,
	0b000000000000000000000000000000000000010110111010,
	0b000000000000000000000000000000000000001011011101,
	0b000000000000000000000000000000000000000101101110,
	0b000000000000000000000000000000000000000010110111,
	0b000000000000000000000000000000000000000001011011,
	0b000000000000000000000000000000000000000000101101,
	0b000000000000000000000000000000000000000000010110,
	0b000000000000000000000000000000000000000000001011,
	0b000000000000000000000000000000000000000000000101,
	0b000000000000000000000000000000000000000000000010,
	0b000000000000000000000000000000000000000000000001,
	0b000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000
];
def main(a: byte) -> int {
	for (x = a; x < vals.length; x = x + a) {
		var n = vals(x - a) >> a;
		if (n != vals(x)) return -3;
	}
	return 3;
}
