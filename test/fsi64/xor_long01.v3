//@execute = true
var x = test();
def main() -> bool {
	return test();
}
def xor(x: long, y: long, z: long) -> int {
	if ((x ^ y) != z) return 1 / 0;
	return 99;
}
def test() -> bool {
	xor(0x0000000000000007, 0xFFFFFFFFFFFFFFFD, 0xFFFFFFFFFFFFFFFA);
	xor(0x0000000000000032, 0xFFFFFFFFFFFFFFF9, 0xFFFFFFFFFFFFFFCB);
	xor(0x000000000000015F, 0xFFFFFFFFFFFFFFED, 0xFFFFFFFFFFFFFEB2);
	xor(0x000000000000099A, 0xFFFFFFFFFFFFFFC9, 0xFFFFFFFFFFFFF653);
	xor(0x0000000000004337, 0xFFFFFFFFFFFFFF5D, 0xFFFFFFFFFFFFBC6A);
	xor(0x000000000001D682, 0xFFFFFFFFFFFFFE19, 0xFFFFFFFFFFFE289B);
	xor(0x00000000000CDD8F, 0xFFFFFFFFFFFFFA4D, 0xFFFFFFFFFFF327C2);
	xor(0x00000000005A0EEA, 0xFFFFFFFFFFFFEEE9, 0xFFFFFFFFFFA5E003);
	xor(0x0000000002766867, 0xFFFFFFFFFFFFCCBD, 0xFFFFFFFFFD89A4DA);
	xor(0x00000000113CDAD2, 0xFFFFFFFFFFFF6639, 0xFFFFFFFFEEC3BCEB);
	xor(0x0000000078A9FBBF, 0xFFFFFFFFFFFE32AD, 0xFFFFFFFF8757C912);
	xor(0x000000034CA5E23A, 0xFFFFFFFFFFFA9809, 0xFFFFFFFCB35F7A33);
	xor(0x0000001718892F97, 0xFFFFFFFFFFEFC81D, 0xFFFFFFE8E766E78A);
	xor(0x000000A1ABC04D22, 0xFFFFFFFFFFCF5859, 0xFFFFFF5E540F157B);
	xor(0x0000046BB2421BEF, 0xFFFFFFFFFF6E090D, 0xFFFFFB944D2C12E2);
	xor(0x00001EF1DFCEC38A, 0xFFFFFFFFFE4A1B29, 0xFFFFE10E2184D8A3);
	xor(0x0000D89D1EA758C7, 0xFFFFFFFFFADE517D, 0xFFFF2762E47909BA);
	xor(0x0005EC4BD6936D72, 0xFFFFFFFFF09AF479, 0xFFFA13B42609990B);
	xor(0x00297612DE07FE1F, 0xFFFFFFFFD1D0DD6D, 0xFFD689ED0FD72372);
	xor(0x01223A841237F2DA, 0xFFFFFFFF75729849, 0xFEDDC57B67456A93);
	xor(0x07EF999C7F87A3F7, 0xFFFFFFFE6057C8DD, 0xF81066621FD06B2A);
	xor(0x378D33477CB57BC2, 0xFFFFFFFB21075A99, 0xC872CCBC5DB2215B);
	xor(0x84DC66F468F6624F, 0xFFFFFFF163160FCD, 0x7B2399050BE06D82);
	xor(0xA206D0AEDEBCB02A, 0xFFFFFFD429422F69, 0x5DF92F7AF7FE9F43);
	xor(0x6E2FB4C81728D127, 0xFFFFFF7C7BC68E3D, 0x91D04BB46CEE5F1A);
	xor(0x034DF178A21DB812, 0xFFFFFE757353AAB9, 0xFCB20F0DD14E12AB);
	xor(0x17219A4C6ED0087F, 0xFFFFFB6059FB002D, 0xE8DE612C372B0852);
	xor(0xA1EB381707B03B7A, 0xFFFFF2210DF10089, 0x5E14CA360A413BF3);
	xor(0x6D6E88A135D1A057, 0xFFFFD66329D3019D, 0x92915EC21C02A1CA);
	xor(0xFE05BC6878BB6262, 0xFFFF83297D7904D9, 0x01FA3F4105C266BB);
	xor(0xF22826DB4D1FB0AF, 0xFFFE897C786B0E8D, 0x0DD6AFA73574BE22);
	xor(0x9F190FFF1BDDD4CA, 0xFFFB9C7569412BA9, 0x60E2938A729CFF63);
	xor(0x59AF6FF9C310D187, 0xFFF2D5603BC382FD, 0xA65DBA99F8D3537A);
	xor(0x73CC0FD45575BAB2, 0xFFD88020B34A88F9, 0x8C148FF4E63F324B);
	xor(0x2A946ECE56381ADF, 0xFF89806219DF9AED, 0xD51DEEAC4FE78032);
	xor(0x2A0F07A45B88BC1A, 0xFE9C81264D9ED0C9, 0xD493868216166CD3);
	xor(0x2669357E80BD24B7, 0xFBD58372E8DC725D, 0xDDBCB60C686156EA);
	xor(0x0CE07675852C0102, 0xF3808A58BA955719, 0xFF60FC2D3FB9561B);
	xor(0x5A233D36A434070F, 0xDA819F0A2FC0054D, 0x80A2A23C8BF40242);
	xor(0x76F6AC7E7D6C316A, 0x8F84DD1E8F400FE9, 0xF9727160F22C3E83);
	return true;
}
