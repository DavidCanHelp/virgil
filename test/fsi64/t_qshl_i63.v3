//@execute 1=2; 2=2; 3=2; 4=2; 5=2; 6=2; 7=2; 8=2; 9=2; 10=2; 11=2; 12=2; 13=2; 14=2; 15=2; 16=2; 17=2; 18=2; 19=2; 20=2; 21=2; 22=2; 23=2; 24=2; 25=2; 26=2; 27=2; 28=2; 29=2; 30=2; 31=2; 32=2; 33=2; 34=2; 35=2; 36=2; 37=2; 38=2; 39=2; 40=2; 41=2; 42=2; 43=2; 44=2; 45=2; 46=2; 47=2; 48=2; 49=2; 50=2; 51=2; 52=2; 53=2; 54=2; 55=2; 56=2; 57=2; 58=2; 59=2; 60=2; 61=2; 62=2; 63=2; 64=2; 65=2
def vals: Array<i63> = [
	0b010100011110101111000111100110010111100111100111111000010110001,
	0b101000111101011110001111001100101111001111001111110000101100010,
	0b010001111010111100011110011001011110011110011111100001011000100,
	0b100011110101111000111100110010111100111100111111000010110001000,
	0b000111101011110001111001100101111001111001111110000101100010000,
	0b001111010111100011110011001011110011110011111100001011000100000,
	0b011110101111000111100110010111100111100111111000010110001000000,
	0b111101011110001111001100101111001111001111110000101100010000000,
	0b111010111100011110011001011110011110011111100001011000100000000,
	0b110101111000111100110010111100111100111111000010110001000000000,
	0b101011110001111001100101111001111001111110000101100010000000000,
	0b010111100011110011001011110011110011111100001011000100000000000,
	0b101111000111100110010111100111100111111000010110001000000000000,
	0b011110001111001100101111001111001111110000101100010000000000000,
	0b111100011110011001011110011110011111100001011000100000000000000,
	0b111000111100110010111100111100111111000010110001000000000000000,
	0b110001111001100101111001111001111110000101100010000000000000000,
	0b100011110011001011110011110011111100001011000100000000000000000,
	0b000111100110010111100111100111111000010110001000000000000000000,
	0b001111001100101111001111001111110000101100010000000000000000000,
	0b011110011001011110011110011111100001011000100000000000000000000,
	0b111100110010111100111100111111000010110001000000000000000000000,
	0b111001100101111001111001111110000101100010000000000000000000000,
	0b110011001011110011110011111100001011000100000000000000000000000,
	0b100110010111100111100111111000010110001000000000000000000000000,
	0b001100101111001111001111110000101100010000000000000000000000000,
	0b011001011110011110011111100001011000100000000000000000000000000,
	0b110010111100111100111111000010110001000000000000000000000000000,
	0b100101111001111001111110000101100010000000000000000000000000000,
	0b001011110011110011111100001011000100000000000000000000000000000,
	0b010111100111100111111000010110001000000000000000000000000000000,
	0b101111001111001111110000101100010000000000000000000000000000000,
	0b011110011110011111100001011000100000000000000000000000000000000,
	0b111100111100111111000010110001000000000000000000000000000000000,
	0b111001111001111110000101100010000000000000000000000000000000000,
	0b110011110011111100001011000100000000000000000000000000000000000,
	0b100111100111111000010110001000000000000000000000000000000000000,
	0b001111001111110000101100010000000000000000000000000000000000000,
	0b011110011111100001011000100000000000000000000000000000000000000,
	0b111100111111000010110001000000000000000000000000000000000000000,
	0b111001111110000101100010000000000000000000000000000000000000000,
	0b110011111100001011000100000000000000000000000000000000000000000,
	0b100111111000010110001000000000000000000000000000000000000000000,
	0b001111110000101100010000000000000000000000000000000000000000000,
	0b011111100001011000100000000000000000000000000000000000000000000,
	0b111111000010110001000000000000000000000000000000000000000000000,
	0b111110000101100010000000000000000000000000000000000000000000000,
	0b111100001011000100000000000000000000000000000000000000000000000,
	0b111000010110001000000000000000000000000000000000000000000000000,
	0b110000101100010000000000000000000000000000000000000000000000000,
	0b100001011000100000000000000000000000000000000000000000000000000,
	0b000010110001000000000000000000000000000000000000000000000000000,
	0b000101100010000000000000000000000000000000000000000000000000000,
	0b001011000100000000000000000000000000000000000000000000000000000,
	0b010110001000000000000000000000000000000000000000000000000000000,
	0b101100010000000000000000000000000000000000000000000000000000000,
	0b011000100000000000000000000000000000000000000000000000000000000,
	0b110001000000000000000000000000000000000000000000000000000000000,
	0b100010000000000000000000000000000000000000000000000000000000000,
	0b000100000000000000000000000000000000000000000000000000000000000,
	0b001000000000000000000000000000000000000000000000000000000000000,
	0b010000000000000000000000000000000000000000000000000000000000000,
	0b100000000000000000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000000000000000000
];
def main(a: byte) -> int {
	for (x = a; x < vals.length; x = x + a) {
		var n = vals[x - a] << a;
		if (n != vals[x]) return -2;
	}
	return 2;
}
