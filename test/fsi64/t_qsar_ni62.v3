//@execute 1=7; 2=7; 3=7; 4=7; 5=7; 6=7; 7=7; 8=7; 9=7; 10=7; 11=7; 12=7; 13=7; 14=7; 15=7; 16=7; 17=7; 18=7; 19=7; 20=7; 21=7; 22=7; 23=7; 24=7; 25=7; 26=7; 27=7; 28=7; 29=7; 30=7; 31=7; 32=7; 33=7; 34=7; 35=7; 36=7; 37=7; 38=7; 39=7; 40=7; 41=7; 42=7; 43=7; 44=7; 45=7; 46=7; 47=7; 48=7; 49=7; 50=7; 51=7; 52=7; 53=7; 54=7; 55=7; 56=7; 57=7; 58=7; 59=7; 60=7; 61=7; 62=7; 63=7; 64=7
def vals: Array<i62> = [
	0b00011000000101010011010110110100111111110011100010111101000010,
	0b00001100000010101001101011011010011111111001110001011110100001,
	0b00000110000001010100110101101101001111111100111000101111010000,
	0b00000011000000101010011010110110100111111110011100010111101000,
	0b00000001100000010101001101011011010011111111001110001011110100,
	0b00000000110000001010100110101101101001111111100111000101111010,
	0b00000000011000000101010011010110110100111111110011100010111101,
	0b00000000001100000010101001101011011010011111111001110001011110,
	0b00000000000110000001010100110101101101001111111100111000101111,
	0b00000000000011000000101010011010110110100111111110011100010111,
	0b00000000000001100000010101001101011011010011111111001110001011,
	0b00000000000000110000001010100110101101101001111111100111000101,
	0b00000000000000011000000101010011010110110100111111110011100010,
	0b00000000000000001100000010101001101011011010011111111001110001,
	0b00000000000000000110000001010100110101101101001111111100111000,
	0b00000000000000000011000000101010011010110110100111111110011100,
	0b00000000000000000001100000010101001101011011010011111111001110,
	0b00000000000000000000110000001010100110101101101001111111100111,
	0b00000000000000000000011000000101010011010110110100111111110011,
	0b00000000000000000000001100000010101001101011011010011111111001,
	0b00000000000000000000000110000001010100110101101101001111111100,
	0b00000000000000000000000011000000101010011010110110100111111110,
	0b00000000000000000000000001100000010101001101011011010011111111,
	0b00000000000000000000000000110000001010100110101101101001111111,
	0b00000000000000000000000000011000000101010011010110110100111111,
	0b00000000000000000000000000001100000010101001101011011010011111,
	0b00000000000000000000000000000110000001010100110101101101001111,
	0b00000000000000000000000000000011000000101010011010110110100111,
	0b00000000000000000000000000000001100000010101001101011011010011,
	0b00000000000000000000000000000000110000001010100110101101101001,
	0b00000000000000000000000000000000011000000101010011010110110100,
	0b00000000000000000000000000000000001100000010101001101011011010,
	0b00000000000000000000000000000000000110000001010100110101101101,
	0b00000000000000000000000000000000000011000000101010011010110110,
	0b00000000000000000000000000000000000001100000010101001101011011,
	0b00000000000000000000000000000000000000110000001010100110101101,
	0b00000000000000000000000000000000000000011000000101010011010110,
	0b00000000000000000000000000000000000000001100000010101001101011,
	0b00000000000000000000000000000000000000000110000001010100110101,
	0b00000000000000000000000000000000000000000011000000101010011010,
	0b00000000000000000000000000000000000000000001100000010101001101,
	0b00000000000000000000000000000000000000000000110000001010100110,
	0b00000000000000000000000000000000000000000000011000000101010011,
	0b00000000000000000000000000000000000000000000001100000010101001,
	0b00000000000000000000000000000000000000000000000110000001010100,
	0b00000000000000000000000000000000000000000000000011000000101010,
	0b00000000000000000000000000000000000000000000000001100000010101,
	0b00000000000000000000000000000000000000000000000000110000001010,
	0b00000000000000000000000000000000000000000000000000011000000101,
	0b00000000000000000000000000000000000000000000000000001100000010,
	0b00000000000000000000000000000000000000000000000000000110000001,
	0b00000000000000000000000000000000000000000000000000000011000000,
	0b00000000000000000000000000000000000000000000000000000001100000,
	0b00000000000000000000000000000000000000000000000000000000110000,
	0b00000000000000000000000000000000000000000000000000000000011000,
	0b00000000000000000000000000000000000000000000000000000000001100,
	0b00000000000000000000000000000000000000000000000000000000000110,
	0b00000000000000000000000000000000000000000000000000000000000011,
	0b00000000000000000000000000000000000000000000000000000000000001,
	0b00000000000000000000000000000000000000000000000000000000000000,
	0b00000000000000000000000000000000000000000000000000000000000000,
	0b00000000000000000000000000000000000000000000000000000000000000,
	0b00000000000000000000000000000000000000000000000000000000000000,
	0b00000000000000000000000000000000000000000000000000000000000000,
	0b00000000000000000000000000000000000000000000000000000000000000,
	0b00000000000000000000000000000000000000000000000000000000000000,
	0b00000000000000000000000000000000000000000000000000000000000000
];
def main(a: byte) -> int {
	for (x = a; x < vals.length; x = x + a) {
		var n = vals(x - a) >> a;
		if (n != vals(x)) return -7;
	}
	return 7;
}
