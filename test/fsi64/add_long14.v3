//@execute = 109
def main() -> int {
	return test();
}
def add(x: long, y: int) -> long {
	match(y) {
		0: return x + 0x0000000000000005;
		1: return x + 0x0000000000000024;
		2: return x + 0x00000000000000FD;
		3: return x + 0x00000000000006EC;
		4: return x + 0x0000000000003075;
		5: return x + 0x0000000000015334;
		6: return x + 0x000000000009466D;
		7: return x + 0x000000000040ECFC;
		8: return x + 0x0000000001C67AE5;
		9: return x + 0x000000000C6D5C44;
		10: return x + 0x0000000056FD85DD;
		11: return x + 0x0000000260EEA90C;
		12: return x + 0x00000010A6869F55;
		13: return x + 0x000000748DAE5B54;
		14: return x + 0x0000032FDFC47F4D;
		15: return x + 0x0000164F1E5F7B1C;
		16: return x + 0x00009C29D49C5DC5;
		17: return x + 0x00044524D0469064;
		18: return x + 0x001DE401B1EDF2BD;
		19: return x + 0x00D13C0BDD81A32C;
		20: return x + 0x05B8A4530E8B7635;
		21: return x + 0x280C7E4565D03B74;
		22: return x + 0x185773E5C8B1A02D;
		23: return x + 0xAA642B487CDB613C;
		24: return x + 0xA8BD2EFB69FFA8A5;
		25: return x + 0x9D2C48DFE5FD9C84;
		26: return x + 0x4C35FE1F49EF479D;
		27: return x + 0x1579F2DB058AF54C;
		28: return x + 0x9655A3FD26CCB515;
		29: return x + 0x1C577BEC0F98F394;
		30: return x + 0xC66463746D2EA90D;
		31: return x + 0x6CBEB82EFC469F5C;
		32: return x + 0xF9370948E5EE5B85;
		33: return x + 0xD08140FE498480A4;
		34: return x + 0xB388C6F4029F847D;
		35: return x + 0xE8BD70AC125C9F6C;
		36: return x + 0x5D2E14B480885BF5;
		37: return x + 0x8C4290EF83BA83B4;
		38: return x + 0xD5D1F68C9A1999ED;
		39: return x + 0xD8BDBDD836B3357C;
		40: return x + 0xED3030E97EE67665;
		41: return x + 0x7C515662784D3CC4;
		42: return x + 0x66395CB14A1CA95D;
		43: return x + 0xCB9188D906C8A18C;
	}
	return 88;
}
def test() -> int {
	if(add(0x0000000000000004, 0) != 0x0000000000000009) return 1 / 0;
	if(add(0x000000000000000D, 1) != 0x0000000000000031) return 1 / 0;
	if(add(0x0000000000000028, 2) != 0x0000000000000125) return 1 / 0;
	if(add(0x0000000000000079, 3) != 0x0000000000000765) return 1 / 0;
	if(add(0x000000000000016C, 4) != 0x00000000000031E1) return 1 / 0;
	if(add(0x0000000000000445, 5) != 0x0000000000015779) return 1 / 0;
	if(add(0x0000000000000CD0, 6) != 0x000000000009533D) return 1 / 0;
	if(add(0x0000000000002671, 7) != 0x000000000041136D) return 1 / 0;
	if(add(0x0000000000007354, 8) != 0x0000000001C6EE39) return 1 / 0;
	if(add(0x00000000000159FD, 9) != 0x000000000C6EB641) return 1 / 0;
	if(add(0x0000000000040DF8, 10) != 0x00000000570193D5) return 1 / 0;
	if(add(0x00000000000C29E9, 11) != 0x0000000260FAD2F5) return 1 / 0;
	if(add(0x0000000000247DBC, 12) != 0x00000010A6AB1D11) return 1 / 0;
	if(add(0x00000000006D7935, 13) != 0x000000748E1BD489) return 1 / 0;
	if(add(0x0000000001486BA0, 14) != 0x0000032FE10CEAED) return 1 / 0;
	if(add(0x0000000003D942E1, 15) != 0x0000164F2238BDFD) return 1 / 0;
	if(add(0x000000000B8BC8A4, 16) != 0x00009C29E0282669) return 1 / 0;
	if(add(0x0000000022A359ED, 17) != 0x00044524F2E9EA51) return 1 / 0;
	if(add(0x0000000067EA0DC8, 18) != 0x001DE40219D80085) return 1 / 0;
	if(add(0x0000000137BE2959, 19) != 0x00D13C0D153FCC85) return 1 / 0;
	if(add(0x00000003A73A7C0C, 20) != 0x05B8A456B5C5F241) return 1 / 0;
	if(add(0x0000000AF5AF7425, 21) != 0x280C7E505B7FAF99) return 1 / 0;
	if(add(0x00000020E10E5C70, 22) != 0x18577406A9BFFC9D) return 1 / 0;
	if(add(0x00000062A32B1551, 23) != 0xAA642BAB2006768D) return 1 / 0;
	if(add(0x00000127E9813FF4, 24) != 0xA8BD30235380E899) return 1 / 0;
	if(add(0x00000377BC83BFDD, 25) != 0x9D2C4C57A2815C61) return 1 / 0;
	if(add(0x00000A67358B3F98, 26) != 0x4C3608867F7A8735) return 1 / 0;
	if(add(0x00001F35A0A1BEC9, 27) != 0x157A1210A62CB415) return 1 / 0;
	if(add(0x00005DA0E1E53C5C, 28) != 0x9656019E08B1F171) return 1 / 0;
	if(add(0x000118E2A5AFB515, 29) != 0x1C5894CEB548A8A9) return 1 / 0;
	if(add(0x00034AA7F10F1F40, 30) != 0xC667AE1C5E3DC84D) return 1 / 0;
	if(add(0x0009DFF7D32D5DC1, 31) != 0x6CC89826CF73FD1D) return 1 / 0;
	if(add(0x001D9FE779881944, 32) != 0xF954A9305F7674C9) return 1 / 0;
	if(add(0x0058DFB66C984BCD, 33) != 0xD0DA20B4B61CCC71) return 1 / 0;
	if(add(0x010A9F2345C8E368, 34) != 0xB4936617486867E5) return 1 / 0;
	if(add(0x031FDD69D15AAA39, 35) != 0xEBDD4E15E3B749A5) return 1 / 0;
	if(add(0x095F983D740FFEAC, 36) != 0x668DACF1F4985AA1) return 1 / 0;
	if(add(0x1C1EC8B85C2FFC05, 37) != 0xA86159A7DFEA7FB9) return 1 / 0;
	if(add(0x545C5A29148FF410, 38) != 0x2A2E50B5AEA98DFD) return 1 / 0;
	if(add(0xFD150E7B3DAFDC31, 39) != 0xD5D2CC53746311AD) return 1 / 0;
	if(add(0xF73F2B71B90F9494, 40) != 0xE46F5C5B37F60AF9) return 1 / 0;
	if(add(0xE5BD82552B2EBDBD, 41) != 0x620ED8B7A37BFA81) return 1 / 0;
	if(add(0xB13886FF818C3938, 42) != 0x1771E3B0CBA8E295) return 1 / 0;
	if(add(0x13A994FE84A4ABA9, 43) != 0xDF3B1DD78B6D4D35) return 1 / 0;
	return 109;
}
