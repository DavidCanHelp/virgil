//@execute 1=3; 2=3; 3=3; 4=3; 5=3; 6=3; 7=3; 8=3; 9=3; 10=3; 11=3; 12=3; 13=3; 14=3; 15=3; 16=3; 17=3; 18=3; 19=3; 20=3; 21=3; 22=3; 23=3; 24=3; 25=3; 26=3; 27=3; 28=3; 29=3; 30=3; 31=3; 32=3; 33=3; 34=3; 35=3; 36=3; 37=3; 38=3; 39=3; 40=3; 41=3; 42=3; 43=3; 44=3; 45=3; 46=3; 47=3; 48=3; 49=3; 50=3; 51=3
def vals: Array<i49> = [
	0b0010011001011011010001001010100100100111010001110,
	0b0001001100101101101000100101010010010011101000111,
	0b0000100110010110110100010010101001001001110100011,
	0b0000010011001011011010001001010100100100111010001,
	0b0000001001100101101101000100101010010010011101000,
	0b0000000100110010110110100010010101001001001110100,
	0b0000000010011001011011010001001010100100100111010,
	0b0000000001001100101101101000100101010010010011101,
	0b0000000000100110010110110100010010101001001001110,
	0b0000000000010011001011011010001001010100100100111,
	0b0000000000001001100101101101000100101010010010011,
	0b0000000000000100110010110110100010010101001001001,
	0b0000000000000010011001011011010001001010100100100,
	0b0000000000000001001100101101101000100101010010010,
	0b0000000000000000100110010110110100010010101001001,
	0b0000000000000000010011001011011010001001010100100,
	0b0000000000000000001001100101101101000100101010010,
	0b0000000000000000000100110010110110100010010101001,
	0b0000000000000000000010011001011011010001001010100,
	0b0000000000000000000001001100101101101000100101010,
	0b0000000000000000000000100110010110110100010010101,
	0b0000000000000000000000010011001011011010001001010,
	0b0000000000000000000000001001100101101101000100101,
	0b0000000000000000000000000100110010110110100010010,
	0b0000000000000000000000000010011001011011010001001,
	0b0000000000000000000000000001001100101101101000100,
	0b0000000000000000000000000000100110010110110100010,
	0b0000000000000000000000000000010011001011011010001,
	0b0000000000000000000000000000001001100101101101000,
	0b0000000000000000000000000000000100110010110110100,
	0b0000000000000000000000000000000010011001011011010,
	0b0000000000000000000000000000000001001100101101101,
	0b0000000000000000000000000000000000100110010110110,
	0b0000000000000000000000000000000000010011001011011,
	0b0000000000000000000000000000000000001001100101101,
	0b0000000000000000000000000000000000000100110010110,
	0b0000000000000000000000000000000000000010011001011,
	0b0000000000000000000000000000000000000001001100101,
	0b0000000000000000000000000000000000000000100110010,
	0b0000000000000000000000000000000000000000010011001,
	0b0000000000000000000000000000000000000000001001100,
	0b0000000000000000000000000000000000000000000100110,
	0b0000000000000000000000000000000000000000000010011,
	0b0000000000000000000000000000000000000000000001001,
	0b0000000000000000000000000000000000000000000000100,
	0b0000000000000000000000000000000000000000000000010,
	0b0000000000000000000000000000000000000000000000001,
	0b0000000000000000000000000000000000000000000000000,
	0b0000000000000000000000000000000000000000000000000,
	0b0000000000000000000000000000000000000000000000000,
	0b0000000000000000000000000000000000000000000000000,
	0b0000000000000000000000000000000000000000000000000,
	0b0000000000000000000000000000000000000000000000000,
	0b0000000000000000000000000000000000000000000000000
];
def main(a: byte) -> int {
	for (x = a; x < vals.length; x = x + a) {
		var n = vals(x - a) >> a;
		if (n != vals(x)) return -3;
	}
	return 3;
}
