//@execute 1=2; 2=2; 3=2; 4=2; 5=2; 6=2; 7=2; 8=2; 9=2; 10=2; 11=2; 12=2; 13=2; 14=2; 15=2; 16=2; 17=2; 18=2; 19=2; 20=2; 21=2; 22=2; 23=2; 24=2; 25=2; 26=2; 27=2; 28=2; 29=2; 30=2; 31=2; 32=2; 33=2; 34=2; 35=2; 36=2; 37=2; 38=2; 39=2; 40=2; 41=2; 42=2; 43=2; 44=2; 45=2; 46=2; 47=2; 48=2; 49=2; 50=2
def vals: Array<u48> = [
	0b101110101111101000000000110010111011000110110000,
	0b010111010111110100000000011001011101100011011000,
	0b001011101011111010000000001100101110110001101100,
	0b000101110101111101000000000110010111011000110110,
	0b000010111010111110100000000011001011101100011011,
	0b000001011101011111010000000001100101110110001101,
	0b000000101110101111101000000000110010111011000110,
	0b000000010111010111110100000000011001011101100011,
	0b000000001011101011111010000000001100101110110001,
	0b000000000101110101111101000000000110010111011000,
	0b000000000010111010111110100000000011001011101100,
	0b000000000001011101011111010000000001100101110110,
	0b000000000000101110101111101000000000110010111011,
	0b000000000000010111010111110100000000011001011101,
	0b000000000000001011101011111010000000001100101110,
	0b000000000000000101110101111101000000000110010111,
	0b000000000000000010111010111110100000000011001011,
	0b000000000000000001011101011111010000000001100101,
	0b000000000000000000101110101111101000000000110010,
	0b000000000000000000010111010111110100000000011001,
	0b000000000000000000001011101011111010000000001100,
	0b000000000000000000000101110101111101000000000110,
	0b000000000000000000000010111010111110100000000011,
	0b000000000000000000000001011101011111010000000001,
	0b000000000000000000000000101110101111101000000000,
	0b000000000000000000000000010111010111110100000000,
	0b000000000000000000000000001011101011111010000000,
	0b000000000000000000000000000101110101111101000000,
	0b000000000000000000000000000010111010111110100000,
	0b000000000000000000000000000001011101011111010000,
	0b000000000000000000000000000000101110101111101000,
	0b000000000000000000000000000000010111010111110100,
	0b000000000000000000000000000000001011101011111010,
	0b000000000000000000000000000000000101110101111101,
	0b000000000000000000000000000000000010111010111110,
	0b000000000000000000000000000000000001011101011111,
	0b000000000000000000000000000000000000101110101111,
	0b000000000000000000000000000000000000010111010111,
	0b000000000000000000000000000000000000001011101011,
	0b000000000000000000000000000000000000000101110101,
	0b000000000000000000000000000000000000000010111010,
	0b000000000000000000000000000000000000000001011101,
	0b000000000000000000000000000000000000000000101110,
	0b000000000000000000000000000000000000000000010111,
	0b000000000000000000000000000000000000000000001011,
	0b000000000000000000000000000000000000000000000101,
	0b000000000000000000000000000000000000000000000010,
	0b000000000000000000000000000000000000000000000001,
	0b000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000
];
def main(a: byte) -> int {
	for (x = a; x < vals.length; x = x + a) {
		var n = vals(x - a) >> a;
		if (n != vals(x)) return -2;
	}
	return 2;
}
