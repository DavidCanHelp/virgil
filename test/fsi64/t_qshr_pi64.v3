//@execute 1=6; 2=6; 3=6; 4=6; 5=6; 6=6; 7=6; 8=6; 9=6; 10=6; 11=6; 12=6; 13=6; 14=6; 15=6; 16=6; 17=6; 18=6; 19=6; 20=6; 21=6; 22=6; 23=6; 24=6; 25=6; 26=6; 27=6; 28=6; 29=6; 30=6; 31=6; 32=6; 33=6; 34=6; 35=6; 36=6; 37=6; 38=6; 39=6; 40=6; 41=6; 42=6; 43=6; 44=6; 45=6; 46=6; 47=6; 48=6; 49=6; 50=6; 51=6; 52=6; 53=6; 54=6; 55=6; 56=6; 57=6; 58=6; 59=6; 60=6; 61=6; 62=6; 63=6; 64=6; 65=6; 66=6
def vals: Array<u64> = [
	0b1000101000101000011100010000101011000101000100000100101000101100,
	0b0100010100010100001110001000010101100010100010000010010100010110,
	0b0010001010001010000111000100001010110001010001000001001010001011,
	0b0001000101000101000011100010000101011000101000100000100101000101,
	0b0000100010100010100001110001000010101100010100010000010010100010,
	0b0000010001010001010000111000100001010110001010001000001001010001,
	0b0000001000101000101000011100010000101011000101000100000100101000,
	0b0000000100010100010100001110001000010101100010100010000010010100,
	0b0000000010001010001010000111000100001010110001010001000001001010,
	0b0000000001000101000101000011100010000101011000101000100000100101,
	0b0000000000100010100010100001110001000010101100010100010000010010,
	0b0000000000010001010001010000111000100001010110001010001000001001,
	0b0000000000001000101000101000011100010000101011000101000100000100,
	0b0000000000000100010100010100001110001000010101100010100010000010,
	0b0000000000000010001010001010000111000100001010110001010001000001,
	0b0000000000000001000101000101000011100010000101011000101000100000,
	0b0000000000000000100010100010100001110001000010101100010100010000,
	0b0000000000000000010001010001010000111000100001010110001010001000,
	0b0000000000000000001000101000101000011100010000101011000101000100,
	0b0000000000000000000100010100010100001110001000010101100010100010,
	0b0000000000000000000010001010001010000111000100001010110001010001,
	0b0000000000000000000001000101000101000011100010000101011000101000,
	0b0000000000000000000000100010100010100001110001000010101100010100,
	0b0000000000000000000000010001010001010000111000100001010110001010,
	0b0000000000000000000000001000101000101000011100010000101011000101,
	0b0000000000000000000000000100010100010100001110001000010101100010,
	0b0000000000000000000000000010001010001010000111000100001010110001,
	0b0000000000000000000000000001000101000101000011100010000101011000,
	0b0000000000000000000000000000100010100010100001110001000010101100,
	0b0000000000000000000000000000010001010001010000111000100001010110,
	0b0000000000000000000000000000001000101000101000011100010000101011,
	0b0000000000000000000000000000000100010100010100001110001000010101,
	0b0000000000000000000000000000000010001010001010000111000100001010,
	0b0000000000000000000000000000000001000101000101000011100010000101,
	0b0000000000000000000000000000000000100010100010100001110001000010,
	0b0000000000000000000000000000000000010001010001010000111000100001,
	0b0000000000000000000000000000000000001000101000101000011100010000,
	0b0000000000000000000000000000000000000100010100010100001110001000,
	0b0000000000000000000000000000000000000010001010001010000111000100,
	0b0000000000000000000000000000000000000001000101000101000011100010,
	0b0000000000000000000000000000000000000000100010100010100001110001,
	0b0000000000000000000000000000000000000000010001010001010000111000,
	0b0000000000000000000000000000000000000000001000101000101000011100,
	0b0000000000000000000000000000000000000000000100010100010100001110,
	0b0000000000000000000000000000000000000000000010001010001010000111,
	0b0000000000000000000000000000000000000000000001000101000101000011,
	0b0000000000000000000000000000000000000000000000100010100010100001,
	0b0000000000000000000000000000000000000000000000010001010001010000,
	0b0000000000000000000000000000000000000000000000001000101000101000,
	0b0000000000000000000000000000000000000000000000000100010100010100,
	0b0000000000000000000000000000000000000000000000000010001010001010,
	0b0000000000000000000000000000000000000000000000000001000101000101,
	0b0000000000000000000000000000000000000000000000000000100010100010,
	0b0000000000000000000000000000000000000000000000000000010001010001,
	0b0000000000000000000000000000000000000000000000000000001000101000,
	0b0000000000000000000000000000000000000000000000000000000100010100,
	0b0000000000000000000000000000000000000000000000000000000010001010,
	0b0000000000000000000000000000000000000000000000000000000001000101,
	0b0000000000000000000000000000000000000000000000000000000000100010,
	0b0000000000000000000000000000000000000000000000000000000000010001,
	0b0000000000000000000000000000000000000000000000000000000000001000,
	0b0000000000000000000000000000000000000000000000000000000000000100,
	0b0000000000000000000000000000000000000000000000000000000000000010,
	0b0000000000000000000000000000000000000000000000000000000000000001,
	0b0000000000000000000000000000000000000000000000000000000000000000,
	0b0000000000000000000000000000000000000000000000000000000000000000,
	0b0000000000000000000000000000000000000000000000000000000000000000,
	0b0000000000000000000000000000000000000000000000000000000000000000,
	0b0000000000000000000000000000000000000000000000000000000000000000
];
def main(a: byte) -> int {
	for (x = a; x < vals.length; x = x + a) {
		var n = vals[x - a] >>> a;
		if (n != vals[x]) return -6;
	}
	return 6;
}
