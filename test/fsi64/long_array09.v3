//@execute 0=11; 33=11; 55=11; 254=11
class lf00(x: Array<long>) {
	def get(b: int) -> byte {
		var lx = x(b >>> 3);
		match (b & 0x7) {
			0:  return byte.!(lx >> 0);
			1:  return byte.!(lx >> 8);
			2:  return byte.!(lx >> 16);
			3:  return byte.!(lx >> 24);
			4:  return byte.!(lx >> 32);
			5:  return byte.!(lx >> 40);
			6:  return byte.!(lx >> 48);
			7:  return byte.!(lx >> 56);
		}
		return 0;
	}
	def set(b: int, v: byte) {
		var lx = x(b >>> 3), lv = long.!(v);
		match (b & 0x7) {
			0:  lx = (lx & 0xFFFFFFFFFFFFFF00) | (lv << 0);
			1:  lx = (lx & 0xFFFFFFFFFFFF00FF) | (lv << 8);
			2:  lx = (lx & 0xFFFFFFFFFF00FFFF) | (lv << 16);
			3:  lx = (lx & 0xFFFFFFFF00FFFFFF) | (lv << 24);
			4:  lx = (lx & 0xFFFFFF00FFFFFFFF) | (lv << 32);
			5:  lx = (lx & 0xFFFF00FFFFFFFFFF) | (lv << 40);
			6:  lx = (lx & 0xFF00FFFFFFFFFFFF) | (lv << 48);
			7:  lx = (lx & 0x00FFFFFFFFFFFFFF) | (lv << 56);
		}
		x(b >>> 3) = lx;
	}
}
var before = Array<byte>.new(16);
def main(a: int) -> int {
	var l = lf00.new([0L, 0L]);
	for (b in [0x01, 0xF0, 0xFF]) {
		for (j < 16) check(l, j, byte.!(b + a));
	}
	return 11;
}
def check(l: lf00, b: int, v: byte) -> int {
	for (i < before.length) before(i) = l.get(i);
	l.set(b, v);
	for (i < before.length) {
		if (i == b) { if (l.get(i) != v) return 1 / 0; }
		else { if (l.get(i) != before(i)) return 1 / 0; }
	}
	return 12;
}