//@execute 1=10; 2=10; 3=10; 4=10; 5=10; 6=10; 7=10; 8=10; 9=10; 10=10; 11=10; 12=10; 13=10; 14=10; 15=10; 16=10; 17=10; 18=10; 19=10; 20=10; 21=10; 22=10; 23=10; 24=10; 25=10; 26=10; 27=10; 28=10; 29=10; 30=10; 31=10; 32=10; 33=10; 34=10; 35=10; 36=10
def vals: Array<i34> = [
	0b1011101010100110001101111011100001,
	0b0101110101010011000110111101110000,
	0b0010111010101001100011011110111000,
	0b0001011101010100110001101111011100,
	0b0000101110101010011000110111101110,
	0b0000010111010101001100011011110111,
	0b0000001011101010100110001101111011,
	0b0000000101110101010011000110111101,
	0b0000000010111010101001100011011110,
	0b0000000001011101010100110001101111,
	0b0000000000101110101010011000110111,
	0b0000000000010111010101001100011011,
	0b0000000000001011101010100110001101,
	0b0000000000000101110101010011000110,
	0b0000000000000010111010101001100011,
	0b0000000000000001011101010100110001,
	0b0000000000000000101110101010011000,
	0b0000000000000000010111010101001100,
	0b0000000000000000001011101010100110,
	0b0000000000000000000101110101010011,
	0b0000000000000000000010111010101001,
	0b0000000000000000000001011101010100,
	0b0000000000000000000000101110101010,
	0b0000000000000000000000010111010101,
	0b0000000000000000000000001011101010,
	0b0000000000000000000000000101110101,
	0b0000000000000000000000000010111010,
	0b0000000000000000000000000001011101,
	0b0000000000000000000000000000101110,
	0b0000000000000000000000000000010111,
	0b0000000000000000000000000000001011,
	0b0000000000000000000000000000000101,
	0b0000000000000000000000000000000010,
	0b0000000000000000000000000000000001,
	0b0000000000000000000000000000000000,
	0b0000000000000000000000000000000000,
	0b0000000000000000000000000000000000,
	0b0000000000000000000000000000000000,
	0b0000000000000000000000000000000000
];
def main(a: byte) -> int {
	for (x = a; x < vals.length; x = x + a) {
		var n = vals[x - a] >>> a;
		if (n != vals[x]) return -10;
	}
	return 10;
}
