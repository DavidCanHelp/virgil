//@execute 1=3; 2=3; 3=3; 4=3; 5=3; 6=3; 7=3; 8=3; 9=3; 10=3; 11=3; 12=3; 13=3; 14=3; 15=3; 16=3; 17=3; 18=3; 19=3; 20=3; 21=3; 22=3; 23=3; 24=3; 25=3; 26=3; 27=3; 28=3; 29=3; 30=3; 31=3; 32=3; 33=3; 34=3; 35=3; 36=3; 37=3; 38=3; 39=3; 40=3; 41=3; 42=3; 43=3; 44=3; 45=3; 46=3; 47=3; 48=3; 49=3; 50=3
def vals: Array<i48> = [
	0b010000110011001001101000111111011111101011110100,
	0b100001100110010011010001111110111111010111101000,
	0b000011001100100110100011111101111110101111010000,
	0b000110011001001101000111111011111101011110100000,
	0b001100110010011010001111110111111010111101000000,
	0b011001100100110100011111101111110101111010000000,
	0b110011001001101000111111011111101011110100000000,
	0b100110010011010001111110111111010111101000000000,
	0b001100100110100011111101111110101111010000000000,
	0b011001001101000111111011111101011110100000000000,
	0b110010011010001111110111111010111101000000000000,
	0b100100110100011111101111110101111010000000000000,
	0b001001101000111111011111101011110100000000000000,
	0b010011010001111110111111010111101000000000000000,
	0b100110100011111101111110101111010000000000000000,
	0b001101000111111011111101011110100000000000000000,
	0b011010001111110111111010111101000000000000000000,
	0b110100011111101111110101111010000000000000000000,
	0b101000111111011111101011110100000000000000000000,
	0b010001111110111111010111101000000000000000000000,
	0b100011111101111110101111010000000000000000000000,
	0b000111111011111101011110100000000000000000000000,
	0b001111110111111010111101000000000000000000000000,
	0b011111101111110101111010000000000000000000000000,
	0b111111011111101011110100000000000000000000000000,
	0b111110111111010111101000000000000000000000000000,
	0b111101111110101111010000000000000000000000000000,
	0b111011111101011110100000000000000000000000000000,
	0b110111111010111101000000000000000000000000000000,
	0b101111110101111010000000000000000000000000000000,
	0b011111101011110100000000000000000000000000000000,
	0b111111010111101000000000000000000000000000000000,
	0b111110101111010000000000000000000000000000000000,
	0b111101011110100000000000000000000000000000000000,
	0b111010111101000000000000000000000000000000000000,
	0b110101111010000000000000000000000000000000000000,
	0b101011110100000000000000000000000000000000000000,
	0b010111101000000000000000000000000000000000000000,
	0b101111010000000000000000000000000000000000000000,
	0b011110100000000000000000000000000000000000000000,
	0b111101000000000000000000000000000000000000000000,
	0b111010000000000000000000000000000000000000000000,
	0b110100000000000000000000000000000000000000000000,
	0b101000000000000000000000000000000000000000000000,
	0b010000000000000000000000000000000000000000000000,
	0b100000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000,
	0b000000000000000000000000000000000000000000000000
];
def main(a: byte) -> int {
	for (x = a; x < vals.length; x = x + a) {
		var n = vals[x - a] << a;
		if (n != vals[x]) return -3;
	}
	return 3;
}
