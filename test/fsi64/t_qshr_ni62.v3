//@execute 1=2; 2=2; 3=2; 4=2; 5=2; 6=2; 7=2; 8=2; 9=2; 10=2; 11=2; 12=2; 13=2; 14=2; 15=2; 16=2; 17=2; 18=2; 19=2; 20=2; 21=2; 22=2; 23=2; 24=2; 25=2; 26=2; 27=2; 28=2; 29=2; 30=2; 31=2; 32=2; 33=2; 34=2; 35=2; 36=2; 37=2; 38=2; 39=2; 40=2; 41=2; 42=2; 43=2; 44=2; 45=2; 46=2; 47=2; 48=2; 49=2; 50=2; 51=2; 52=2; 53=2; 54=2; 55=2; 56=2; 57=2; 58=2; 59=2; 60=2; 61=2; 62=2; 63=2; 64=2
def vals: Array<i62> = [
	0b10110010110000000101001110011011000101001001001010010110010101,
	0b01011001011000000010100111001101100010100100100101001011001010,
	0b00101100101100000001010011100110110001010010010010100101100101,
	0b00010110010110000000101001110011011000101001001001010010110010,
	0b00001011001011000000010100111001101100010100100100101001011001,
	0b00000101100101100000001010011100110110001010010010010100101100,
	0b00000010110010110000000101001110011011000101001001001010010110,
	0b00000001011001011000000010100111001101100010100100100101001011,
	0b00000000101100101100000001010011100110110001010010010010100101,
	0b00000000010110010110000000101001110011011000101001001001010010,
	0b00000000001011001011000000010100111001101100010100100100101001,
	0b00000000000101100101100000001010011100110110001010010010010100,
	0b00000000000010110010110000000101001110011011000101001001001010,
	0b00000000000001011001011000000010100111001101100010100100100101,
	0b00000000000000101100101100000001010011100110110001010010010010,
	0b00000000000000010110010110000000101001110011011000101001001001,
	0b00000000000000001011001011000000010100111001101100010100100100,
	0b00000000000000000101100101100000001010011100110110001010010010,
	0b00000000000000000010110010110000000101001110011011000101001001,
	0b00000000000000000001011001011000000010100111001101100010100100,
	0b00000000000000000000101100101100000001010011100110110001010010,
	0b00000000000000000000010110010110000000101001110011011000101001,
	0b00000000000000000000001011001011000000010100111001101100010100,
	0b00000000000000000000000101100101100000001010011100110110001010,
	0b00000000000000000000000010110010110000000101001110011011000101,
	0b00000000000000000000000001011001011000000010100111001101100010,
	0b00000000000000000000000000101100101100000001010011100110110001,
	0b00000000000000000000000000010110010110000000101001110011011000,
	0b00000000000000000000000000001011001011000000010100111001101100,
	0b00000000000000000000000000000101100101100000001010011100110110,
	0b00000000000000000000000000000010110010110000000101001110011011,
	0b00000000000000000000000000000001011001011000000010100111001101,
	0b00000000000000000000000000000000101100101100000001010011100110,
	0b00000000000000000000000000000000010110010110000000101001110011,
	0b00000000000000000000000000000000001011001011000000010100111001,
	0b00000000000000000000000000000000000101100101100000001010011100,
	0b00000000000000000000000000000000000010110010110000000101001110,
	0b00000000000000000000000000000000000001011001011000000010100111,
	0b00000000000000000000000000000000000000101100101100000001010011,
	0b00000000000000000000000000000000000000010110010110000000101001,
	0b00000000000000000000000000000000000000001011001011000000010100,
	0b00000000000000000000000000000000000000000101100101100000001010,
	0b00000000000000000000000000000000000000000010110010110000000101,
	0b00000000000000000000000000000000000000000001011001011000000010,
	0b00000000000000000000000000000000000000000000101100101100000001,
	0b00000000000000000000000000000000000000000000010110010110000000,
	0b00000000000000000000000000000000000000000000001011001011000000,
	0b00000000000000000000000000000000000000000000000101100101100000,
	0b00000000000000000000000000000000000000000000000010110010110000,
	0b00000000000000000000000000000000000000000000000001011001011000,
	0b00000000000000000000000000000000000000000000000000101100101100,
	0b00000000000000000000000000000000000000000000000000010110010110,
	0b00000000000000000000000000000000000000000000000000001011001011,
	0b00000000000000000000000000000000000000000000000000000101100101,
	0b00000000000000000000000000000000000000000000000000000010110010,
	0b00000000000000000000000000000000000000000000000000000001011001,
	0b00000000000000000000000000000000000000000000000000000000101100,
	0b00000000000000000000000000000000000000000000000000000000010110,
	0b00000000000000000000000000000000000000000000000000000000001011,
	0b00000000000000000000000000000000000000000000000000000000000101,
	0b00000000000000000000000000000000000000000000000000000000000010,
	0b00000000000000000000000000000000000000000000000000000000000001,
	0b00000000000000000000000000000000000000000000000000000000000000,
	0b00000000000000000000000000000000000000000000000000000000000000,
	0b00000000000000000000000000000000000000000000000000000000000000,
	0b00000000000000000000000000000000000000000000000000000000000000,
	0b00000000000000000000000000000000000000000000000000000000000000
];
def main(a: byte) -> int {
	for (x = a; x < vals.length; x = x + a) {
		var n = vals[x - a] >>> a;
		if (n != vals[x]) return -2;
	}
	return 2;
}
