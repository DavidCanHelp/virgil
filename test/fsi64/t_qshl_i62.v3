//@execute 1=3; 2=3; 3=3; 4=3; 5=3; 6=3; 7=3; 8=3; 9=3; 10=3; 11=3; 12=3; 13=3; 14=3; 15=3; 16=3; 17=3; 18=3; 19=3; 20=3; 21=3; 22=3; 23=3; 24=3; 25=3; 26=3; 27=3; 28=3; 29=3; 30=3; 31=3; 32=3; 33=3; 34=3; 35=3; 36=3; 37=3; 38=3; 39=3; 40=3; 41=3; 42=3; 43=3; 44=3; 45=3; 46=3; 47=3; 48=3; 49=3; 50=3; 51=3; 52=3; 53=3; 54=3; 55=3; 56=3; 57=3; 58=3; 59=3; 60=3; 61=3; 62=3; 63=3; 64=3
def vals: Array<i62> = [
	0b01101010110010000011100110111011001101001000110010111001100010,
	0b11010101100100000111001101110110011010010001100101110011000100,
	0b10101011001000001110011011101100110100100011001011100110001000,
	0b01010110010000011100110111011001101001000110010111001100010000,
	0b10101100100000111001101110110011010010001100101110011000100000,
	0b01011001000001110011011101100110100100011001011100110001000000,
	0b10110010000011100110111011001101001000110010111001100010000000,
	0b01100100000111001101110110011010010001100101110011000100000000,
	0b11001000001110011011101100110100100011001011100110001000000000,
	0b10010000011100110111011001101001000110010111001100010000000000,
	0b00100000111001101110110011010010001100101110011000100000000000,
	0b01000001110011011101100110100100011001011100110001000000000000,
	0b10000011100110111011001101001000110010111001100010000000000000,
	0b00000111001101110110011010010001100101110011000100000000000000,
	0b00001110011011101100110100100011001011100110001000000000000000,
	0b00011100110111011001101001000110010111001100010000000000000000,
	0b00111001101110110011010010001100101110011000100000000000000000,
	0b01110011011101100110100100011001011100110001000000000000000000,
	0b11100110111011001101001000110010111001100010000000000000000000,
	0b11001101110110011010010001100101110011000100000000000000000000,
	0b10011011101100110100100011001011100110001000000000000000000000,
	0b00110111011001101001000110010111001100010000000000000000000000,
	0b01101110110011010010001100101110011000100000000000000000000000,
	0b11011101100110100100011001011100110001000000000000000000000000,
	0b10111011001101001000110010111001100010000000000000000000000000,
	0b01110110011010010001100101110011000100000000000000000000000000,
	0b11101100110100100011001011100110001000000000000000000000000000,
	0b11011001101001000110010111001100010000000000000000000000000000,
	0b10110011010010001100101110011000100000000000000000000000000000,
	0b01100110100100011001011100110001000000000000000000000000000000,
	0b11001101001000110010111001100010000000000000000000000000000000,
	0b10011010010001100101110011000100000000000000000000000000000000,
	0b00110100100011001011100110001000000000000000000000000000000000,
	0b01101001000110010111001100010000000000000000000000000000000000,
	0b11010010001100101110011000100000000000000000000000000000000000,
	0b10100100011001011100110001000000000000000000000000000000000000,
	0b01001000110010111001100010000000000000000000000000000000000000,
	0b10010001100101110011000100000000000000000000000000000000000000,
	0b00100011001011100110001000000000000000000000000000000000000000,
	0b01000110010111001100010000000000000000000000000000000000000000,
	0b10001100101110011000100000000000000000000000000000000000000000,
	0b00011001011100110001000000000000000000000000000000000000000000,
	0b00110010111001100010000000000000000000000000000000000000000000,
	0b01100101110011000100000000000000000000000000000000000000000000,
	0b11001011100110001000000000000000000000000000000000000000000000,
	0b10010111001100010000000000000000000000000000000000000000000000,
	0b00101110011000100000000000000000000000000000000000000000000000,
	0b01011100110001000000000000000000000000000000000000000000000000,
	0b10111001100010000000000000000000000000000000000000000000000000,
	0b01110011000100000000000000000000000000000000000000000000000000,
	0b11100110001000000000000000000000000000000000000000000000000000,
	0b11001100010000000000000000000000000000000000000000000000000000,
	0b10011000100000000000000000000000000000000000000000000000000000,
	0b00110001000000000000000000000000000000000000000000000000000000,
	0b01100010000000000000000000000000000000000000000000000000000000,
	0b11000100000000000000000000000000000000000000000000000000000000,
	0b10001000000000000000000000000000000000000000000000000000000000,
	0b00010000000000000000000000000000000000000000000000000000000000,
	0b00100000000000000000000000000000000000000000000000000000000000,
	0b01000000000000000000000000000000000000000000000000000000000000,
	0b10000000000000000000000000000000000000000000000000000000000000,
	0b00000000000000000000000000000000000000000000000000000000000000,
	0b00000000000000000000000000000000000000000000000000000000000000,
	0b00000000000000000000000000000000000000000000000000000000000000,
	0b00000000000000000000000000000000000000000000000000000000000000,
	0b00000000000000000000000000000000000000000000000000000000000000,
	0b00000000000000000000000000000000000000000000000000000000000000
];
def main(a: byte) -> int {
	for (x = a; x < vals.length; x = x + a) {
		var n = vals(x - a) << a;
		if (n != vals(x)) return -3;
	}
	return 3;
}
