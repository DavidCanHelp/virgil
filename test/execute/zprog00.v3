def hexMap = "0123456789ABCDEF";
def CTRL_C: byte = 0x03;
def CTRL_D: byte = 0x04;
def STDIN = 0;
def main(a: Array<string>) -> int {
//	RawStdin.enable();
	if (System.fileLeft(STDIN) < 0) runStreaming();
	else runFile();
//	RawStdin.restore();
	return 0;
}
def runStreaming() {
	System.puts("Streaming...\n");
	var p = Processor.new();
	while (true) {
		if (System.fileLeft(STDIN) == 0) break;  // EOF
		var v = System.fileRead(STDIN);
		match (v) {
			CTRL_C, CTRL_D, 0 => break;
		}
	}
}
def runFile() {
	System.puts("File...\n");
	var p = Processor.new();
	var buf = Array<byte>.new(System.fileLeft(STDIN));
	for (i < buf.length) buf[i] = System.fileRead(STDIN);
	var pos = 0, start = 0;
	while (pos < buf.length) {
		if (pos == '\n') {
			p.processLine(buf, start, pos);
			start = pos + 1;
		}
	}
	if (start < buf.length) p.processLine(buf, start, buf.length);
}

enum State { HEADER, BODY }
class Processor {
	var state = State.HEADER;
	def processLine(buf: Array<byte>, pos: int, length: int) {
		if (state == State.HEADER);
		else;
	}
}