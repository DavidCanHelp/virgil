//@execute 0=372; 1=372; 2=372
def shared<T>(t: int) -> int {
	return t;
}
def array<T>(t: int) -> int {
	return Array<T>.new(t).length;
}
class vs_51a<T> {
	def m() -> int { return shared<T>(1); }
	def n() -> int { return array<T>(2); }
	def o() -> int { return shared<T>(3); }
}
class vs_51b<T> extends vs_51a<T> {
	def m() -> int { return shared<T>(11); }
	def n() -> int { return array<T>(12); }
	def o() -> int { return shared<T>(13); }
}
class vs_51c<T> extends vs_51b<T> {
	def m() -> int { return shared<T>(21); }
	def n() -> int { return array<T>(22); }
	def o() -> int { return shared<T>(23); }
}
class vs_51d<T> extends vs_51b<T> {
	def m() -> int { return shared<T>(31); }
	def n() -> int { return array<T>(32); }
	def o() -> int { return shared<T>(33); }
}
def main(a: int) -> int {
	match (a) {
		0 => return do<byte>();
		1 => return do<int>();
	} else return do<bool>();
}
def do<T>() -> int {
	var sum = 0;

	var a: Array<vs_51a<T>> = [vs_51a<T>.new(), vs_51b<T>.new(), vs_51c<T>.new(), vs_51d<T>.new()];
	for (o in a) sum = sum + o.m() + o.n() + o.o();

	var b: Array<vs_51b<T>> = [vs_51b<T>.new(), vs_51c<T>.new()];
	for (o in b) sum = sum + o.m() + o.n() + o.o();

	var c: Array<vs_51c<T>> = [vs_51c<T>.new()];
	for (o in c) sum = sum + o.m() + o.n() + o.o();

	var d: Array<vs_51d<T>> = [];
	for (o in d) sum = sum + o.m() + o.n() + o.o();

	return sum;
}
