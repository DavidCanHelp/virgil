//@execute 0=1488; 1=1488; 2=1488; 3=1488; 4=69
class vs_52<T> {
	def do1() -> int {
		return do<T, int>() + do<T, byte>() + do<T, bool>() + do<T, (int, int)>();
	}
}
class vs_52a<T> {
	def m() -> int { return 1; }
	def n<U>(a: T, b: U) -> int { return 2; }
	def o() -> int { return 3; }
}
class vs_52b<T> extends vs_52a<T> {
	def m() -> int { return 11; }
	def n<U>(a: T, b: U) -> int { return 12; }
	def o() -> int { return 13; }
}
class vs_52c<T> extends vs_52b<T> {
	def m() -> int { return 21; }
	def n<U>(a: T, b: U) -> int { return 22; }
	def o() -> int { return 23; }
}
class vs_52d<T> extends vs_52b<T> {
	def m() -> int { return 31; }
	def n<U>(a: T, b: U) -> int { return 32; }
	def o() -> int { return 33; }
}
def main(a: int) -> int {
	match (a) {
		0 => return vs_52<byte>.new().do1();
		1 => return vs_52<int>.new().do1();
		2 => return vs_52<bool>.new().do1();
		3 => return vs_52<(int, int)>.new().do1();
	}
	return 69;
}
def do<T, U>() -> int {
	var sum = 0, x: T, y: U;

	var a: Array<vs_52a<T>> = [vs_52a<T>.new(), vs_52b<T>.new(), vs_52c<T>.new(), vs_52d<T>.new()];
	for (o in a) sum = sum + o.m() + o.n<U>(x, y) + o.o();

	var b: Array<vs_52b<T>> = [vs_52b<T>.new(), vs_52c<T>.new()];
	for (o in b) sum = sum + o.m() + o.n<U>(x, y) + o.o();

	var c: Array<vs_52c<T>> = [vs_52c<T>.new()];
	for (o in c) sum = sum + o.m() + o.n<U>(x, y) + o.o();

	var d: Array<vs_52d<T>> = [];
	for (o in d) sum = sum + o.m() + o.n<U>(x, y) + o.o();

	return sum;
}
