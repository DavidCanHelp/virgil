//@execute 0=212; 1=212; 2=212
//@heap-size=2000
class vs_25a<T> {
	def m() -> int { return 1; }
	def n() -> int { return Array<T>.new(2).length; }
	def o() -> int { return 3; }
}
class vs_25b<T> extends vs_25a<T> {
	def n() -> int { return Array<T>.new(12).length; }
}
class vs_25c<T> extends vs_25b<T> {
	def n() -> int { return Array<T>.new(22).length; }
	def o() -> int { return 23; }
}
class vs_25d<T> extends vs_25b<T> {
	def n() -> int { return Array<T>.new(32).length; }
}
def main(a: int) -> int {
	match (a) {
		0 => return do<byte>();
		1 => return do<int>();
	} else return do<bool>();
}
def do<T>() -> int {
	var sum = 0;

	var a: Array<vs_25a<T>> = [vs_25a<T>.new(), vs_25b<T>.new(), vs_25c<T>.new(), vs_25d<T>.new()];
	for (o in a) sum = sum + o.m() + o.n() + o.o();

	var b: Array<vs_25b<T>> = [vs_25b<T>.new(), vs_25c<T>.new()];
	for (o in b) sum = sum + o.m() + o.n() + o.o();

	var c: Array<vs_25c<T>> = [vs_25c<T>.new()];
	for (o in c) sum = sum + o.m() + o.n() + o.o();

	var d: Array<vs_25d<T>> = [];
	for (o in d) sum = sum + o.m() + o.n() + o.o();

	return sum;
}
