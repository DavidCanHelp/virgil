//@execute 0=4; 1=3; 2=2; 3=1
class pa_m13a {
	def m(a: (int, int)) -> int {
		return 2 * a.0 - 3 * a.1 + 7;
	}
}
component pa_m13 {
	var failed: int;
	def main(a: int) -> int {
		var o = pa_m13a.new();
		var m = pa_m13a.m(o, _, _);
		return test2(m, a, a + 1, m(a, a + 1));
	}
	def test2(f: (int, int) -> int, p1: int, p2: int, x: int) -> int {
		check(f(p1, _), p2, x);
		check(f(_, p2), p1, x);

		if (f(p1, _)(p2) != x) failed++;
		if (f(_, p2)(p1) != x) failed++;

		return x;
	}
	def check<T>(f: T -> int, p: T, e: int) {
		if (e != f(p)) failed++;
	}
}
