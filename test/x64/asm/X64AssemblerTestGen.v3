def buf = StringBuilder.new();
def dump(str: string, asm: X64Assembler) {
	buf.reset();
	buf.puts(str);
	buf.puts(" = ");
	for (i = 0; i < asm.w.end(); i++) {
		buf.putx_8(asm.w.data[i]);
	}
	asm.w.reset(asm.w.data, 0, 0);
	buf.ln();
	System.puts(buf.extract());
}

def main() {
	var asm = X64Assembler.new(DataWriter.new());
	dump("add rax, 0x11", asm.addq_rm_i(X64Regs.RAX, 0x11));
	dump("add rbx, 0x22", asm.addq_rm_i(X64Regs.RBX, 0x22));
	dump("add r8, 0x11", asm.addq_rm_i(X64Regs.R8, 0x11));
	dump("add rax, 0x44332210", asm.addq_rm_i(X64Regs.RAX, 0x44332210));
	dump("add rbx, 0x44332211", asm.addq_rm_i(X64Regs.RBX, 0x44332211));
	dump("add r8, 0x44332218", asm.addq_rm_i(X64Regs.R8, 0x44332218));
	dump("add eax, 0x11", asm.addd_rm_i(X64Regs.RAX, 0x11));
	dump("add r9d, 0x22", asm.addd_rm_i(X64Regs.R9, 0x22));
}
