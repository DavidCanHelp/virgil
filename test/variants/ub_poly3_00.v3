//@execute 0=42; 3=42; 67=42; -876278674=42
type Data<A,B,C> #unboxed {
	case X(v: A);
	case Y(v: B);
	case Z(v: C);
}

class Tester<A,B,C>(v1: (A,B,C), v2: (A,B,C)) {
	def vals = [
		Data<A,B,C>.X(v1.0),
		Data<A,B,C>.Y(v1.1),
		Data<A,B,C>.Z(v1.2),
		Data<A,B,C>.X(v1.0),
		Data<A,B,C>.Y(v1.1),
		Data<A,B,C>.Z(v1.2)
	];

	def match_equals(a: Data<A,B,C>, b: Data<A,B,C>) -> bool {
		match (a) {
			X(v) => match (b) {
				X(w) => return v == w;
				Y(w) => return false;
				Z(w) => return false;
			}
			Y(v) => match (b) {
				X(w) => return false;
				Y(w) => return v == w;
				Z(w) => return false;
			}
			Z(v) => match (b) {
				X(w) => return false;
				Y(w) => return false;
				Z(w) => return v == w;
			}
		}
	}

	def bool_matrix(f: (Data<A,B,C>, Data<A,B,C>) -> bool) -> u64 {
		var mask = 1uL;
		var result = 0uL;
		for (i in vals) {
			for (j in vals) {
				if (f(i, j)) result |= mask;
				mask = mask << 1;
			}
		}
		return result;
	}

	def test() -> int {
		var e1 = bool_matrix(Data<A,B,C>.==);
		var e2 = bool_matrix(match_equals);
		return if(e1 == e2, 0, -11);
	}
}

def main(a: int) -> int {
	{
		var t = Tester<int, int, int>.new((0, a, a-1), (a, a, a));
		var r = t.test();
		if (r != 0) return r;
	}
	{
		var t = Tester<int, int, int>.new((a, a-1, 0), (a, a, a));
		var r = t.test();
		if (r != 0) return r;
	}
	
	return 42;
}