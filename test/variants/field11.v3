//@execute 0=0; 1=2; 2=3; 3=7; 4=6
type F {
	case None;
	case One(x: int)       { def fold(f: (int, int) -> int) -> int { return x; } }
	case Two(x: int, y: int) { def fold(f: (int, int) -> int) -> int { return f(x, y); } }
	def fold(f: (int, int) -> int) -> int {
		var d: int;
		return d;
	}
}
var x = [F.None, F.One(2), F.One(3), F.Two(1, 6), F.Two(2, 4)];
def main(a: int) -> int {
	return x[a].fold(int.+);
}
