//@execute 0=3; 1=9; 2=112
type Expr {
	case Const(x: int);
	case Add(a: Expr, b: Expr);
}
def eval(e: Expr) -> int {
	match (e) {
		Const(x): return x;
		Add(a, b): return eval(a) + eval(b);
	}
}
def evalAdd(add: Expr.Add) -> int {
	return eval(add.a) + eval(add.b);
}
def e3 = Expr.Add(Expr.Const(1), Expr.Const(2));
def e9 = Expr.Add(Expr.Const(4), Expr.Const(5));
def main(a: int) -> int {
	if (a == 0) return evalAdd(e3);
	if (a == 1) return eval(e9);
	return 112;
}
