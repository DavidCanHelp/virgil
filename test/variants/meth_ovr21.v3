//@execute 0=0; 1=4; 2=32; 3=36; 4=192; 5=196; 6=224; 7=228; 8=0
type M {
	def m1() -> int { return 0; }
	def m2() -> int { return 0; }
	def m3() -> int { return 0; }
	def m4() -> int { return 0; }
	def m5() -> int { return 0; }
	def m6() -> int { return 0; }
	def m7() -> int { return 0; }
	def m8() -> int { return 0; }

	case A(x: int) {
//		def m1() -> int { return x; }
		def m2() -> int { return x; }
//		def m3() -> int { return x; }
		def m4() -> int { return x; }
//		def m5() -> int { return x; }
		def m6() -> int { return x; }
//		def m7() -> int { return x; }
		def m8() -> int { return x; }
	}
	case B(x: int) {
//		def m1() -> int { return x; }
//		def m2() -> int { return x; }
		def m3() -> int { return x; }
		def m4() -> int { return x; }
//		def m5() -> int { return x; }
//		def m6() -> int { return x; }
		def m7() -> int { return x; }
		def m8() -> int { return x; }
	}
	case C(x: int) {
//		def m1() -> int { return x; }
//		def m2() -> int { return x; }
//		def m3() -> int { return x; }
//		def m4() -> int { return x; }
		def m5() -> int { return x; }
		def m6() -> int { return x; }
		def m7() -> int { return x; }
		def m8() -> int { return x; }
	}
}

def compute(f: M -> int) -> int {
	var d: M;
	return  (f(d)   << 0) |
		(f(M.A(1)) << 2) |
		(f(M.B(2)) << 4) |
		(f(M.C(3)) << 6);
}

def main(a: int) -> int {
	match (a) {
		0 => return compute(M.m1);
		1 => return compute(M.m2);
		2 => return compute(M.m3);
		3 => return compute(M.m4);
		4 => return compute(M.m5);
		5 => return compute(M.m6);
		6 => return compute(M.m7);
		7 => return compute(M.m8);
	}
	return 0;
}
