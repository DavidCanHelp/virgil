//@execute 0=1; 1=10; 2=4; 3=10
type X {
	case None;
	case IsY(y: Y);
}
type Y {
	case None;
	case IsX(x: X);
}
def eq<T>(x: T, a: Array<T>) -> int {
	var res = 0;
	for (i = 0; i < a.length; i++) {
		if (x == a(i)) res = res | (1 #<< i);
	}
	return res;
}
def make(len: int) -> Array<X> {
	var r = Array<X>.new(len);
	var p = 0, i = 1;
	while (true) {
		if (i >= r.length) break;
		r(i++) = X.IsY(Y.None);
		if (i >= r.length) break;
		r(i++) = X.IsY(Y.IsX(r(p++)));
	}
	return r;	
}
def m = make(5);
def main(a: int) -> int {
	return eq(m(a), m);
}
