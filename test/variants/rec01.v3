//@execute 0=true; 1=true; 2=true; 5=true; 100=true
type List<T> {
	case None;
	case More(tail: List<T>);
}

def make<T>(len: int) -> List<T> {
	if (len <= 0) return List<T>.None;
	return List<T>.More(make(len - 1));
}

def check<T>(len: int, list: List<T>) -> bool {
	var l = list, i = 0;
	while (true) {
		match (l) {
			None => return i == len;
			More(tail) => l = tail;
		}
		i++;
	}
	return false;
}

def main(a: int) -> bool {
	return check<int>(a, make<int>(a));
}
