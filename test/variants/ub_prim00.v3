//@execute 0=true; 1=true; -1=true; 878623487=true
type Prim32 #unboxed {
	case Int(x: int);
	case Float(x: float);
}

def bit_equal(a: Prim32, b: Prim32) -> bool {
	match (a) {
		Int(x) => match(b) {
			Int(y) => return x == y;
			Float(y) => return x == int.view(y);
		}
		Float(x) => match(b) {
			Int(y) => return int.view(x) == y;
			Float(y) => return int.view(x) == int.view(y);
		}
	}
}

def main(a: int) -> bool {
	var x = Prim32.Int(a);
	var y = Prim32.Float(float.view(a));
	return bit_equal(x, y) && bit_equal(y, x);
}
