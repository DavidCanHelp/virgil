//@seman
class Visitor<E> {
    def visitA(n: A, e: E);
    def visitB(n: B, e: E);
}

class S {
    def accept<E>(v: Visitor<E>, e: E);
}

class A extends S {
    def accept<E>(v: Visitor<E>, e: E) { v.visitA(this, e); }
}

class B extends S {
    def accept<E>(v: Visitor<E>, e: E) { v.visitB(this, e); }
}

class PriceList {
}

class Thief extends Visitor<PriceList> {
    def visitA(n: A, e: PriceList) {
    }
    def visitB(n: B, e: PriceList) {
    }
}

component Client {
    var a: S = A.new();
    var b: S = B.new();
    var thief: Thief = Thief.new();

    def test() {
	a.accept(thief, null);
	b.accept(thief, null);
    }
}
