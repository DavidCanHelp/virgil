//@seman
class Transform<R, E> {
    def visitA(n: A, e: E) -> R;
    def visitB(n: B, e: E) -> R;
}

class A {
    def accept<R, E>(v: Transform<R, E>, e: E) -> R;
}

class B {
    def accept<R, E>(v: Transform<R, E>, e: E) -> R;
}
