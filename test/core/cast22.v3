//@execute 0=!TypeCheckException; 1=!TypeCheckException; 2=!TypeCheckException; 3=!TypeCheckException; 4=11; 5=42
class X<T> { var x: int = 11; }
component Y { }
component Z { }
def main(arg: int) -> int {
	if (arg == 0) return cast<Y, Z>(n<Y>()).x;
	if (arg == 1) return cast<Z, Y>(n<Z>()).x;
	if (arg == 2) return cast<Y, void>(n<Y>()).x;
	if (arg == 3) return cast<void, Z>(n<void>()).x;
	if (arg == 4) return cast<void, void>(n<void>()).x;
	return 42;
}
def cast<A, B>(a: X<A>) -> X<B> {
	return X<B>.!(a);
}
def n<T>() -> X<T> {
	return X<T>.new();
}

