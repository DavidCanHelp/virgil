//@execute 0=33
class FpSketch {
	var exp: int = 0;
	var words: Array<u32>;
	// Return the 32-bit mantissa (upper bits without highest 1) and exponent.
	def mantissa64() -> (u64, int) {
		var h = highestOneBit();
		if (h < 0) return (0, int.min); // this number == 0
		if (h == 0) return (0, 0);      // this number == 1
		var r = h - 1, i = r >> 5, s = u5.view(r);
		var d = u64.!(words[i]) << 32;
		if (i > 0) d |= words[i-1];
		if (s < 31) {
			d <<= u5.view(31 - s);
			if (i > 1) d |= words[i-2] >> u5.view(s+1); // part of next lowest digit
		}
		return (d, h + this.exp * 32);
	}
	def highestOneBit() -> int {
		return 1;
	}
}
def main(a: int) -> int {
	var f = FpSketch.new();
	f.words = [4u];
	f.exp = 1;
	var x = f.mantissa64();
	return x.1;
}