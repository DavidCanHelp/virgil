//@execute 0=88
class Bucket<K, V> {
	def key: K;
	var val: V;
	var next: Bucket<K, V>;

	new(key, val: V, next: Bucket<K,V>) {
		this.next = next;
		this.val = val;
	}
}
class Map<K, V>(eq: (K, K) -> bool) {
	var bucket: Bucket<K, V>;
	def [key: K] = val: V {
		bucket = Bucket.new(key, val, null);
	}
	def get(key: K) -> V {
		var nil: V;
		if (bucket == null) return nil;
		if (eq(bucket.key, key)) return bucket.val;
		return nil;
	}
}
def eq2(a: (int, int), b: (int, int)) -> bool {
	return a.0 == b.0 && a.1 == b.1;
}
def main(a: int) -> int {
	var map = Map<(int, int), bool>.new(eq2);
	map[(0, a)] = true;
	if (map.get((1, a))) return 66;
	if (map.get((2, a))) return 77;
	if (map.get((0, a))) return 88;
	return 99;
}