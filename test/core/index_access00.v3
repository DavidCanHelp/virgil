//@execute 0=12
class Accessor<K, V>(get: K -> V, set: (K, V) -> void) {
	def [key: K] -> V { return get(key); }
	def [key: K] = val: V { return set(key, val); }
}
class Matrix<T>(rows: int, cols: int) {
	private def data: Array<T> = Array<T>.new(rows * cols);
	def row(row: int) -> Accessor<int, T> {
		return Accessor.new(this.[](row, _), this.[]=(row, _, _));
	}
	def col(col: int) -> Accessor<int, T> {
		return Accessor.new(this.[](_, col), this.[]=(_, col, _));
	}
	def [row: int, col: int] -> T {
		return data[row * cols + col];
	}
	def [row: int, col: int] = val: T {
		data[row * cols + col] = val;
	}
}
def main(a: int) -> int {
	def m = Matrix<int>.new(2, 3);
	m[0,0] = a;
	m[1,1] = a + 2;
	def r = m.row(0);
	def c = m.col(0);
	r[0] = 9;
	c[1] = 11;
	return 12;
}
