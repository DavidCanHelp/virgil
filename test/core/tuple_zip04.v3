//@execute 0=3
component tuple_zip04 {
	def main(arg: int) -> int {
		return sum(unzip(zip([2, 3, 4], [-1, -2, -3])));
	}
	def zip<A, B>(a: Array<A>, b: Array<B>) -> Array<(A, B)> {
		if (a.length != b.length) return null;
		var r = Array<(A, B)>.new(a.length), i = 0;
		while (i < r.length) {
			r[i] = (a[i], b[i]);
			i = i + 1;
		}
		return r;
	}
	def unzip<A, B>(r: Array<(A, B)>) -> (Array<A>, Array<B>) {
		var a = Array<A>.new(r.length), b = Array<B>.new(r.length);
		var i = 0;
		while (i < r.length) {
			a[i] = r[i].0;
			b[i] = r[i].1;
			i = i + 1;
		}
		return (a, b);
	}
	def sum(a: Array<int>, b: Array<int>) -> int {
		var i = 0, sum = 0;
		while (i < a.length) {
			sum = sum + a[i] + b[i];
			i = i + 1;
		}
		return sum;
	}
}
