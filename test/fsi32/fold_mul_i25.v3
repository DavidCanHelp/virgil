//@execute = 26
def a = doOp();
def b = doFolded();
def main() -> int {
	def c = doOp();
	def d = doFolded();
	for (i = 0; i < a.length; i++) if (a[i] != b[i] || a[i] != c[i] || a[i] != d[i]) return -20 - i;
	return 26;
}
def op(x: int, y: int) -> i25 {
	return i25.view(x) * i25.view(y);
}
def doOp() -> Array<i25> {
	return  [
		op(0, 0), op(0, 1), op(0, 16777216), op(0, 16777217), op(0, 8388608), op(0, 8388609), op(0, 25165824), op(0, 25165825), 
		op(1, 0), op(1, 1), op(1, 16777216), op(1, 16777217), op(1, 8388608), op(1, 8388609), op(1, 25165824), op(1, 25165825), 
		op(16777216, 0), op(16777216, 1), op(16777216, 16777216), op(16777216, 16777217), op(16777216, 8388608), op(16777216, 8388609), op(16777216, 25165824), op(16777216, 25165825), 
		op(16777217, 0), op(16777217, 1), op(16777217, 16777216), op(16777217, 16777217), op(16777217, 8388608), op(16777217, 8388609), op(16777217, 25165824), op(16777217, 25165825), 
		op(8388608, 0), op(8388608, 1), op(8388608, 16777216), op(8388608, 16777217), op(8388608, 8388608), op(8388608, 8388609), op(8388608, 25165824), op(8388608, 25165825), 
		op(8388609, 0), op(8388609, 1), op(8388609, 16777216), op(8388609, 16777217), op(8388609, 8388608), op(8388609, 8388609), op(8388609, 25165824), op(8388609, 25165825), 
		op(25165824, 0), op(25165824, 1), op(25165824, 16777216), op(25165824, 16777217), op(25165824, 8388608), op(25165824, 8388609), op(25165824, 25165824), op(25165824, 25165825), 
		op(25165825, 0), op(25165825, 1), op(25165825, 16777216), op(25165825, 16777217), op(25165825, 8388608), op(25165825, 8388609), op(25165825, 25165824), op(25165825, 25165825)
	];
}
def doFolded() -> Array<i25> {
	return  [
		i25.view(0) * i25.view(0), i25.view(0) * i25.view(1), i25.view(0) * i25.view(16777216), i25.view(0) * i25.view(16777217), i25.view(0) * i25.view(8388608), i25.view(0) * i25.view(8388609), i25.view(0) * i25.view(25165824), i25.view(0) * i25.view(25165825), 
		i25.view(1) * i25.view(0), i25.view(1) * i25.view(1), i25.view(1) * i25.view(16777216), i25.view(1) * i25.view(16777217), i25.view(1) * i25.view(8388608), i25.view(1) * i25.view(8388609), i25.view(1) * i25.view(25165824), i25.view(1) * i25.view(25165825), 
		i25.view(16777216) * i25.view(0), i25.view(16777216) * i25.view(1), i25.view(16777216) * i25.view(16777216), i25.view(16777216) * i25.view(16777217), i25.view(16777216) * i25.view(8388608), i25.view(16777216) * i25.view(8388609), i25.view(16777216) * i25.view(25165824), i25.view(16777216) * i25.view(25165825), 
		i25.view(16777217) * i25.view(0), i25.view(16777217) * i25.view(1), i25.view(16777217) * i25.view(16777216), i25.view(16777217) * i25.view(16777217), i25.view(16777217) * i25.view(8388608), i25.view(16777217) * i25.view(8388609), i25.view(16777217) * i25.view(25165824), i25.view(16777217) * i25.view(25165825), 
		i25.view(8388608) * i25.view(0), i25.view(8388608) * i25.view(1), i25.view(8388608) * i25.view(16777216), i25.view(8388608) * i25.view(16777217), i25.view(8388608) * i25.view(8388608), i25.view(8388608) * i25.view(8388609), i25.view(8388608) * i25.view(25165824), i25.view(8388608) * i25.view(25165825), 
		i25.view(8388609) * i25.view(0), i25.view(8388609) * i25.view(1), i25.view(8388609) * i25.view(16777216), i25.view(8388609) * i25.view(16777217), i25.view(8388609) * i25.view(8388608), i25.view(8388609) * i25.view(8388609), i25.view(8388609) * i25.view(25165824), i25.view(8388609) * i25.view(25165825), 
		i25.view(25165824) * i25.view(0), i25.view(25165824) * i25.view(1), i25.view(25165824) * i25.view(16777216), i25.view(25165824) * i25.view(16777217), i25.view(25165824) * i25.view(8388608), i25.view(25165824) * i25.view(8388609), i25.view(25165824) * i25.view(25165824), i25.view(25165824) * i25.view(25165825), 
		i25.view(25165825) * i25.view(0), i25.view(25165825) * i25.view(1), i25.view(25165825) * i25.view(16777216), i25.view(25165825) * i25.view(16777217), i25.view(25165825) * i25.view(8388608), i25.view(25165825) * i25.view(8388609), i25.view(25165825) * i25.view(25165824), i25.view(25165825) * i25.view(25165825)
	];
}
