//@execute = 17
def a = doOp();
def b = doFolded();
def main() -> int {
	def c = doOp();
	def d = doFolded();
	for (i = 0; i < a.length; i++) if (a[i] != b[i] || a[i] != c[i] || a[i] != d[i]) return -20 - i;
	return 17;
}
def op(x: int, y: int) -> u16 {
	return u16.!(x) & u16.!(y);
}
def doOp() -> Array<u16> {
	return  [
		op(0, 0), op(0, 1), op(0, 32768), op(0, 32769), op(0, 16384), op(0, 16385), op(0, 49152), op(0, 49153), 
		op(1, 0), op(1, 1), op(1, 32768), op(1, 32769), op(1, 16384), op(1, 16385), op(1, 49152), op(1, 49153), 
		op(32768, 0), op(32768, 1), op(32768, 32768), op(32768, 32769), op(32768, 16384), op(32768, 16385), op(32768, 49152), op(32768, 49153), 
		op(32769, 0), op(32769, 1), op(32769, 32768), op(32769, 32769), op(32769, 16384), op(32769, 16385), op(32769, 49152), op(32769, 49153), 
		op(16384, 0), op(16384, 1), op(16384, 32768), op(16384, 32769), op(16384, 16384), op(16384, 16385), op(16384, 49152), op(16384, 49153), 
		op(16385, 0), op(16385, 1), op(16385, 32768), op(16385, 32769), op(16385, 16384), op(16385, 16385), op(16385, 49152), op(16385, 49153), 
		op(49152, 0), op(49152, 1), op(49152, 32768), op(49152, 32769), op(49152, 16384), op(49152, 16385), op(49152, 49152), op(49152, 49153), 
		op(49153, 0), op(49153, 1), op(49153, 32768), op(49153, 32769), op(49153, 16384), op(49153, 16385), op(49153, 49152), op(49153, 49153)
	];
}
def doFolded() -> Array<u16> {
	return  [
		u16.!(0) & u16.!(0), u16.!(0) & u16.!(1), u16.!(0) & u16.!(32768), u16.!(0) & u16.!(32769), u16.!(0) & u16.!(16384), u16.!(0) & u16.!(16385), u16.!(0) & u16.!(49152), u16.!(0) & u16.!(49153), 
		u16.!(1) & u16.!(0), u16.!(1) & u16.!(1), u16.!(1) & u16.!(32768), u16.!(1) & u16.!(32769), u16.!(1) & u16.!(16384), u16.!(1) & u16.!(16385), u16.!(1) & u16.!(49152), u16.!(1) & u16.!(49153), 
		u16.!(32768) & u16.!(0), u16.!(32768) & u16.!(1), u16.!(32768) & u16.!(32768), u16.!(32768) & u16.!(32769), u16.!(32768) & u16.!(16384), u16.!(32768) & u16.!(16385), u16.!(32768) & u16.!(49152), u16.!(32768) & u16.!(49153), 
		u16.!(32769) & u16.!(0), u16.!(32769) & u16.!(1), u16.!(32769) & u16.!(32768), u16.!(32769) & u16.!(32769), u16.!(32769) & u16.!(16384), u16.!(32769) & u16.!(16385), u16.!(32769) & u16.!(49152), u16.!(32769) & u16.!(49153), 
		u16.!(16384) & u16.!(0), u16.!(16384) & u16.!(1), u16.!(16384) & u16.!(32768), u16.!(16384) & u16.!(32769), u16.!(16384) & u16.!(16384), u16.!(16384) & u16.!(16385), u16.!(16384) & u16.!(49152), u16.!(16384) & u16.!(49153), 
		u16.!(16385) & u16.!(0), u16.!(16385) & u16.!(1), u16.!(16385) & u16.!(32768), u16.!(16385) & u16.!(32769), u16.!(16385) & u16.!(16384), u16.!(16385) & u16.!(16385), u16.!(16385) & u16.!(49152), u16.!(16385) & u16.!(49153), 
		u16.!(49152) & u16.!(0), u16.!(49152) & u16.!(1), u16.!(49152) & u16.!(32768), u16.!(49152) & u16.!(32769), u16.!(49152) & u16.!(16384), u16.!(49152) & u16.!(16385), u16.!(49152) & u16.!(49152), u16.!(49152) & u16.!(49153), 
		u16.!(49153) & u16.!(0), u16.!(49153) & u16.!(1), u16.!(49153) & u16.!(32768), u16.!(49153) & u16.!(32769), u16.!(49153) & u16.!(16384), u16.!(49153) & u16.!(16385), u16.!(49153) & u16.!(49152), u16.!(49153) & u16.!(49153)
	];
}
