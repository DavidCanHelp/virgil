//@execute = 11
def a = doOp();
def b = doFolded();
def main() -> int {
	def c = doOp();
	def d = doFolded();
	for (i = 0; i < a.length; i++) if (a[i] != b[i] || a[i] != c[i] || a[i] != d[i]) return -20 - i;
	return 11;
}
def op(x: int, y: int) -> u10 {
	return u10.view(x) | u10.view(y);
}
def doOp() -> Array<u10> {
	return  [
		op(0, 0), op(0, 1), op(0, 512), op(0, 513), op(0, 256), op(0, 257), op(0, 768), op(0, 769), 
		op(1, 0), op(1, 1), op(1, 512), op(1, 513), op(1, 256), op(1, 257), op(1, 768), op(1, 769), 
		op(512, 0), op(512, 1), op(512, 512), op(512, 513), op(512, 256), op(512, 257), op(512, 768), op(512, 769), 
		op(513, 0), op(513, 1), op(513, 512), op(513, 513), op(513, 256), op(513, 257), op(513, 768), op(513, 769), 
		op(256, 0), op(256, 1), op(256, 512), op(256, 513), op(256, 256), op(256, 257), op(256, 768), op(256, 769), 
		op(257, 0), op(257, 1), op(257, 512), op(257, 513), op(257, 256), op(257, 257), op(257, 768), op(257, 769), 
		op(768, 0), op(768, 1), op(768, 512), op(768, 513), op(768, 256), op(768, 257), op(768, 768), op(768, 769), 
		op(769, 0), op(769, 1), op(769, 512), op(769, 513), op(769, 256), op(769, 257), op(769, 768), op(769, 769)
	];
}
def doFolded() -> Array<u10> {
	return  [
		u10.view(0) | u10.view(0), u10.view(0) | u10.view(1), u10.view(0) | u10.view(512), u10.view(0) | u10.view(513), u10.view(0) | u10.view(256), u10.view(0) | u10.view(257), u10.view(0) | u10.view(768), u10.view(0) | u10.view(769), 
		u10.view(1) | u10.view(0), u10.view(1) | u10.view(1), u10.view(1) | u10.view(512), u10.view(1) | u10.view(513), u10.view(1) | u10.view(256), u10.view(1) | u10.view(257), u10.view(1) | u10.view(768), u10.view(1) | u10.view(769), 
		u10.view(512) | u10.view(0), u10.view(512) | u10.view(1), u10.view(512) | u10.view(512), u10.view(512) | u10.view(513), u10.view(512) | u10.view(256), u10.view(512) | u10.view(257), u10.view(512) | u10.view(768), u10.view(512) | u10.view(769), 
		u10.view(513) | u10.view(0), u10.view(513) | u10.view(1), u10.view(513) | u10.view(512), u10.view(513) | u10.view(513), u10.view(513) | u10.view(256), u10.view(513) | u10.view(257), u10.view(513) | u10.view(768), u10.view(513) | u10.view(769), 
		u10.view(256) | u10.view(0), u10.view(256) | u10.view(1), u10.view(256) | u10.view(512), u10.view(256) | u10.view(513), u10.view(256) | u10.view(256), u10.view(256) | u10.view(257), u10.view(256) | u10.view(768), u10.view(256) | u10.view(769), 
		u10.view(257) | u10.view(0), u10.view(257) | u10.view(1), u10.view(257) | u10.view(512), u10.view(257) | u10.view(513), u10.view(257) | u10.view(256), u10.view(257) | u10.view(257), u10.view(257) | u10.view(768), u10.view(257) | u10.view(769), 
		u10.view(768) | u10.view(0), u10.view(768) | u10.view(1), u10.view(768) | u10.view(512), u10.view(768) | u10.view(513), u10.view(768) | u10.view(256), u10.view(768) | u10.view(257), u10.view(768) | u10.view(768), u10.view(768) | u10.view(769), 
		u10.view(769) | u10.view(0), u10.view(769) | u10.view(1), u10.view(769) | u10.view(512), u10.view(769) | u10.view(513), u10.view(769) | u10.view(256), u10.view(769) | u10.view(257), u10.view(769) | u10.view(768), u10.view(769) | u10.view(769)
	];
}
