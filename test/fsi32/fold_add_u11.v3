//@execute = 12
def a = doOp();
def b = doFolded();
def main() -> int {
	def c = doOp();
	def d = doFolded();
	for (i = 0; i < a.length; i++) if (a[i] != b[i] || a[i] != c[i] || a[i] != d[i]) return -20 - i;
	return 12;
}
def op(x: int, y: int) -> u11 {
	return u11.view(x) + u11.view(y);
}
def doOp() -> Array<u11> {
	return  [
		op(0, 0), op(0, 1), op(0, 1024), op(0, 1025), op(0, 512), op(0, 513), op(0, 1536), op(0, 1537), 
		op(1, 0), op(1, 1), op(1, 1024), op(1, 1025), op(1, 512), op(1, 513), op(1, 1536), op(1, 1537), 
		op(1024, 0), op(1024, 1), op(1024, 1024), op(1024, 1025), op(1024, 512), op(1024, 513), op(1024, 1536), op(1024, 1537), 
		op(1025, 0), op(1025, 1), op(1025, 1024), op(1025, 1025), op(1025, 512), op(1025, 513), op(1025, 1536), op(1025, 1537), 
		op(512, 0), op(512, 1), op(512, 1024), op(512, 1025), op(512, 512), op(512, 513), op(512, 1536), op(512, 1537), 
		op(513, 0), op(513, 1), op(513, 1024), op(513, 1025), op(513, 512), op(513, 513), op(513, 1536), op(513, 1537), 
		op(1536, 0), op(1536, 1), op(1536, 1024), op(1536, 1025), op(1536, 512), op(1536, 513), op(1536, 1536), op(1536, 1537), 
		op(1537, 0), op(1537, 1), op(1537, 1024), op(1537, 1025), op(1537, 512), op(1537, 513), op(1537, 1536), op(1537, 1537)
	];
}
def doFolded() -> Array<u11> {
	return  [
		u11.view(0) + u11.view(0), u11.view(0) + u11.view(1), u11.view(0) + u11.view(1024), u11.view(0) + u11.view(1025), u11.view(0) + u11.view(512), u11.view(0) + u11.view(513), u11.view(0) + u11.view(1536), u11.view(0) + u11.view(1537), 
		u11.view(1) + u11.view(0), u11.view(1) + u11.view(1), u11.view(1) + u11.view(1024), u11.view(1) + u11.view(1025), u11.view(1) + u11.view(512), u11.view(1) + u11.view(513), u11.view(1) + u11.view(1536), u11.view(1) + u11.view(1537), 
		u11.view(1024) + u11.view(0), u11.view(1024) + u11.view(1), u11.view(1024) + u11.view(1024), u11.view(1024) + u11.view(1025), u11.view(1024) + u11.view(512), u11.view(1024) + u11.view(513), u11.view(1024) + u11.view(1536), u11.view(1024) + u11.view(1537), 
		u11.view(1025) + u11.view(0), u11.view(1025) + u11.view(1), u11.view(1025) + u11.view(1024), u11.view(1025) + u11.view(1025), u11.view(1025) + u11.view(512), u11.view(1025) + u11.view(513), u11.view(1025) + u11.view(1536), u11.view(1025) + u11.view(1537), 
		u11.view(512) + u11.view(0), u11.view(512) + u11.view(1), u11.view(512) + u11.view(1024), u11.view(512) + u11.view(1025), u11.view(512) + u11.view(512), u11.view(512) + u11.view(513), u11.view(512) + u11.view(1536), u11.view(512) + u11.view(1537), 
		u11.view(513) + u11.view(0), u11.view(513) + u11.view(1), u11.view(513) + u11.view(1024), u11.view(513) + u11.view(1025), u11.view(513) + u11.view(512), u11.view(513) + u11.view(513), u11.view(513) + u11.view(1536), u11.view(513) + u11.view(1537), 
		u11.view(1536) + u11.view(0), u11.view(1536) + u11.view(1), u11.view(1536) + u11.view(1024), u11.view(1536) + u11.view(1025), u11.view(1536) + u11.view(512), u11.view(1536) + u11.view(513), u11.view(1536) + u11.view(1536), u11.view(1536) + u11.view(1537), 
		u11.view(1537) + u11.view(0), u11.view(1537) + u11.view(1), u11.view(1537) + u11.view(1024), u11.view(1537) + u11.view(1025), u11.view(1537) + u11.view(512), u11.view(1537) + u11.view(513), u11.view(1537) + u11.view(1536), u11.view(1537) + u11.view(1537)
	];
}
