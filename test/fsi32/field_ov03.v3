//@execute = 111
var failures = 111;
def main() -> int {
	failures = 111;

	test(i1.view<int>);
	test(i2.view<int>);
	test(i3.view<int>);
	test(i4.view<int>);
	test(i5.view<int>);
	test(i6.view<int>);
	test(i7.view<int>);
	test(i8.view<int>);
	test(i9.view<int>);

	test(i10.view<int>);
	test(i11.view<int>);
	test(i12.view<int>);
	test(i13.view<int>);
	test(i14.view<int>);
	test(i15.view<int>);
	test(i16.view<int>);
	test(i17.view<int>);
	test(i18.view<int>);
	test(i19.view<int>);

	test(i20.view<int>);
	test(i21.view<int>);
	test(i22.view<int>);
	test(i23.view<int>);
	test(i24.view<int>);
	test(i25.view<int>);
	test(i26.view<int>);
	test(i27.view<int>);
	test(i28.view<int>);
	test(i29.view<int>);

	test(i30.view<int>);
	test(i31.view<int>);
	test(i32.view<int>);

	return failures;
}

class field_ov03c<T> {
	var a: (T, T, T);
}

def vals = [int.min, -1, 0, 1, int.max];
def test<T>(f: int -> T) {
	var o = field_ov03c<T>.new();
	for (v in vals) {
		o.a = (f(v - 0x01020304), f(v), f(v + 0x01020304));

		if (o.a.0 != f(v - 0x01020304)) failures++;
		if (o.a.1 != f(v)) failures++;
		if (o.a.2 != f(v + 0x01020304)) failures++;
	}
}
