//@execute = 15
def a = doOp();
def b = doFolded();
def main() -> int {
	def c = doOp();
	def d = doFolded();
	for (i = 0; i < a.length; i++) if (a(i) != b(i) || a(i) != c(i) || a(i) != d(i)) return -20 - i;
	return 15;
}
def op(x: int, y: int) -> u14 {
	return u14.!(x) / u14.!(y);
}
def doOp() -> Array<u14> {
	return  [
		op(0, 1), op(0, 8192), op(0, 8193), op(0, 4096), op(0, 4097), op(0, 12288), op(0, 12289), 
		op(1, 1), op(1, 8192), op(1, 8193), op(1, 4096), op(1, 4097), op(1, 12288), op(1, 12289), 
		op(8192, 1), op(8192, 8192), op(8192, 8193), op(8192, 4096), op(8192, 4097), op(8192, 12288), op(8192, 12289), 
		op(8193, 1), op(8193, 8192), op(8193, 8193), op(8193, 4096), op(8193, 4097), op(8193, 12288), op(8193, 12289), 
		op(4096, 1), op(4096, 8192), op(4096, 8193), op(4096, 4096), op(4096, 4097), op(4096, 12288), op(4096, 12289), 
		op(4097, 1), op(4097, 8192), op(4097, 8193), op(4097, 4096), op(4097, 4097), op(4097, 12288), op(4097, 12289), 
		op(12288, 1), op(12288, 8192), op(12288, 8193), op(12288, 4096), op(12288, 4097), op(12288, 12288), op(12288, 12289), 
		op(12289, 1), op(12289, 8192), op(12289, 8193), op(12289, 4096), op(12289, 4097), op(12289, 12288), op(12289, 12289)
	];
}
def doFolded() -> Array<u14> {
	return  [
		u14.!(0) / u14.!(1), u14.!(0) / u14.!(8192), u14.!(0) / u14.!(8193), u14.!(0) / u14.!(4096), u14.!(0) / u14.!(4097), u14.!(0) / u14.!(12288), u14.!(0) / u14.!(12289), 
		u14.!(1) / u14.!(1), u14.!(1) / u14.!(8192), u14.!(1) / u14.!(8193), u14.!(1) / u14.!(4096), u14.!(1) / u14.!(4097), u14.!(1) / u14.!(12288), u14.!(1) / u14.!(12289), 
		u14.!(8192) / u14.!(1), u14.!(8192) / u14.!(8192), u14.!(8192) / u14.!(8193), u14.!(8192) / u14.!(4096), u14.!(8192) / u14.!(4097), u14.!(8192) / u14.!(12288), u14.!(8192) / u14.!(12289), 
		u14.!(8193) / u14.!(1), u14.!(8193) / u14.!(8192), u14.!(8193) / u14.!(8193), u14.!(8193) / u14.!(4096), u14.!(8193) / u14.!(4097), u14.!(8193) / u14.!(12288), u14.!(8193) / u14.!(12289), 
		u14.!(4096) / u14.!(1), u14.!(4096) / u14.!(8192), u14.!(4096) / u14.!(8193), u14.!(4096) / u14.!(4096), u14.!(4096) / u14.!(4097), u14.!(4096) / u14.!(12288), u14.!(4096) / u14.!(12289), 
		u14.!(4097) / u14.!(1), u14.!(4097) / u14.!(8192), u14.!(4097) / u14.!(8193), u14.!(4097) / u14.!(4096), u14.!(4097) / u14.!(4097), u14.!(4097) / u14.!(12288), u14.!(4097) / u14.!(12289), 
		u14.!(12288) / u14.!(1), u14.!(12288) / u14.!(8192), u14.!(12288) / u14.!(8193), u14.!(12288) / u14.!(4096), u14.!(12288) / u14.!(4097), u14.!(12288) / u14.!(12288), u14.!(12288) / u14.!(12289), 
		u14.!(12289) / u14.!(1), u14.!(12289) / u14.!(8192), u14.!(12289) / u14.!(8193), u14.!(12289) / u14.!(4096), u14.!(12289) / u14.!(4097), u14.!(12289) / u14.!(12288), u14.!(12289) / u14.!(12289)
	];
}
