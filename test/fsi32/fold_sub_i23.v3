//@execute = 24
def a = doOp();
def b = doFolded();
def main() -> int {
	def c = doOp();
	def d = doFolded();
	for (i = 0; i < a.length; i++) if (a[i] != b[i] || a[i] != c[i] || a[i] != d[i]) return -20 - i;
	return 24;
}
def op(x: int, y: int) -> i23 {
	return i23.view(x) - i23.view(y);
}
def doOp() -> Array<i23> {
	return  [
		op(0, 0), op(0, 1), op(0, 4194304), op(0, 4194305), op(0, 2097152), op(0, 2097153), op(0, 6291456), op(0, 6291457), 
		op(1, 0), op(1, 1), op(1, 4194304), op(1, 4194305), op(1, 2097152), op(1, 2097153), op(1, 6291456), op(1, 6291457), 
		op(4194304, 0), op(4194304, 1), op(4194304, 4194304), op(4194304, 4194305), op(4194304, 2097152), op(4194304, 2097153), op(4194304, 6291456), op(4194304, 6291457), 
		op(4194305, 0), op(4194305, 1), op(4194305, 4194304), op(4194305, 4194305), op(4194305, 2097152), op(4194305, 2097153), op(4194305, 6291456), op(4194305, 6291457), 
		op(2097152, 0), op(2097152, 1), op(2097152, 4194304), op(2097152, 4194305), op(2097152, 2097152), op(2097152, 2097153), op(2097152, 6291456), op(2097152, 6291457), 
		op(2097153, 0), op(2097153, 1), op(2097153, 4194304), op(2097153, 4194305), op(2097153, 2097152), op(2097153, 2097153), op(2097153, 6291456), op(2097153, 6291457), 
		op(6291456, 0), op(6291456, 1), op(6291456, 4194304), op(6291456, 4194305), op(6291456, 2097152), op(6291456, 2097153), op(6291456, 6291456), op(6291456, 6291457), 
		op(6291457, 0), op(6291457, 1), op(6291457, 4194304), op(6291457, 4194305), op(6291457, 2097152), op(6291457, 2097153), op(6291457, 6291456), op(6291457, 6291457)
	];
}
def doFolded() -> Array<i23> {
	return  [
		i23.view(0) - i23.view(0), i23.view(0) - i23.view(1), i23.view(0) - i23.view(4194304), i23.view(0) - i23.view(4194305), i23.view(0) - i23.view(2097152), i23.view(0) - i23.view(2097153), i23.view(0) - i23.view(6291456), i23.view(0) - i23.view(6291457), 
		i23.view(1) - i23.view(0), i23.view(1) - i23.view(1), i23.view(1) - i23.view(4194304), i23.view(1) - i23.view(4194305), i23.view(1) - i23.view(2097152), i23.view(1) - i23.view(2097153), i23.view(1) - i23.view(6291456), i23.view(1) - i23.view(6291457), 
		i23.view(4194304) - i23.view(0), i23.view(4194304) - i23.view(1), i23.view(4194304) - i23.view(4194304), i23.view(4194304) - i23.view(4194305), i23.view(4194304) - i23.view(2097152), i23.view(4194304) - i23.view(2097153), i23.view(4194304) - i23.view(6291456), i23.view(4194304) - i23.view(6291457), 
		i23.view(4194305) - i23.view(0), i23.view(4194305) - i23.view(1), i23.view(4194305) - i23.view(4194304), i23.view(4194305) - i23.view(4194305), i23.view(4194305) - i23.view(2097152), i23.view(4194305) - i23.view(2097153), i23.view(4194305) - i23.view(6291456), i23.view(4194305) - i23.view(6291457), 
		i23.view(2097152) - i23.view(0), i23.view(2097152) - i23.view(1), i23.view(2097152) - i23.view(4194304), i23.view(2097152) - i23.view(4194305), i23.view(2097152) - i23.view(2097152), i23.view(2097152) - i23.view(2097153), i23.view(2097152) - i23.view(6291456), i23.view(2097152) - i23.view(6291457), 
		i23.view(2097153) - i23.view(0), i23.view(2097153) - i23.view(1), i23.view(2097153) - i23.view(4194304), i23.view(2097153) - i23.view(4194305), i23.view(2097153) - i23.view(2097152), i23.view(2097153) - i23.view(2097153), i23.view(2097153) - i23.view(6291456), i23.view(2097153) - i23.view(6291457), 
		i23.view(6291456) - i23.view(0), i23.view(6291456) - i23.view(1), i23.view(6291456) - i23.view(4194304), i23.view(6291456) - i23.view(4194305), i23.view(6291456) - i23.view(2097152), i23.view(6291456) - i23.view(2097153), i23.view(6291456) - i23.view(6291456), i23.view(6291456) - i23.view(6291457), 
		i23.view(6291457) - i23.view(0), i23.view(6291457) - i23.view(1), i23.view(6291457) - i23.view(4194304), i23.view(6291457) - i23.view(4194305), i23.view(6291457) - i23.view(2097152), i23.view(6291457) - i23.view(2097153), i23.view(6291457) - i23.view(6291456), i23.view(6291457) - i23.view(6291457)
	];
}
