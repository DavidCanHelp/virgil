//@execute = 33
def a = doOp();
def b = doFolded();
def main() -> int {
	def c = doOp();
	def d = doFolded();
	for (i = 0; i < a.length; i++) if (a(i) != b(i) || a(i) != c(i) || a(i) != d(i)) return -20 - i;
	return 33;
}
def op(x: int, y: int) -> i32 {
	return i32.!(x) % i32.!(y);
}
def doOp() -> Array<i32> {
	return  [
		op(0, 1), op(0, -2147483648), op(0, -2147483647), op(0, 1073741824), op(0, 1073741825), op(0, -1073741824), op(0, -1073741823), 
		op(1, 1), op(1, -2147483648), op(1, -2147483647), op(1, 1073741824), op(1, 1073741825), op(1, -1073741824), op(1, -1073741823), 
		op(-2147483648, 1), op(-2147483648, -2147483648), op(-2147483648, -2147483647), op(-2147483648, 1073741824), op(-2147483648, 1073741825), op(-2147483648, -1073741824), op(-2147483648, -1073741823), 
		op(-2147483647, 1), op(-2147483647, -2147483648), op(-2147483647, -2147483647), op(-2147483647, 1073741824), op(-2147483647, 1073741825), op(-2147483647, -1073741824), op(-2147483647, -1073741823), 
		op(1073741824, 1), op(1073741824, -2147483648), op(1073741824, -2147483647), op(1073741824, 1073741824), op(1073741824, 1073741825), op(1073741824, -1073741824), op(1073741824, -1073741823), 
		op(1073741825, 1), op(1073741825, -2147483648), op(1073741825, -2147483647), op(1073741825, 1073741824), op(1073741825, 1073741825), op(1073741825, -1073741824), op(1073741825, -1073741823), 
		op(-1073741824, 1), op(-1073741824, -2147483648), op(-1073741824, -2147483647), op(-1073741824, 1073741824), op(-1073741824, 1073741825), op(-1073741824, -1073741824), op(-1073741824, -1073741823), 
		op(-1073741823, 1), op(-1073741823, -2147483648), op(-1073741823, -2147483647), op(-1073741823, 1073741824), op(-1073741823, 1073741825), op(-1073741823, -1073741824), op(-1073741823, -1073741823)
	];
}
def doFolded() -> Array<i32> {
	return  [
		i32.!(0) % i32.!(1), i32.!(0) % i32.!(-2147483648), i32.!(0) % i32.!(-2147483647), i32.!(0) % i32.!(1073741824), i32.!(0) % i32.!(1073741825), i32.!(0) % i32.!(-1073741824), i32.!(0) % i32.!(-1073741823), 
		i32.!(1) % i32.!(1), i32.!(1) % i32.!(-2147483648), i32.!(1) % i32.!(-2147483647), i32.!(1) % i32.!(1073741824), i32.!(1) % i32.!(1073741825), i32.!(1) % i32.!(-1073741824), i32.!(1) % i32.!(-1073741823), 
		i32.!(-2147483648) % i32.!(1), i32.!(-2147483648) % i32.!(-2147483648), i32.!(-2147483648) % i32.!(-2147483647), i32.!(-2147483648) % i32.!(1073741824), i32.!(-2147483648) % i32.!(1073741825), i32.!(-2147483648) % i32.!(-1073741824), i32.!(-2147483648) % i32.!(-1073741823), 
		i32.!(-2147483647) % i32.!(1), i32.!(-2147483647) % i32.!(-2147483648), i32.!(-2147483647) % i32.!(-2147483647), i32.!(-2147483647) % i32.!(1073741824), i32.!(-2147483647) % i32.!(1073741825), i32.!(-2147483647) % i32.!(-1073741824), i32.!(-2147483647) % i32.!(-1073741823), 
		i32.!(1073741824) % i32.!(1), i32.!(1073741824) % i32.!(-2147483648), i32.!(1073741824) % i32.!(-2147483647), i32.!(1073741824) % i32.!(1073741824), i32.!(1073741824) % i32.!(1073741825), i32.!(1073741824) % i32.!(-1073741824), i32.!(1073741824) % i32.!(-1073741823), 
		i32.!(1073741825) % i32.!(1), i32.!(1073741825) % i32.!(-2147483648), i32.!(1073741825) % i32.!(-2147483647), i32.!(1073741825) % i32.!(1073741824), i32.!(1073741825) % i32.!(1073741825), i32.!(1073741825) % i32.!(-1073741824), i32.!(1073741825) % i32.!(-1073741823), 
		i32.!(-1073741824) % i32.!(1), i32.!(-1073741824) % i32.!(-2147483648), i32.!(-1073741824) % i32.!(-2147483647), i32.!(-1073741824) % i32.!(1073741824), i32.!(-1073741824) % i32.!(1073741825), i32.!(-1073741824) % i32.!(-1073741824), i32.!(-1073741824) % i32.!(-1073741823), 
		i32.!(-1073741823) % i32.!(1), i32.!(-1073741823) % i32.!(-2147483648), i32.!(-1073741823) % i32.!(-2147483647), i32.!(-1073741823) % i32.!(1073741824), i32.!(-1073741823) % i32.!(1073741825), i32.!(-1073741823) % i32.!(-1073741824), i32.!(-1073741823) % i32.!(-1073741823)
	];
}
