//@execute = 21
def a = doOp();
def b = doFolded();
def main() -> int {
	def c = doOp();
	def d = doFolded();
	for (i = 0; i < a.length; i++) if (a[i] != b[i] || a[i] != c[i] || a[i] != d[i]) return -20 - i;
	return 21;
}
def op(x: int, y: int) -> u20 {
	return u20.!(x) - u20.!(y);
}
def doOp() -> Array<u20> {
	return  [
		op(0, 0), op(0, 1), op(0, 524288), op(0, 524289), op(0, 262144), op(0, 262145), op(0, 786432), op(0, 786433), 
		op(1, 0), op(1, 1), op(1, 524288), op(1, 524289), op(1, 262144), op(1, 262145), op(1, 786432), op(1, 786433), 
		op(524288, 0), op(524288, 1), op(524288, 524288), op(524288, 524289), op(524288, 262144), op(524288, 262145), op(524288, 786432), op(524288, 786433), 
		op(524289, 0), op(524289, 1), op(524289, 524288), op(524289, 524289), op(524289, 262144), op(524289, 262145), op(524289, 786432), op(524289, 786433), 
		op(262144, 0), op(262144, 1), op(262144, 524288), op(262144, 524289), op(262144, 262144), op(262144, 262145), op(262144, 786432), op(262144, 786433), 
		op(262145, 0), op(262145, 1), op(262145, 524288), op(262145, 524289), op(262145, 262144), op(262145, 262145), op(262145, 786432), op(262145, 786433), 
		op(786432, 0), op(786432, 1), op(786432, 524288), op(786432, 524289), op(786432, 262144), op(786432, 262145), op(786432, 786432), op(786432, 786433), 
		op(786433, 0), op(786433, 1), op(786433, 524288), op(786433, 524289), op(786433, 262144), op(786433, 262145), op(786433, 786432), op(786433, 786433)
	];
}
def doFolded() -> Array<u20> {
	return  [
		u20.!(0) - u20.!(0), u20.!(0) - u20.!(1), u20.!(0) - u20.!(524288), u20.!(0) - u20.!(524289), u20.!(0) - u20.!(262144), u20.!(0) - u20.!(262145), u20.!(0) - u20.!(786432), u20.!(0) - u20.!(786433), 
		u20.!(1) - u20.!(0), u20.!(1) - u20.!(1), u20.!(1) - u20.!(524288), u20.!(1) - u20.!(524289), u20.!(1) - u20.!(262144), u20.!(1) - u20.!(262145), u20.!(1) - u20.!(786432), u20.!(1) - u20.!(786433), 
		u20.!(524288) - u20.!(0), u20.!(524288) - u20.!(1), u20.!(524288) - u20.!(524288), u20.!(524288) - u20.!(524289), u20.!(524288) - u20.!(262144), u20.!(524288) - u20.!(262145), u20.!(524288) - u20.!(786432), u20.!(524288) - u20.!(786433), 
		u20.!(524289) - u20.!(0), u20.!(524289) - u20.!(1), u20.!(524289) - u20.!(524288), u20.!(524289) - u20.!(524289), u20.!(524289) - u20.!(262144), u20.!(524289) - u20.!(262145), u20.!(524289) - u20.!(786432), u20.!(524289) - u20.!(786433), 
		u20.!(262144) - u20.!(0), u20.!(262144) - u20.!(1), u20.!(262144) - u20.!(524288), u20.!(262144) - u20.!(524289), u20.!(262144) - u20.!(262144), u20.!(262144) - u20.!(262145), u20.!(262144) - u20.!(786432), u20.!(262144) - u20.!(786433), 
		u20.!(262145) - u20.!(0), u20.!(262145) - u20.!(1), u20.!(262145) - u20.!(524288), u20.!(262145) - u20.!(524289), u20.!(262145) - u20.!(262144), u20.!(262145) - u20.!(262145), u20.!(262145) - u20.!(786432), u20.!(262145) - u20.!(786433), 
		u20.!(786432) - u20.!(0), u20.!(786432) - u20.!(1), u20.!(786432) - u20.!(524288), u20.!(786432) - u20.!(524289), u20.!(786432) - u20.!(262144), u20.!(786432) - u20.!(262145), u20.!(786432) - u20.!(786432), u20.!(786432) - u20.!(786433), 
		u20.!(786433) - u20.!(0), u20.!(786433) - u20.!(1), u20.!(786433) - u20.!(524288), u20.!(786433) - u20.!(524289), u20.!(786433) - u20.!(262144), u20.!(786433) - u20.!(262145), u20.!(786433) - u20.!(786432), u20.!(786433) - u20.!(786433)
	];
}
