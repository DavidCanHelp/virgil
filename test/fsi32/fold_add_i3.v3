//@execute = 4
def a = doOp();
def b = doFolded();
def main() -> int {
	def c = doOp();
	def d = doFolded();
	for (i = 0; i < a.length; i++) if (a(i) != b(i) || a(i) != c(i) || a(i) != d(i)) return -20 - i;
	return 4;
}
def op(x: int, y: int) -> i3 {
	return i3.!(x) + i3.!(y);
}
def doOp() -> Array<i3> {
	return  [
		op(0, 0), op(0, 1), op(0, 4), op(0, 5), op(0, 2), op(0, 3), op(0, 6), op(0, 7), 
		op(1, 0), op(1, 1), op(1, 4), op(1, 5), op(1, 2), op(1, 3), op(1, 6), op(1, 7), 
		op(4, 0), op(4, 1), op(4, 4), op(4, 5), op(4, 2), op(4, 3), op(4, 6), op(4, 7), 
		op(5, 0), op(5, 1), op(5, 4), op(5, 5), op(5, 2), op(5, 3), op(5, 6), op(5, 7), 
		op(2, 0), op(2, 1), op(2, 4), op(2, 5), op(2, 2), op(2, 3), op(2, 6), op(2, 7), 
		op(3, 0), op(3, 1), op(3, 4), op(3, 5), op(3, 2), op(3, 3), op(3, 6), op(3, 7), 
		op(6, 0), op(6, 1), op(6, 4), op(6, 5), op(6, 2), op(6, 3), op(6, 6), op(6, 7), 
		op(7, 0), op(7, 1), op(7, 4), op(7, 5), op(7, 2), op(7, 3), op(7, 6), op(7, 7)
	];
}
def doFolded() -> Array<i3> {
	return  [
		i3.!(0) + i3.!(0), i3.!(0) + i3.!(1), i3.!(0) + i3.!(4), i3.!(0) + i3.!(5), i3.!(0) + i3.!(2), i3.!(0) + i3.!(3), i3.!(0) + i3.!(6), i3.!(0) + i3.!(7), 
		i3.!(1) + i3.!(0), i3.!(1) + i3.!(1), i3.!(1) + i3.!(4), i3.!(1) + i3.!(5), i3.!(1) + i3.!(2), i3.!(1) + i3.!(3), i3.!(1) + i3.!(6), i3.!(1) + i3.!(7), 
		i3.!(4) + i3.!(0), i3.!(4) + i3.!(1), i3.!(4) + i3.!(4), i3.!(4) + i3.!(5), i3.!(4) + i3.!(2), i3.!(4) + i3.!(3), i3.!(4) + i3.!(6), i3.!(4) + i3.!(7), 
		i3.!(5) + i3.!(0), i3.!(5) + i3.!(1), i3.!(5) + i3.!(4), i3.!(5) + i3.!(5), i3.!(5) + i3.!(2), i3.!(5) + i3.!(3), i3.!(5) + i3.!(6), i3.!(5) + i3.!(7), 
		i3.!(2) + i3.!(0), i3.!(2) + i3.!(1), i3.!(2) + i3.!(4), i3.!(2) + i3.!(5), i3.!(2) + i3.!(2), i3.!(2) + i3.!(3), i3.!(2) + i3.!(6), i3.!(2) + i3.!(7), 
		i3.!(3) + i3.!(0), i3.!(3) + i3.!(1), i3.!(3) + i3.!(4), i3.!(3) + i3.!(5), i3.!(3) + i3.!(2), i3.!(3) + i3.!(3), i3.!(3) + i3.!(6), i3.!(3) + i3.!(7), 
		i3.!(6) + i3.!(0), i3.!(6) + i3.!(1), i3.!(6) + i3.!(4), i3.!(6) + i3.!(5), i3.!(6) + i3.!(2), i3.!(6) + i3.!(3), i3.!(6) + i3.!(6), i3.!(6) + i3.!(7), 
		i3.!(7) + i3.!(0), i3.!(7) + i3.!(1), i3.!(7) + i3.!(4), i3.!(7) + i3.!(5), i3.!(7) + i3.!(2), i3.!(7) + i3.!(3), i3.!(7) + i3.!(6), i3.!(7) + i3.!(7)
	];
}
