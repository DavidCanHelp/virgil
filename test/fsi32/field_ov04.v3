//@execute = 111
var failures = 111;
def main() -> int {
	failures = 111;

	test(u1.view<int>);
	test(u2.view<int>);
	test(u3.view<int>);
	test(u4.view<int>);
	test(u5.view<int>);
	test(u6.view<int>);
	test(u7.view<int>);
	test(u8.view<int>);
	test(u9.view<int>);

	test(u10.view<int>);
	test(u11.view<int>);
	test(u12.view<int>);
	test(u13.view<int>);
	test(u14.view<int>);
	test(u15.view<int>);
	test(u16.view<int>);
	test(u17.view<int>);
	test(u18.view<int>);
	test(u19.view<int>);

	test(u20.view<int>);
	test(u21.view<int>);
	test(u22.view<int>);
	test(u23.view<int>);
	test(u24.view<int>);
	test(u25.view<int>);
	test(u26.view<int>);
	test(u27.view<int>);
	test(u28.view<int>);
	test(u29.view<int>);

	test(u30.view<int>);
	test(u31.view<int>);
	test(u32.view<int>);

	return failures;
}

class field_ov04c<T> {
	var a: (T, T, T);
}

def vals = [int.min, -1, 0, 1, int.max];
def test<T>(f: int -> T) {
	var o = field_ov04c<T>.new();
	for (v in vals) {
		o.a = (f(v - 0x01020304), f(v), f(v + 0x01020304));

		if (o.a.0 != f(v - 0x01020304)) failures++;
		if (o.a.1 != f(v)) failures++;
		if (o.a.2 != f(v + 0x01020304)) failures++;
	}
}
