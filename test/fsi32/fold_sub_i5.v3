//@execute = 6
def a = doOp();
def b = doFolded();
def main() -> int {
	def c = doOp();
	def d = doFolded();
	for (i = 0; i < a.length; i++) if (a[i] != b[i] || a[i] != c[i] || a[i] != d[i]) return -20 - i;
	return 6;
}
def op(x: int, y: int) -> i5 {
	return i5.view(x) - i5.view(y);
}
def doOp() -> Array<i5> {
	return  [
		op(0, 0), op(0, 1), op(0, 16), op(0, 17), op(0, 8), op(0, 9), op(0, 24), op(0, 25), 
		op(1, 0), op(1, 1), op(1, 16), op(1, 17), op(1, 8), op(1, 9), op(1, 24), op(1, 25), 
		op(16, 0), op(16, 1), op(16, 16), op(16, 17), op(16, 8), op(16, 9), op(16, 24), op(16, 25), 
		op(17, 0), op(17, 1), op(17, 16), op(17, 17), op(17, 8), op(17, 9), op(17, 24), op(17, 25), 
		op(8, 0), op(8, 1), op(8, 16), op(8, 17), op(8, 8), op(8, 9), op(8, 24), op(8, 25), 
		op(9, 0), op(9, 1), op(9, 16), op(9, 17), op(9, 8), op(9, 9), op(9, 24), op(9, 25), 
		op(24, 0), op(24, 1), op(24, 16), op(24, 17), op(24, 8), op(24, 9), op(24, 24), op(24, 25), 
		op(25, 0), op(25, 1), op(25, 16), op(25, 17), op(25, 8), op(25, 9), op(25, 24), op(25, 25)
	];
}
def doFolded() -> Array<i5> {
	return  [
		i5.view(0) - i5.view(0), i5.view(0) - i5.view(1), i5.view(0) - i5.view(16), i5.view(0) - i5.view(17), i5.view(0) - i5.view(8), i5.view(0) - i5.view(9), i5.view(0) - i5.view(24), i5.view(0) - i5.view(25), 
		i5.view(1) - i5.view(0), i5.view(1) - i5.view(1), i5.view(1) - i5.view(16), i5.view(1) - i5.view(17), i5.view(1) - i5.view(8), i5.view(1) - i5.view(9), i5.view(1) - i5.view(24), i5.view(1) - i5.view(25), 
		i5.view(16) - i5.view(0), i5.view(16) - i5.view(1), i5.view(16) - i5.view(16), i5.view(16) - i5.view(17), i5.view(16) - i5.view(8), i5.view(16) - i5.view(9), i5.view(16) - i5.view(24), i5.view(16) - i5.view(25), 
		i5.view(17) - i5.view(0), i5.view(17) - i5.view(1), i5.view(17) - i5.view(16), i5.view(17) - i5.view(17), i5.view(17) - i5.view(8), i5.view(17) - i5.view(9), i5.view(17) - i5.view(24), i5.view(17) - i5.view(25), 
		i5.view(8) - i5.view(0), i5.view(8) - i5.view(1), i5.view(8) - i5.view(16), i5.view(8) - i5.view(17), i5.view(8) - i5.view(8), i5.view(8) - i5.view(9), i5.view(8) - i5.view(24), i5.view(8) - i5.view(25), 
		i5.view(9) - i5.view(0), i5.view(9) - i5.view(1), i5.view(9) - i5.view(16), i5.view(9) - i5.view(17), i5.view(9) - i5.view(8), i5.view(9) - i5.view(9), i5.view(9) - i5.view(24), i5.view(9) - i5.view(25), 
		i5.view(24) - i5.view(0), i5.view(24) - i5.view(1), i5.view(24) - i5.view(16), i5.view(24) - i5.view(17), i5.view(24) - i5.view(8), i5.view(24) - i5.view(9), i5.view(24) - i5.view(24), i5.view(24) - i5.view(25), 
		i5.view(25) - i5.view(0), i5.view(25) - i5.view(1), i5.view(25) - i5.view(16), i5.view(25) - i5.view(17), i5.view(25) - i5.view(8), i5.view(25) - i5.view(9), i5.view(25) - i5.view(24), i5.view(25) - i5.view(25)
	];
}
