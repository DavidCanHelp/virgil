//@execute = 18
def a = doOp();
def b = doFolded();
def main() -> int {
	def c = doOp();
	def d = doFolded();
	for (i = 0; i < a.length; i++) if (a[i] != b[i] || a[i] != c[i] || a[i] != d[i]) return -20 - i;
	return 18;
}
def op(x: int, y: int) -> u17 {
	return u17.view(x) * u17.view(y);
}
def doOp() -> Array<u17> {
	return  [
		op(0, 0), op(0, 1), op(0, 65536), op(0, 65537), op(0, 32768), op(0, 32769), op(0, 98304), op(0, 98305), 
		op(1, 0), op(1, 1), op(1, 65536), op(1, 65537), op(1, 32768), op(1, 32769), op(1, 98304), op(1, 98305), 
		op(65536, 0), op(65536, 1), op(65536, 65536), op(65536, 65537), op(65536, 32768), op(65536, 32769), op(65536, 98304), op(65536, 98305), 
		op(65537, 0), op(65537, 1), op(65537, 65536), op(65537, 65537), op(65537, 32768), op(65537, 32769), op(65537, 98304), op(65537, 98305), 
		op(32768, 0), op(32768, 1), op(32768, 65536), op(32768, 65537), op(32768, 32768), op(32768, 32769), op(32768, 98304), op(32768, 98305), 
		op(32769, 0), op(32769, 1), op(32769, 65536), op(32769, 65537), op(32769, 32768), op(32769, 32769), op(32769, 98304), op(32769, 98305), 
		op(98304, 0), op(98304, 1), op(98304, 65536), op(98304, 65537), op(98304, 32768), op(98304, 32769), op(98304, 98304), op(98304, 98305), 
		op(98305, 0), op(98305, 1), op(98305, 65536), op(98305, 65537), op(98305, 32768), op(98305, 32769), op(98305, 98304), op(98305, 98305)
	];
}
def doFolded() -> Array<u17> {
	return  [
		u17.view(0) * u17.view(0), u17.view(0) * u17.view(1), u17.view(0) * u17.view(65536), u17.view(0) * u17.view(65537), u17.view(0) * u17.view(32768), u17.view(0) * u17.view(32769), u17.view(0) * u17.view(98304), u17.view(0) * u17.view(98305), 
		u17.view(1) * u17.view(0), u17.view(1) * u17.view(1), u17.view(1) * u17.view(65536), u17.view(1) * u17.view(65537), u17.view(1) * u17.view(32768), u17.view(1) * u17.view(32769), u17.view(1) * u17.view(98304), u17.view(1) * u17.view(98305), 
		u17.view(65536) * u17.view(0), u17.view(65536) * u17.view(1), u17.view(65536) * u17.view(65536), u17.view(65536) * u17.view(65537), u17.view(65536) * u17.view(32768), u17.view(65536) * u17.view(32769), u17.view(65536) * u17.view(98304), u17.view(65536) * u17.view(98305), 
		u17.view(65537) * u17.view(0), u17.view(65537) * u17.view(1), u17.view(65537) * u17.view(65536), u17.view(65537) * u17.view(65537), u17.view(65537) * u17.view(32768), u17.view(65537) * u17.view(32769), u17.view(65537) * u17.view(98304), u17.view(65537) * u17.view(98305), 
		u17.view(32768) * u17.view(0), u17.view(32768) * u17.view(1), u17.view(32768) * u17.view(65536), u17.view(32768) * u17.view(65537), u17.view(32768) * u17.view(32768), u17.view(32768) * u17.view(32769), u17.view(32768) * u17.view(98304), u17.view(32768) * u17.view(98305), 
		u17.view(32769) * u17.view(0), u17.view(32769) * u17.view(1), u17.view(32769) * u17.view(65536), u17.view(32769) * u17.view(65537), u17.view(32769) * u17.view(32768), u17.view(32769) * u17.view(32769), u17.view(32769) * u17.view(98304), u17.view(32769) * u17.view(98305), 
		u17.view(98304) * u17.view(0), u17.view(98304) * u17.view(1), u17.view(98304) * u17.view(65536), u17.view(98304) * u17.view(65537), u17.view(98304) * u17.view(32768), u17.view(98304) * u17.view(32769), u17.view(98304) * u17.view(98304), u17.view(98304) * u17.view(98305), 
		u17.view(98305) * u17.view(0), u17.view(98305) * u17.view(1), u17.view(98305) * u17.view(65536), u17.view(98305) * u17.view(65537), u17.view(98305) * u17.view(32768), u17.view(98305) * u17.view(32769), u17.view(98305) * u17.view(98304), u17.view(98305) * u17.view(98305)
	];
}
