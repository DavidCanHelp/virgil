//@execute = 177
//@heap-size=12000
def values = [0xFFFFFFFF, 0xAABBCCDD, 0x77665544, 0x01020304];
def main() -> int {
	run(u1.view<int>);
	run(u2.view<int>);
	run(u3.view<int>);
	run(u4.view<int>);
	run(u5.view<int>);
	run(u6.view<int>);
	run(u7.view<int>);
	run(u8.view<int>);
	run(u9.view<int>);

	run(u10.view<int>);
	run(u11.view<int>);
	run(u12.view<int>);
	run(u13.view<int>);
	run(u14.view<int>);
	run(u15.view<int>);
	run(u16.view<int>);
	run(u17.view<int>);
	run(u18.view<int>);
	run(u19.view<int>);

	run(u20.view<int>);
	run(u21.view<int>);
	run(u22.view<int>);
	run(u23.view<int>);
	run(u24.view<int>);
	run(u25.view<int>);
	run(u26.view<int>);
	run(u27.view<int>);
	run(u28.view<int>);
	run(u29.view<int>);

	run(u30.view<int>);
	run(u31.view<int>);
	run(u32.view<int>);

	return 177;
}

def run<T>(f: int -> T) {
	var o = mem_iN<T>.new(f);
	for (v in values) {
		o.test(v);
	}

	var t = mem_iN<(T, T)>.new(enc2(_, f));
	for (v in values) {
		t.test(v);
	}
}

def enc2<T>(v: int, f: int -> T) -> (T, T) {
	return (f(v), f(v));
}

class mem_iN<T>(enc: int -> T) {
	def a = Array<T>.new(2);
	var f: T;
	var g: int;
	var h: T;
	var i: int;
	def test(v: int) {
		var e = enc(v), z = enc(0);

		a[0] = e;
		assert(e, e);
		assert(a[0], e);

		a[1] = z;
		assert(e, e);
		assert(a[0], e);
		assert(a[1], z);

		a[1] = e;
		assert(e, e);
		assert(a[0], e);
		assert(a[1], e);

		f = e;
		assert(e, e);
		assert(f, e);

		g = 0;
		assert(e, e);
		assert(f, e);
		assert(g, 0);

		h = e;
		assert(e, e);
		assert(f, e);
		assert(g, 0);
		assert(h, e);

		f = z;
		assert(e, e);
		assert(f, z);

		g = 0;
		assert(e, e);
		assert(f, z);
		assert(g, 0);

		h = z;
		assert(e, e);
		assert(f, z);
		assert(g, 0);
		assert(h, z);
	}

	def assert<V>(x: V, y: V) {
		if (x != y) {
			var none: T;
			a[0] = none;
			f = none;
			g = 0;
			h = none;
			i = 0;
			var k = 1 / 0;
		}
	}

}
