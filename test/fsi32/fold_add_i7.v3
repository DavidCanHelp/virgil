//@execute = 8
def a = doOp();
def b = doFolded();
def main() -> int {
	def c = doOp();
	def d = doFolded();
	for (i = 0; i < a.length; i++) if (a[i] != b[i] || a[i] != c[i] || a[i] != d[i]) return -20 - i;
	return 8;
}
def op(x: int, y: int) -> i7 {
	return i7.!(x) + i7.!(y);
}
def doOp() -> Array<i7> {
	return  [
		op(0, 0), op(0, 1), op(0, 64), op(0, 65), op(0, 32), op(0, 33), op(0, 96), op(0, 97), 
		op(1, 0), op(1, 1), op(1, 64), op(1, 65), op(1, 32), op(1, 33), op(1, 96), op(1, 97), 
		op(64, 0), op(64, 1), op(64, 64), op(64, 65), op(64, 32), op(64, 33), op(64, 96), op(64, 97), 
		op(65, 0), op(65, 1), op(65, 64), op(65, 65), op(65, 32), op(65, 33), op(65, 96), op(65, 97), 
		op(32, 0), op(32, 1), op(32, 64), op(32, 65), op(32, 32), op(32, 33), op(32, 96), op(32, 97), 
		op(33, 0), op(33, 1), op(33, 64), op(33, 65), op(33, 32), op(33, 33), op(33, 96), op(33, 97), 
		op(96, 0), op(96, 1), op(96, 64), op(96, 65), op(96, 32), op(96, 33), op(96, 96), op(96, 97), 
		op(97, 0), op(97, 1), op(97, 64), op(97, 65), op(97, 32), op(97, 33), op(97, 96), op(97, 97)
	];
}
def doFolded() -> Array<i7> {
	return  [
		i7.!(0) + i7.!(0), i7.!(0) + i7.!(1), i7.!(0) + i7.!(64), i7.!(0) + i7.!(65), i7.!(0) + i7.!(32), i7.!(0) + i7.!(33), i7.!(0) + i7.!(96), i7.!(0) + i7.!(97), 
		i7.!(1) + i7.!(0), i7.!(1) + i7.!(1), i7.!(1) + i7.!(64), i7.!(1) + i7.!(65), i7.!(1) + i7.!(32), i7.!(1) + i7.!(33), i7.!(1) + i7.!(96), i7.!(1) + i7.!(97), 
		i7.!(64) + i7.!(0), i7.!(64) + i7.!(1), i7.!(64) + i7.!(64), i7.!(64) + i7.!(65), i7.!(64) + i7.!(32), i7.!(64) + i7.!(33), i7.!(64) + i7.!(96), i7.!(64) + i7.!(97), 
		i7.!(65) + i7.!(0), i7.!(65) + i7.!(1), i7.!(65) + i7.!(64), i7.!(65) + i7.!(65), i7.!(65) + i7.!(32), i7.!(65) + i7.!(33), i7.!(65) + i7.!(96), i7.!(65) + i7.!(97), 
		i7.!(32) + i7.!(0), i7.!(32) + i7.!(1), i7.!(32) + i7.!(64), i7.!(32) + i7.!(65), i7.!(32) + i7.!(32), i7.!(32) + i7.!(33), i7.!(32) + i7.!(96), i7.!(32) + i7.!(97), 
		i7.!(33) + i7.!(0), i7.!(33) + i7.!(1), i7.!(33) + i7.!(64), i7.!(33) + i7.!(65), i7.!(33) + i7.!(32), i7.!(33) + i7.!(33), i7.!(33) + i7.!(96), i7.!(33) + i7.!(97), 
		i7.!(96) + i7.!(0), i7.!(96) + i7.!(1), i7.!(96) + i7.!(64), i7.!(96) + i7.!(65), i7.!(96) + i7.!(32), i7.!(96) + i7.!(33), i7.!(96) + i7.!(96), i7.!(96) + i7.!(97), 
		i7.!(97) + i7.!(0), i7.!(97) + i7.!(1), i7.!(97) + i7.!(64), i7.!(97) + i7.!(65), i7.!(97) + i7.!(32), i7.!(97) + i7.!(33), i7.!(97) + i7.!(96), i7.!(97) + i7.!(97)
	];
}
