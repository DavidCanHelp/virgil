// System calls needed by this program
component OS {
	def open(path: string) -> int {
		return System.fileOpen(path, true);
	}
	def close(fd: int) {
		return System.fileClose(fd);
	}
	def read(fd: int, buf: Array<byte>, len: int) -> int {
		var c = System.fileRead(fd), i = 0;
		while (c != 0 && i < len) {
			buf(i++) = c;
			c = System.fileRead(fd);
		}
		return i;
	}
	def dup2(fda: int, fdb: int) -> int;
	def pipe(buf: Array<int>) -> int;
	def wait(pid: int) -> int;
	def kill(pid: int, signo: int) -> int;
	def sleep(seconds: int);
	def chmod(path: string, mode: int) -> int;
	def exec(path: string, args: Array<string>) -> int;

	def isSignaled(waitstatus: int) -> bool;
	def isExited(waitstatus: int) -> bool;
	def isStopped(waitstatus: int) -> bool;
	def termSignal(waitstatus: int) -> int;
}
