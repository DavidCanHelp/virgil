//@seman
enum InfixFlag { LEGAL_MEMBER, LEGAL_COMPOUND, LEGAL_BINOP }
def M = InfixFlag.LEGAL_MEMBER, C = InfixFlag.LEGAL_COMPOUND, B = InfixFlag.LEGAL_BINOP;

enum Infix(op: string, prec: byte, flags: InfixFlag.set) {
	Equal	("==",   6, M),
	NotEqual("!=",   6, M),
	Add	("+",   13, M|C),
	Sub	("-",   13, M|C),
	Mul	("*",   14, M|C),
	Div	("/",   14, M|C),
	Mod	("%",   14, M|C),
	And	("&",    5, M|C),
	Or	("|",    3, M|C),
	AndAnd	("&&",   2, M|C),
	OrOr	("||",   1, M|C),
	Xor	("^",    4, M|C),
	Lt	("<",    8, M|C),
	Gt	(">",    8, M|C),
	Lteq	("<=",   8, M),
	Gteq	(">=",   8, M),
	QShl	("<<",  12, M|C),
	QSar	(">>",  12, M|C),
	QShr	(">>>", 12, M|C)
}

def test(x: Infix) {
	if (x.op == "==") ;
	if (x.prec == 9) ;
	if (x.flags.LEGAL_MEMBER) ;
	if (x.flags.LEGAL_COMPOUND) ;
	if (x.flags.LEGAL_BINOP) ;
}
