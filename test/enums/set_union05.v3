//@execute 0=1; 1=1; 2=1; 3=11
enum E {
	A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, Aa, Ab, Ac, Ad, Ae, Af,
	C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, Ca, Cb, Cc, Cd, Ce, Cf,
	D0, D1, D2, D3, D4, D5, D6, D7, D8, D9, Da, Db, Dc, Dd, De, Df,
	B0, B1, B2, B3, B4, B5, B6, B7, B8, B9, Ba, Bb, Bc, Bd, Be, Bf
}
def U = E.set.|;
def none: E.set;
def SM: E.set = E.A0;
def SN: E.set = E.B1;
def SO: E.set = E.Bf;
def main(a: int) -> int {
	if (a == 0) return check([
		U(E.Bf, E.B1),
		U(none, U(SN, SO)),
		U(U(SN, none), SO),
		U(none, U(SN, SO))
	]);
	if (a == 1) return check([
		U(E.B1, E.A0),
		U(none, U(SN, SM)),
		U(SN, U(SM, none)),
		U(SN, U(none, SM))
	]);
	if (a == 2) return check([
		U(E.A0, E.Bf),
		U(none, U(SM, SO)),
		U(SM, U(none, SO)),
		U(SM, U(SO, none))
	]);
	return 11;
}
def check(a: Array<E.set>) -> int {
	for (x in a) for (y in a) {
		if (x != y) return 1 / 0;
	}
	return 1;
}