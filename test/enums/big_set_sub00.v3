//@execute = 182
enum E {
	A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, Aa, Ab, Ac, Ad, Ae, Af,
	B0, B1, B2, B3, B4, B5, B6, B7, B8, B9, Ba, Bb, Bc, Bd, Be, Bf,
	C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, Ca, Cb, Cc, Cd, Ce, Cf,
	D0, D1, D2, D3, D4, D5, D6, D7, D8, D9, Da, Db, Dc, Dd, De, Df
}
def main() -> int {
	checks();
	return 182;
}
def checks() {
	var none: E.set;
	var a: E.set = E.A0, b: E.set = E.B1, c: E.set = E.C4, d: E.set = E.D7;
	var all = E.set.all;

	check(a, all, true);
	check(b, all, true);
	check(c, all, true);
	check(d, all, true);

	check(a|b, all, true);
	check(a|c, all, true);
	check(a|d, all, true);

	check(b|d, all, true);
	check(c|d, all, true);

	check(a|b|c, all, true);
	check(a|b|d, all, true);
	check(a|c|d, all, true);

	check(all, all, false);

	check(a, a, false);
	check(b, b, false);
	check(c, c, false);
	check(d, d, false);

	check(a, a|b, true);
	check(b, a|b, true);

	check(a|b, a|b, false);
	check(b|a, a|b, false);

	check(c|b, a|b, false);
	check(b|c, a|b, false);

	check(all, a, false);
	check(all, b, false);

	check(a, a|b|c, true);
	check(b, a|b|c, true);

	check(a|b, a|b|c, true);
	check(b|a, a|b|c, true);

	check(a|b|c, a|b|c, false);
	check(a|b|c, a|b|d, false);

	check(a|b|c, a|b, false);
	check(a|b|c, a|c, false);
}
def check(a: E.set, b: E.set, expect: bool) -> int {
	if (a < b != expect) return 1/0;
	if (b > a != expect) return 1/0;
	return 1;
}
