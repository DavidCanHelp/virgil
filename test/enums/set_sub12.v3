//@execute 0=0; 1=1; 2=2; 3=3; 4=4; 5=5
enum E {
	A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, Aa, Ab, Ac, Ad, Ae, Af,
	C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, Ca, Cb, Cc, Cd, Ce, Cf,
	D0, D1, D2, D3, D4, D5, D6, D7, D8, D9, Da, Db, Dc, Dd, De, Df,
	B0, B1, B2, B3, B4, B5, B6, B7, B8, B9, Ba, Bb, Bc, Bd, Be, Bf
}
def sample = [0xFFEE001122334455u, 0x0123456789abcdefu, 0x1u, 0x8000000000000000u];
def elems = [E.A0, E.Af, E.Cf, E.Df, E.B3, E.Bf];
def main(a: int) -> int {
	for (x in sample) {
		var set = toSet(x);
		var x = check(set, elems(a));
		if (x < 0) return x;
	}
	return a;
}
def toSet(x: u64) -> E.set {
	var set: E.set;
	for (e in E.set.all) {
		if ((x & (1UL << e.tag)) != 0) set |= e;
	}
	return set;
}
def sub = E.set.-;
def check(set: E.set, e: E) -> int {
	var uni = set | e;
	var sub = sub(set, e);
	if (uni == set && sub == set) return -112;
	if (uni != set && sub != set) return -113;
	if ((sub & e) == e) return -114;
	return e.tag;
}
