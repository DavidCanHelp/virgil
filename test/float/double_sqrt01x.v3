//@execute = 97
def cases: Array<(double, double, bool)> = [
	(-1e+2000d, double.nan, true),
	(double.nan, double.nan, true),
	(-1.34E18d, double.nan, true),
	(-2097151.875d, double.nan, true),
	(-4194303.75d, double.nan, true),
	(-8388607.5d, double.nan, true),
	(-1.6777215E7d, double.nan, true),
	(-3.355443E7d, double.nan, true),
	(-6.710886E7d, double.nan, true),
	(-1.3421772E8d, double.nan, true),
	(-3.9d, double.nan, true),
	(-1.5d, double.nan, true),
	(-1.25d, double.nan, true),
	(-1.0d, double.nan, true),
	(-1.0E-40d, double.nan, true),
	(-0.125d, double.nan, true),
	(-1.0E-319d, double.nan, true),
	(0.0d, 0.0d, false),
	(0.0d, 0.0d, false),
	(0.625d, 0.7905694150420949d, false),
	(1.0E-320d, 9.99994433575849E-161d, false),
	(1.0E-41d, 3.1622776601683792E-21d, false),
	(2.25d, 1.5d, false),
	(5.75d, 2.3979157616563596d, false),
	(2097151.875d, 1448.1546447116757d, false),
	(4194303.75d, 2047.9999389648428d, false),
	(8388607.5d, 2896.3092894233514d, false),
	(1.6777215E7d, 4095.9998779296857d, false),
	(3.355443E7d, 5792.618578846703d, false),
	(6.710886E7d, 8191.999755859371d, false),
	(1.3421772E8d, 11585.237157693406d, false),
	(13455.16d, 115.99637925383706d, false),
	(1.24E19d, 3.521363372331802E9d, false),
	(1e+2000d, 1e+2000d, false),
	(0, 0, false)

];
def main() -> int {
	for (i < cases.length) {
		var t = cases[i];
		var result = double.sqrt(t.0);
		if (t.2) {  // NaN expected
			if (result == result) return -3 - i;
		} else {
			var expected = t.1;
			if (result != expected) return -3 - i;
		}
	}
	return 97;
}

