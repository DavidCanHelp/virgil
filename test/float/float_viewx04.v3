//@execute = 42
def x: Array<(float, u32)> = [
	(-33554430f, 0xCBFFFFFF),
	(-33554431f, 0xCC000000),
	(-33554432f, 0xCC000000),
	(-33554433f, 0xCC000000),
	(-33554434f, 0xCC000000),
	(-33554435f, 0xCC000001),
	(-335544331f, 0xCDA00000),
	(-335544342f, 0xCDA00001),
	(-335544353f, 0xCDA00001),
	(-3355443316f, 0xCF480000),
	(-3355443427f, 0xCF480001),
	(-3355443538f, 0xCF480001),
	(-3.355443316e9f, 0xCF480000),
	(-3.355443427e9f, 0xCF480001),
	(-3.355443538e9f, 0xCF480001),
	(33554433160f, 0x50FA0001),
	(33554434272f, 0x50FA0001),
	(33554435384f, 0x50FA0002),
	(33e12f, 0x55F01B4A),
	(44e13f, 0x57C816BE),
	(55e14f, 0x599C51C4),
	(66e15f, 0x5B6A7AA6),
	(77e16f, 0x5D2AF96F),
	(88e17f, 0x5EF43FC3),
	(99e18f, 0x60ABBCD5),
	(3.3554433160e10f, 0x50FA0001),
	(33.554433160e9f, 0x50FA0001),
	(335.54433160e8f, 0x50FA0001),
	(3355.4433160e7f, 0x50FA0001),
	(33554.433160e6f, 0x50FA0001),
	(335544.33160e5f, 0x50FA0001),
	(3355443.3160e4f, 0x50FA0001),
	(33554433.160e3f, 0x50FA0001),
	(335544331.60e2f, 0x50FA0001),
	(3355443316.0e1f, 0x50FA0001),
	(3.3e13f, 0x55F01B4A),
	(4.4e14f, 0x57C816BE),
	(5.5e15f, 0x599C51C4),
	(6.6e16f, 0x5B6A7AA6),
	(7.7e17f, 0x5D2AF96F),
	(8.8e18f, 0x5EF43FC3),
	(9.9e19f, 0x60ABBCD5),
	(3000000000000000000000000000000f, 0x72177617),
	(3e30f, 0x72177617),
	(7e20f, 0x6217C9CE),
	(7e21f, 0x63BDBC42),
	(7e22f, 0x656D2B52),
	(7e23f, 0x67143B13),
	(7e24f, 0x68B949D8),
	(7e25f, 0x6A679C4E),
	(7e26f, 0x6C10C1B1),
	(7e27f, 0x6DB4F21D),
	(7e28f, 0x6F622EA5),
	(7e29f, 0x710D5D27),
	(7e30f, 0x72B0B471),
	(7e31f, 0x745CE18D),
	(7e32f, 0x760A0CF8),
	(7e33f, 0x77AC9036),
	(7e34f, 0x7957B443),
	(7e35f, 0x7B06D0AA),
	(7e36f, 0x7CA884D5),
	(7e37f, 0x7E52A60A),
	(7e38f, 0x7F800000),
	(7e39f, 0x7F800000),
	(7e40f, 0x7F800000),
	(7e41f, 0x7F800000),
	(7e42f, 0x7F800000),
	(7.0e20f, 0x6217C9CE),
	(7.00e21f, 0x63BDBC42),
	(7.000e22f, 0x656D2B52),
	(7.0000e23f, 0x67143B13),
	(71234567890f, 0x5184AF4A),
	(712345678901234567890f, 0x621A7721),
	(7123456789012345678901234567890f, 0x72B3D243),
	(71234567890123456789012345678901234567890f, 0x7F800000),
	(0.1e1f, 0x3F800000),
	(0.01e2f, 0x3F800000),
	(0.001e3f, 0x3F800000),
	(0.0001e4f, 0x3F800000),
	(0.00001e5f, 0x3F800000),
	(0.000001e6f, 0x3F800000),
	(0e-0f, 0x00000000),
	(0e-2f, 0x00000000),
	(0e-32f, 0x00000000),
	(-0e-0f, 0x80000000),
	(-0e-32f, 0x80000000),
	(0.0e-0f, 0x00000000),
	(0.00e-2f, 0x00000000),
	(0.000e-32f, 0x00000000),
	(-0.0000e-0f, 0x80000000),
	(-0.00000e-32f, 0x80000000)
];
def main() -> int {
	for (i < x.length) {
		var t = x[i];
		if (t.0 != float.view(t.1)) return -200 - i;
	}
	return 42;
}
