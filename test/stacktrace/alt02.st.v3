def main() { m__n(2); }
//@execute 0=1; 1=2; 2=!BoundsCheckException
type X {
	case None;
	case IsY(y: Y);
}
type Y {
	case None;
	case IsX(x: X);
}
def eq<T>(x: T, a: Array<T>) -> int {
	var res = 0;
	for (i = 0; i < a.length; i++) {
		if (x == a[i]) res = res | (1 << byte.!(i));
	}
	return res;
}
def m__n(a: int) -> int {
	def xn = X.None, yn = Y.None;
	def xy = X.IsY(yn), yx = Y.IsX(xn);
	def xa = [xn, xy];
	return eq(xa[a], xa);
}
