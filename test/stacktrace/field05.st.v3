def main() { m__n(3); }
//@execute 0='8'; 1='x'; 2='\x00'; 3=!BoundsCheckException
type F {
	case M(x: byte);
	case N(x: byte);
	def m() -> byte {
		match (this) {
			M(y) => return y;
			N(y) => return y;
		}
	}
}
def d: F;
def x = [F.M('8'), F.N('x'), d];
def m__n(a: int) -> byte {
	return x[a].m();
}
