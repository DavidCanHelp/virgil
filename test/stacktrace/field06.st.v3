def main() { m__n(3); }
//@execute 0='8'; 1='*'; 2='\x00'; 3=!BoundsCheckException
type F<T> {
	case M(x: T);
	case N(x: T);
	def m() -> T {
		match (this) {
			M(y) => return y;
			N(y) => return y;
		}
	}
}
def d: F<byte>;
def x = [F.M('8'), F.N('*'), d];
def m__n(a: int) -> byte {
	return x[a].m();
}
