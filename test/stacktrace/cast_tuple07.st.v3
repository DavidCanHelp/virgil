def main() { cast_tuple07.main(0, 1); }
//@execute (0,0)=13; (0,1)=!TypeCheckException; (0,2)=13; (1,0)=14; (1,1)=14; (1,2)=14
class cast_tuple07a { }
class cast_tuple07b extends cast_tuple07a { }
component cast_tuple07 {
	var x: cast_tuple07a;
	var y: cast_tuple07a = cast_tuple07a.new();
	var z: cast_tuple07a = cast_tuple07b.new();
	def main(a: int, b: int) -> int {
		var cAB = cast<(void, cast_tuple07a), (void, cast_tuple07b)>;
		var cAA = cast<(void, cast_tuple07a), (void, cast_tuple07a)>;
		if (a == 0) {
			var r: (void, cast_tuple07a);
			if (b == 0) r = cAB((), x);
			if (b == 1) r = cAB((), y);
			if (b == 2) r = cAB((), z);
			return 13;
		}
		if (a == 1) {
			var r: (void, cast_tuple07a);
			if (b == 0) r = cAA((), x);
			if (b == 1) r = cAA((), y);
			if (b == 2) r = cAA((), z);
			return 14;
		}
		return 42;
	}
	def cast<F, T>(o: F) -> T {
		return T.!(o);
	}
}
