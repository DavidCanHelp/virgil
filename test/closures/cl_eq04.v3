//@execute 0=true; 1=true; 2=false; 3=false; 4=false; 5=true; 6=false 
component cl_eq04 {
	def main(a: int) -> bool {
		if (a == 0) return close0(add, 1) == close0(add, 1);
		if (a == 1) return close0(add, 2) == close0(add, 2);
		if (a == 2) return close0(add, 1) == close0(add, 3);
		if (a == 3) return close1(add, 1) == close0(add, 1);
		if (a == 4) return close1(add, 2) == close1(add, 1);
		if (a == 5) return close1(add, 1) == close1(add, 1);
		return false;
	}
	def close0(f: (int, int) -> int, i: int) -> int -> int {
		return f(_, i);
	}
	def close1(f: (int, int) -> int, i: int) -> int -> int {
		return f(i, _);
	}
	def add(a: int, b: int) -> int { return a + b; }
}
