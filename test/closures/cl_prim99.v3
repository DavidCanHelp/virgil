//@execute = 252
component cl_prim99 {
	var count: int;
	def main() -> int {
		test(int.==,  11, 2);
		test(int.!=,  11, 2);
		test(int.+,   11, 2);
		test(int.-,   11, 2);
		test(int.*,   11, 2);
		test(int./,   11, 2);
		test(int.%,   11, 2);
		test(int.&,   11, 2);
		test(int.|,   11, 2);
		test(int.^,   11, 2);
		test(int.#<<, 11, 2);
		test(int.#>>, 11, 2);
		test(int.<,   11, 2);
		test(int.>,   11, 2);
		test(int.<=,  11, 2);
		test(int.>,   11, 2);

		test(byte.==,  '1', '2');
		test(byte.!=,  '1', '2');
		test(byte.<,   '1', '2');
		test(byte.>,   '1', '2');
		test(byte.<=,  '1', '2');
		test(byte.>=,  '1', '2');

		test(bool.==, true, false);
		test(bool.==, true, false);
		test(bool.&&, true, false);
		test(bool.||, true, false);

		test(void.==, (), ());
		test(void.!=, (), ());

		return count;
	}
	def test<A, B>(f: (A, A) -> B, a1: A, a2: A) {
		var expect = f(a1, a2);

		var a = f(a1, _);
		var b = f(a2, _);
		var c = f(_, a1);
		var d = f(_, a2);

		check(a(a2) == expect);
		check(d(a1) == expect);
		check(a(a2) == d(a1));

		check(a != b);
		check(a != c);
		check(a != d);
		check(b != c);
		check(b != d);
		check(c != d);

		check(a == f(a1, _));
		check(b == f(a2, _));
		check(c == f(_, a1));
		check(d == f(_, a2));
	}
	def check(b: bool) {
		if (b) count++;
	}
}
