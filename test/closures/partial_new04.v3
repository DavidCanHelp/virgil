//@execute (1,2,3)=17; (4,5,9)=56; (-3,2,-2)=-26
class partial_new04a {
	var r: int;
	new(a: int, b: int, c: int) { r = 2 * a - 3 * b + 7 * c; }
}
component partial_new04 {
	var expect: int;
	var failed: int;
	def main(a: int, b: int, c: int) -> int {
		failed = 0;
		expect = partial_new04a.new(a, b, c).r;
		return test3(partial_new04a.new, a, b, c);
	}
	def test3(f: (int, int, int) -> partial_new04a, p1: int, p2: int, p3: int) -> int {
		check(f(p1, _,  _), (p2, p3));
		check(f(_,  p2, _), (p1, p3));
		check(f(_,  _,  p3), (p1, p2));

		test2(f(p1, _,  _), p2, p3);
		test2(f(_,  p2, _), p1, p3);
		test2(f(_,  _,  p3), p1, p2);

		return if(failed == 0, expect);
	}
	def test2(f: (int, int) -> partial_new04a, p1: int, p2: int) {
		check(f(p1, _), p2);
		check(f(_, p2), p1);
	}
	def check<P>(f: P -> partial_new04a, p: P) {
		if (expect != f(p).r) failed++;
	}
}
