// Copyright 2019 Google Inc. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

// The "System" component for the Wasm/JS target.
// TODO: implement the system component in terms of JS imports.
component System {
	// change the permissions of a file
	def chmod(fileName: string, mode: int);
	// open a file
	def fileOpen(fileName: string, read: bool) -> int;
	// close a file
	def fileClose(fd: int);
	// read a single byte from a file
	def fileRead(fd: int) -> byte;
	// write some bytes to the file
	def fileWriteK(fd: int, data: Array<byte>, offset: int, len: int);
	// calculate bytes remaining to be read from file
	def fileLeft(fd: int) -> int;
	// load a file into a byte array
	def fileLoad(fileName: string) -> Array<byte>;
	// print a character to standard out
	def putc(ch: byte);
	// print an integer (in decimal) to standard out
	def puti(i: int);
	// print a string (as bytes) to standard out
	def puts(str: string);
	// prints a newline character to standard out
	def ln();
	// output an error, stacktrace, and exit
	def error(ex: string, msg: string);
	// get ticks in milliseconds
	def ticksMs() -> int;
	// get ticks in microseconds
	def ticksUs() -> int;
	// get ticks in nanoseconds
	def ticksNs() -> int;
}
