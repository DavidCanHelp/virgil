// Copyright 2015 Google Inc. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

// Collects statistics about allocated memory and the garbage collector's
// performance.
component GcStats {
	var gc_count: int;		// number of GCs performed
	var collection_us: long;	// total microseconds for GC
	var allocated_bytes: long;	// allocated bytes (excluding current cycle)
	var collected_bytes: long;	// total bytes live at beginning of collections
	var survived_bytes: long;	// total bytes surviving collections
	var gc_current_allocated: void -> int;	// gets the allocated bytes in current cycle

	// Gets the total amount of bytes allocated in this and previous cycles.
	def total_allocated_bytes() -> long {
		return collected_bytes + gc_current_allocated();
	}
	def print() {
		System.puti(int.!(total_allocated_bytes()));
		System.puts(" bytes allocated, ");
		System.puti(int.!(gc_count));
		System.puts(" GCs");
		if (gc_count > 0) {
			System.puts(", ");
			System.puti(int.!(collection_us / gc_count));
			System.puts(" us avg");

			var s = survived_bytes;
			var c = collected_bytes;
			while (c > 1000000) {
				s = s #>> 1;
				c = c #>> 1;
			}
			var rate = u32.!(s) * 1000 / u32.!(c);
			System.puts(", ");
			System.puti(int.!(rate / 10));
			System.puts(".");
			System.puti(int.!(rate % 10));
			System.puts(" % survival");
		}
		System.ln();
	}
}