enum ExternalKind(code: byte) {
	Function(0),
	Table(1),
	Memory(2),
	Global(3)
}
class WasmGlobal(global_index: int) {
	var vtype: ValueType;
}
class WasmFunction(func_index: int) {
	var name: string;
	var sig_index: int;
	var sig: FunctionSig;
	var body_start: int;
	var body_end: int;
}
class WasmDataSegment(segment_index: int) {
	var dest_addr: u32;
	var data_start: int;
	var data_end: int;
}
class WasmImport(module_name: string, func_name: string, kind: ExternalKind, import_index: int) {
	var sig_index: int;
	var sig: FunctionSig;
        var min_size: u32;
        var has_max: bool;
        var max_size: u32;
        var global_type: ValueType;
}
class WasmExport(kind: ExternalKind, export_index: int) {
	var name: string;
	var func_index: int;
}
class WasmTable {
	var min_entries: u32;
	var max_entries: u32;
}
class WasmMemory {
	var min_pages: u32;
	var max_pages: u32;
}
class WasmInit(table_index: int) {
	var base: InitExpr;
	var entries: Array<int>;
}
class WasmModule {
	var startFunction: int;

	def memories = Vector<WasmMemory>.new();
	def globals = Vector<WasmGlobal>.new();
	def signatures = Vector<FunctionSig>.new();
	def functions = Vector<WasmFunction>.new();
	def data_segments = Vector<WasmDataSegment>.new();
	def tables = Vector<WasmTable>.new();
	def imports = Vector<WasmImport>.new();
	def exports = Vector<WasmExport>.new();
	def inits = Vector<WasmInit>.new();
}
class WasmModuleInstance {
	var module: WasmModule;
	var memory: Array<byte>;
}
