// Copyright 2020 Ben L. Titzer. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

component Float {
	def FLOAT32 = Float_TypeCon.new(8, 23, "float").create0();
	def FLOAT64 = Float_TypeCon.new(11, 52, "double").create0();
}

class Float_TypeCon extends Member_TypeCon {
	def exp_width: byte;
	def fraction_width: byte;
	def total_width = byte.!(1 + exp_width + fraction_width);
	new(exp_width, fraction_width, name: string)
		super(name, V3Kind.FLOAT, 0, TypeUtil.globalCache) { }
		
	// Members:
	// T.nan	NaN value
	// T.infinity	positive infinity value
	// v.bits	raw bit representation as an integer
	// v.exponent	exponent
	// v.sign	sign (0, -1)
	// v.fraction	fraction field
	// T.abs()	absolute value
	// T.ceil()	round up to nearest integer
	// T.floor()	round down to nearest integer
	// T.sqrt()	square root
	// T.pow()	x^y
	// T.log()	natural logarithm
	// T.exp()	e^x

	// Infix operators:
	// v + v	addition
	// v - v	subtraction
	// v * v	multiplication
	// v / v	division
	// v % v	modulus
	// v == v	equality
	// v != v	inequality
	// v < v	less than
	// v <= v	less than or equal
	// v > v	greater than
	// v >= v	greater than or equal
	// v ?= v	generalized comparison (less, equal, greater, unordered)
}
