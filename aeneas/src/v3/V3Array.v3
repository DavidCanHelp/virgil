// Copyright 2011 Google Inc. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

// Utility methods for dealing with array types in Virgil
component V3Array {
	var TYPECON = V3Array_TypeCon.new();

	def newValue(dynamic: DynamicPortion, atype: Type, vals: Array<Val>) -> Val {
		var record = dynamic.newRecord(atype, vals.length);
		for (i = 0; i < vals.length; i++) {
			record.values(i) = vals(i);
		}
		return record;
	}
	def newType(elementType: Type) -> Type {
		return TypeUtil.newType(TYPECON, Lists.cons1(elementType));
	}
	def elementType(atype: Type) -> Type {
		if (atype.typeCon != TYPECON) return V3.fail("not an array type");
		return atype.nested.head;
	}
}

// The type constructor for arrays.
class V3Array_TypeCon extends Basic_TypeCon {
	var typeParams: List<TypeParam>;
	var arrayCache: Map<Type, Type>;

	new() : super("Array", V3Kind.ARRAY, 1) {
		var token = Token.new("<builtin>", "T", 0, 0);
		typeParams = List<TypeParam>.new(TypeParam.new(token), null);
		arrayCache = TypeUtil.newTypeMap();
	}
	def create(open: bool, types: List<Type>) -> Type {
		var etype: Type = types.head;
		var atype = arrayCache.get(etype);
		if (atype == null) {
			atype = Type.new(open, types, this);
			arrayCache.set(etype, atype);
		}
		return atype;
	}
}
