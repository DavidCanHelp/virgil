// Copyright 2022 Ben L. Titzer. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

component V3Ref {
	def TYPECON = V3Ref_TypeCon.new(null, TypeUtil.globalCache);
}

class V3Ref_TypeCon extends TypeCon {
	def structDecl: VstStruct;

	new(structDecl, typeCache: TypeCache)
		super("Ref", V3Kind.REF, if(structDecl == null, 1, 0), typeCache) {
		singleton = RefType.new(uid, structDecl, this);
	}
	def renderType(buffer: StringBuilder, list: List<Type>) -> StringBuilder {
		buffer.puts(name);
		if (structDecl != null) buffer.putc('<').puts(structDecl.fullName).putc('>');
		return buffer;
	}
}

class RefType extends Type {
	def structDecl: VstStruct;

	new(hash: int, structDecl, typeCon: TypeCon) super(hash, typeCon, null) { }
}
