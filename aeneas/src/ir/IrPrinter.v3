// Copyright 2011 Google Inc. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

class IrPrinter {
	def prog: Program;
	var printIc: bool;
	var printSsa: bool;
	new(prog) { }	
	def print() {
		prog.getIr().classes.apply(printIrClass);
	}
	def printIrClass(ic: IrClass) {
		Terminal.cyan("#%1", ic.uid);
		if (V3.isClass(ic.ctype)) Terminal.print(" class ");
		if (V3.isArray(ic.ctype)) Terminal.print(" array ");
		if (V3.isComponent(ic.ctype)) Terminal.print(" component ");
		Terminal.green("%1 ", ic.ctype.render);
		var superType = V3.getSuperType(ic.ctype);
		if (superType != null) {
			Terminal.print("extends ");
			Terminal.cyan("%1 ", superType.render);
		}
		printFacts(ic.facts);
		Terminal.print(" {\n");
		for (f in ic.fields) printField(f, ic);
		for (m in ic.methods) printMethod(m, ic);
		Terminal.print("}\n");
	}
	def printField(f: IrField, ic: IrClass) {
		if (f == null) return;
		printOverride(f, ic);
		Terminal.cyan("%1", f.index);
		Terminal.cyan("#%1", f.uid);
		Terminal.print(": field  ");
		Terminal.green("%1 ", f.render);
		Terminal.print(": ");
		Terminal.cyan("%1 ", f.fieldType.render);
		printFacts(f.facts);
		Terminal.ln();
	}
	def printMethod(m: IrMethod, ic: IrClass) {
		if (m == null) return;
		printMethodName(m, ic, false);
		if (printSsa && m.ssa != null) doSsa(m.ssa);
		if (printIc && m.ic != null) doIc(m.ic);
	}
	def printMethodName(m: IrMethod, ic: IrClass, qualified: bool) {
		printOverride(m, ic);
		var funcType = Function.newType(Tuple.newType(Lists.fromArray(m.paramTypes)), m.returnType);
		Terminal.cyan("%1", m.index);
		Terminal.cyan("#%1", m.uid);
		Terminal.print(": method ");
		if (qualified) Terminal.green("%1.", m.container.ctype.render);
		Terminal.green("%1 ", m.render);
		Terminal.print(": ");
		Terminal.cyan("%1 ", funcType.render);
		printFacts(m.facts);
		Terminal.ln();
	}
	def doIc(icm: IcMethod) {
		IcPrinter.new(prog, null).printCode(icm.iccode);
	}
	def doSsa(ssa: SsaRegion) {
		SsaPrinter.new(prog).printRegion(ssa);
	}
	def printOverride(m: IrMember, ic: IrClass) {
		if (m.container != ic) Terminal.print("   ");
		else Terminal.yellow("  *", 0);
	}
	def printFacts(facts: int) {
		if (facts != 0) {
			var buf = Strings.toBuffer("[").puts(Terminal.CTRL_YELLOW);
			Facts.renderFacts(buf, facts);
			Terminal.putb(buf.puts(Terminal.CTRL_DEFAULT).putc(']'));
		}
	}
}
