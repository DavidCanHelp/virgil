// Copyright 2011 Google Inc. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

// A map from SsaInstr -> SsaInstr.
// This implementation "cheats" by using a field in the SsaInstr dedicated
// for this purpose. Thus only one map may be active at a time and it must
// be "cleared" after use.
// TODO: refactor SsaMap to be a 1 -> N map?
class SsaMap {
	private var mapped: List<SsaInstr>;

	def get(i: SsaInstr) -> SsaInstr {
		return i.instrVal;
	}
	def set(i: SsaInstr, t: SsaInstr) {
		if (i.instrVal == null) mapped = List.new(i, mapped);
		i.instrVal = t;
	}
	def clear() {
		for (l = mapped; l != null; l = l.tail) l.head.instrVal = null;
		mapped = null;
	}
}
