// Copyright 2010 Google Inc. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

// A utility to print progress indicators for tests (e.g. oXoooXXooo ...)
class ProgressPrinter(total: int) {
	var passed: int;
	var current: string;
	var failed: int;
	var expectedFailed: int;
	var failures: List<(string, string)>;

	new() {
		Terminal.put1("##>%1\n", total);
	}

	def begin(testCase: string) {
		current = testCase;
		Terminal.put1("##+%1\n", testCase);
	}
	def pass() {
		passed++;
		Terminal.put("##-ok\n");
	}
	def expectedFail(report: string) {
		passed++;
		expectedFailed++;
		Terminal.put(Terminal.CTRL_YELLOW);
		Terminal.put("expected failure");
		Terminal.put(Terminal.CTRL_DEFAULT);
		Terminal.put(" -> ");
		Terminal.putln(report);
		Terminal.put("##-ok\n");
	}
	def unexpectedPass() {
		failed++;
		Terminal.put("##-fail: expected failure, but passed\n");
	}
	def fail(report: string) {
		failed++;
		Terminal.put1("##-fail: %1\n", report);
	}
	def space() {
		var done = passed + failed;
		if (done % 10 == 0 || done == total) {
			Terminal.sp();
		}
		if (done % 50 == 0 || done == total) {
			Terminal.put(Terminal.CTRL_DEFAULT);
			Terminal.puti(done);
			Terminal.put(" of ");
			Terminal.puti(total);
			Terminal.ln();
		}
	}
	def printFailure(a: string, b: string) {
		Terminal.put(Terminal.CTRL_RED);
		Terminal.put(a);
		Terminal.put(Terminal.CTRL_DEFAULT);
		Terminal.put(": ");
		Terminal.putln(b);
	}
}
